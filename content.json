[{"title":"Graphviz绘图","date":"2019-07-24T06:00:24.000Z","path":"2019/07/24/Tutorial/graphviz/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; left: -4em; } pre.numberSource a.sourceLine::before { content: attr(title); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; } /* Alert */ code span.an { color: #008000; } /* Annotation */ code span.at { } /* Attribute */ code span.bu { } /* BuiltIn */ code span.cf { color: #0000ff; } /* ControlFlow */ code span.ch { color: #008080; } /* Char */ code span.cn { } /* Constant */ code span.co { color: #008000; } /* Comment */ code span.cv { color: #008000; } /* CommentVar */ code span.do { color: #008000; } /* Documentation */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.im { } /* Import */ code span.in { color: #008000; } /* Information */ code span.kw { color: #0000ff; } /* Keyword */ code span.op { } /* Operator */ code span.ot { color: #ff4000; } /* Other */ code span.pp { color: #ff4000; } /* Preprocessor */ code span.sc { color: #008080; } /* SpecialChar */ code span.ss { color: #008080; } /* SpecialString */ code span.st { color: #008080; } /* String */ code span.va { } /* Variable */ code span.vs { color: #008080; } /* VerbatimString */ code span.wa { color: #008000; font-weight: bold; } /* Warning */ Requirements Blog pandoc config filter graphviz.py Demo office example neural network simplest complicated case References Graph Visualization Software 1 Requirements sudo apt install pandoc sudo apt install graphviz graphviz-dev sudo apt install dot2tex sudo pip3 install pygraphviz pandocfilters 2 Blog 2.1 pandoc config My Blog Config pandoc: extra: - standalone: - highlight-style: haddock - number-offset: 0 - columns: 200 - css: /css/pandoc.css - filter: graphviz.py mathEngine: mathjax 2.2 filter graphviz.py #!/usr/bin/python3 &quot;&quot;&quot; Pandoc filter to process code blocks with class &quot;graph&quot; into graphviz-generated images. Requires pygraphviz, pandocfilters &quot;&quot;&quot; import os import sys import hashlib import pygraphviz from pandocfilters import toJSONFilter, Para, Image, get_filename4code from pandocfilters import get_caption, get_extension, get_value top_path = os.path.abspath(os.path.dirname(__file__)) dir_name = &#39;graph-image&#39; git_path = &#39;https://raw.githubusercontent.com/qrsforever/assets_blog_post/master/&#39; git_post = &#39;?sanitize=true&#39; def graphviz(key, value, format, meta): if key == &#39;CodeBlock&#39;: [[ident, classes, keyvals], code] = value if &quot;graph&quot; in classes: caption, typef, keyvals = get_caption(keyvals) prog, keyvals = get_value(keyvals, u&quot;prog&quot;, u&quot;dot&quot;) filetype = get_extension(format, &quot;svg&quot;, html=&quot;svg&quot;, latex=&quot;pdf&quot;) # dest = get_filename4code(graph, code, filetype) md5 = hashlib.sha1(code.encode(sys.getfilesystemencoding())).hexdigest() filename, _ = get_value(keyvals, u&quot;fileName&quot;) if filename is None: sys.stderr.write(&#39;not set filename in {}\\n&#39;) exit(-1) filename += &#39;.&#39; + filetype while True: try: datapath = meta[&#39;datapath&#39;][&#39;c&#39;] drafts_idx = datapath.find(&#39;_drafts&#39;) if drafts_idx &gt; 0: prefix = datapath[drafts_idx+8:-3] else: prefix = datapath[datapath.find(&#39;_posts&#39;)+7:-3] filepath = os.path.join(prefix, dir_name, filename) if drafts_idx &gt; 0: localpath = os.path.join(top_path, &quot;source/assets&quot;, filepath) remotepath = os.path.join(&quot;/assets&quot;, filepath) else: localpath = os.path.join(top_path, &quot;source/_assets&quot;, filepath) remotepath = os.path.join(git_path, filepath) + git_post if os.path.exists(localpath): if os.path.exists(localpath + &#39;.&#39; + md5): break else: os.system(&#39;rm -f %s*&#39; % localpath) dir = os.path.dirname(localpath) if not os.path.isdir(dir): os.makedirs(dir) os.system(&#39;touch %s.%s&#39; % (localpath, md5)) g = pygraphviz.AGraph(string=code) g.layout() g.draw(localpath, prog=prog) sys.stderr.write(&#39;Local Path [&#39; + localpath + &#39;]\\n&#39;) sys.stderr.write(&#39;Remote Path [&#39; + remotepath + &#39;]\\n&#39;) except Exception as e: sys.stderr.write(&#39;{}: not found datapath in meta, please patch/run.sh\\n&#39;.format(e)) exit(-1) finally: break image = Image([ident, classes, keyvals], caption, [remotepath, typef]) return Para([image]) if __name__ == &quot;__main__&quot;: toJSONFilter(graphviz) 3 Demo 3.1 docs attributes nodes shape dot guide 3.2 office example digraph G { bgcolor=&quot;#ffffff00&quot; subgraph cluster_0 { style=&quot;filled, rounded&quot;; color=&quot;#E6EAF2&quot; node [style=filled,color=white]; a0 -&gt; a1 -&gt; a2 -&gt; a3; a3 -&gt; a1 [label = &quot; -10&quot; color=red fontcolor=red]; label = &quot;System A&quot;; } subgraph cluster_1 { node [style=filled color=&quot;#E6EAF2&quot;]; b0 -&gt; b1 -&gt; b2 -&gt; b3; b0 -&gt; b2 [label = &quot; +12&quot; color=green fontcolor=green]; label = &quot;System B&quot;; style=&quot;dashed, rounded&quot; color=blue } start -&gt; a0; start -&gt; b0; a1 -&gt; b3; a3 -&gt; end; b3 -&gt; end; start [label=&quot;load&quot; shape=folder]; end [label=&quot;store&quot; shape=box3d]; } output: Demo 3.3 neural network 3.3.1 simplest digraph G { rankdir=LR; /* makes the directed graphs drawn from left to right */ splines=line; /* controls how the edges are represented */ nodesep=.05; /* forces edges to become invisible */ node [label=&quot;&quot;]; /* [ ] sets the default node property */ subgraph cluster_0 { color=white; node [style=solid,color=blue4, shape=circle]; x1 x2 x3; label = &quot;layer 1&quot;; } subgraph cluster_1 { color=white; node [style=solid,color=red2, shape=circle]; a12 a22 a32 a42 a52; label = &quot;layer 2&quot;; } subgraph cluster_2 { color=white; node [style=solid,color=red2, shape=circle]; a13 a23 a33 a43 a53; label = &quot;layer 3&quot;; } subgraph cluster_3 { color=white; node [style=solid,color=seagreen2, shape=circle]; O1 O2 O3 O4; label=&quot;layer 4&quot;; } x1 -&gt; a12; x1 -&gt; a22; x1 -&gt; a32; x1 -&gt; a42; x1 -&gt; a52; x2 -&gt; a12; x2 -&gt; a22; x2 -&gt; a32; x2 -&gt; a42; x2 -&gt; a52; x3 -&gt; a12; x3 -&gt; a22; x3 -&gt; a32; x3 -&gt; a42; x3 -&gt; a52; a12 -&gt; a13 a22 -&gt; a13 a32 -&gt; a13 a42 -&gt; a13 a52 -&gt; a13 a12 -&gt; a23 a22 -&gt; a23 a32 -&gt; a23 a42 -&gt; a23 a52 -&gt; a23 a12 -&gt; a33 a22 -&gt; a33 a32 -&gt; a33 a42 -&gt; a33 a52 -&gt; a33 a12 -&gt; a43 a22 -&gt; a43 a32 -&gt; a43 a42 -&gt; a43 a52 -&gt; a43 a12 -&gt; a53 a22 -&gt; a53 a32 -&gt; a53 a42 -&gt; a53 a52 -&gt; a53 a13 -&gt; O1 a23 -&gt; O1 a33 -&gt; O1 a43 -&gt; O1 a53 -&gt; O1 a13 -&gt; O2 a23 -&gt; O2 a33 -&gt; O2 a43 -&gt; O2 a53 -&gt; O2 a13 -&gt; O3 a23 -&gt; O3 a33 -&gt; O3 a43 -&gt; O3 a53 -&gt; O3 a13 -&gt; O4 a23 -&gt; O4 a33 -&gt; O4 a43 -&gt; O4 a53 -&gt; O4 } output: simplest 3.3.2 complicated case digraph G { rankdir = LR; splines=false; edge[style=invis]; /* hide the edges */ ranksep= 1.4; /* {...} specifies the scope of the node property */ { node [shape=circle, color=yellow, style=filled, fillcolor=yellow]; x0 [label=&lt;x&lt;sub&gt;0&lt;/sub&gt;&gt;]; a02 [label=&lt;a&lt;sub&gt;0&lt;/sub&gt;&lt;sup&gt;(2)&lt;/sup&gt;&gt;]; a03 [label=&lt;a&lt;sub&gt;0&lt;/sub&gt;&lt;sup&gt;(3)&lt;/sup&gt;&gt;]; } { node [shape=circle, color=chartreuse, style=filled, fillcolor=chartreuse]; x1 [label=&lt;x&lt;sub&gt;1&lt;/sub&gt;&gt;]; x2 [label=&lt;x&lt;sub&gt;2&lt;/sub&gt;&gt;]; x3 [label=&lt;x&lt;sub&gt;3&lt;/sub&gt;&gt;]; } { node [shape=circle, color=dodgerblue, style=filled, fillcolor=dodgerblue]; a12 [label=&lt;a&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;(2)&lt;/sup&gt;&gt;]; a22 [label=&lt;a&lt;sub&gt;2&lt;/sub&gt;&lt;sup&gt;(2)&lt;/sup&gt;&gt;]; a32 [label=&lt;a&lt;sub&gt;3&lt;/sub&gt;&lt;sup&gt;(2)&lt;/sup&gt;&gt;]; a42 [label=&lt;a&lt;sub&gt;4&lt;/sub&gt;&lt;sup&gt;(2)&lt;/sup&gt;&gt;]; a52 [label=&lt;a&lt;sub&gt;5&lt;/sub&gt;&lt;sup&gt;(2)&lt;/sup&gt;&gt;]; a13 [label=&lt;a&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;(3)&lt;/sup&gt;&gt;]; a23 [label=&lt;a&lt;sub&gt;2&lt;/sub&gt;&lt;sup&gt;(3)&lt;/sup&gt;&gt;]; a33 [label=&lt;a&lt;sub&gt;3&lt;/sub&gt;&lt;sup&gt;(3)&lt;/sup&gt;&gt;]; a43 [label=&lt;a&lt;sub&gt;4&lt;/sub&gt;&lt;sup&gt;(3)&lt;/sup&gt;&gt;]; a53 [label=&lt;a&lt;sub&gt;5&lt;/sub&gt;&lt;sup&gt;(3)&lt;/sup&gt;&gt;]; } { node [shape=circle, color=coral1, style=filled, fillcolor=coral1]; O1 [label=&lt;a&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;(4)&lt;/sup&gt;&gt;]; O2 [label=&lt;a&lt;sub&gt;2&lt;/sub&gt;&lt;sup&gt;(4)&lt;/sup&gt;&gt;]; O3 [label=&lt;a&lt;sub&gt;3&lt;/sub&gt;&lt;sup&gt;(4)&lt;/sup&gt;&gt;]; O4 [label=&lt;a&lt;sub&gt;4&lt;/sub&gt;&lt;sup&gt;(4)&lt;/sup&gt;&gt;]; } { rank=same; /* Rank constraints on the nodes in a subgraph. */ x0-&gt;x1-&gt;x2-&gt;x3; /* specifies the relative position of the four nodes */ } { rank=same; a02-&gt;a12-&gt;a22-&gt;a32-&gt;a42-&gt;a52; } { rank=same; a03-&gt;a13-&gt;a23-&gt;a33-&gt;a43-&gt;a53; } { rank=same; O1-&gt;O2-&gt;O3-&gt;O4; } a02-&gt;a03; // prevent tilting l0 [shape=plaintext, label=&quot;layer 1 (input layer)&quot;]; l0-&gt;x0; {rank=same; l0;x0}; l1 [shape=plaintext, label=&quot;layer 2 (hidden layer)&quot;]; l1-&gt;a02; {rank=same; l1;a02}; l2 [shape=plaintext, label=&quot;layer 3 (hidden layer)&quot;]; l2-&gt;a03; {rank=same; l2;a03}; l3 [shape=plaintext, label=&quot;layer 4 (output layer)&quot;]; l3-&gt;O1; {rank=same; l3;O1}; edge[style=solid, tailport=e, headport=w]; /* let all the edges point to the same position. */ {x0; x1; x2; x3} -&gt; {a12;a22;a32;a42;a52}; {a02;a12;a22;a32;a42;a52} -&gt; {a13;a23;a33;a43;a53}; {a03;a13;a23;a33;a43;a53} -&gt; {O1,O2,O3,O4}; } output: complicated 3.4 others 3.4.1 matrix digraph matrix { 723-&gt;722 505-&gt;732 729-&gt;732 731-&gt;730-&gt;729 726-&gt;729 730-&gt;726 726-&gt;810-&gt;725 729-&gt;810-&gt;725 729-&gt;733-&gt;792-&gt;793 722-&gt;731 732-&gt;737-&gt;736-&gt;733 733-&gt;810-&gt;725 729-&gt;505 736-&gt;506 505-&gt;506 179-&gt;759 759-&gt;725 759-&gt;737 759-&gt;769-&gt;768-&gt;778 768-&gt;303 737-&gt;739-&gt;736-&gt;778 736-&gt;769 778-&gt;303 506-&gt;303 769-&gt;506 769-&gt;780 778-&gt;779 736-&gt;773-&gt;774-&gt;779-&gt;780 779-&gt;303 780-&gt;303 506-&gt;780 505-&gt;724 } output: graphviz matrix 4 References http://www.nrstickley.com/pandoc-markdown http://github.com/qrsforever/git-blog-setting https://zhu45.org/posts/2017/May/25/draw-a-neural-network-through-graphviz","tags":[{"name":"How","slug":"How","permalink":"https://qrsforever.github.io/tags/How/"}]},{"title":"论文在线","date":"2019-07-24T02:00:08.000Z","path":"2019/07/24/Story/Website/papers/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Paper Search Other 1 Paper paperswithcode Github pwc Github arxiv arXiv-sanity arXiv-vanity computer-vision 通天塔翻译 jmlr nips 2 Search Semantic scholar Google scholar 3 Other Scirate","tags":[{"name":"Website","slug":"Website","permalink":"https://qrsforever.github.io/tags/Website/"}]},{"title":"(原创)卷积三种模式使用numpy实现","date":"2019-07-23T05:52:26.000Z","path":"2019/07/23/ML/Guide/conv_mode/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Mode full same valid Codes References 1 Mode Below the output of three modes: Filter size must be odd number, eg: 3x3, 5x5. here we consider the situation which the size of image is not less than the size of filter. let image: m x m and filter: n x n mode size of ouptut extend matrix size full m + n - 1 m + 2(n - 1) same m m + n - 1 valid m - n + 1 m if: A is 6x6, m = 6 V is 3x3, n = 3 1.1 full mode size of ouptut extend matrix size full 6+3-1 = 8 6+2*(3-1) = 10 1.2 same mode size of ouptut extend matrix size same 6 6+3-1 = 8 1.3 valid mode size of ouptut extend matrix size valid 6-3+1 = 4 6 2 Codes Only using numpy implement the conv2d, and compare the ouput with scipy.signal.convolve2d.","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"},{"name":"Guide","slug":"Guide","permalink":"https://qrsforever.github.io/tags/Guide/"}]},{"title":"(原创)神经网络之反向传播实例","date":"2019-07-19T13:41:28.000Z","path":"2019/07/19/ML/Scratch/backpropagation_algorithm/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Description Drawit Codes References 1 Description Implement the backpropagation algorithm in python, but not use third libs(numpy, pandas...) Demo is a standard neural network structure: one input layer, one hiden layer and one output layer. The activite function of the hiden and ouput nodes is sigmoid. The evaluation of the backpropagation algorithm use cross validation K-folds which make good use for limited dataset. 2 Algorithm The backpropagation equations provide us with a way of computing the gradient of the cost function. Let's explicitly write this out in the form of an algorithm: Input x: Set the corresponding activation \\(a^1\\) for the input layer. Feedforward: For each \\(l = 2, 3, \\ldots, L\\) compute \\(z^l=w^la^{l−1}+b^l and a^l=\\sigma(z^l)\\). Output error \\(\\delta^L\\): Compute the vector \\(\\nabla_a C \\odot \\sigma&#39;(z^L)\\). Backpropagate the error: For each \\(l = L-1, L-2, \\ldots, 2\\) compute \\(\\delta^{l} = ((w^{l+1})^T \\delta^{l+1}) \\odot \\sigma&#39;(z^{l})\\). Output: The gradient of the cost function is given by \\(\\frac{\\partial C}{\\partial w^l_{jk}} = a^{l-1}_k \\delta^l_j\\) and \\(\\frac{\\partial C}{\\partial b^l_j} = \\delta^l_j\\). 3 Drawit neuron *********** *** *** ** output ** * * * sigmoid(WX + b) * * * ** weights ** *** *** *********** delta: the middle signal. the derivative of the final activite function 4 Codes 百度云盘Datasets 4.1 demo 1","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"},{"name":"Scratch","slug":"Scratch","permalink":"https://qrsforever.github.io/tags/Scratch/"}]},{"title":"数据集","date":"2019-07-19T12:59:12.000Z","path":"2019/07/19/Story/Website/dataset/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 百度云盘Dataset 1 Statistics pass 2 ML UCI Kaggle","tags":[{"name":"Website","slug":"Website","permalink":"https://qrsforever.github.io/tags/Website/"}]},{"title":"(原创)神经网络之卷积过程实例","date":"2019-07-19T07:33:06.000Z","path":"2019/07/19/ML/Scratch/nn_convolution/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Standard Neural Network and Convolution Nerual Network References 1 Introduction 1.1 Notation symbols definitions used in full text is here 1.2 Full Connected Network for all errors(loss) function is: \\[ \\{E^{(n)}\\} = \\dfrac{1}{2} \\sum^{N}_{n = 1} \\sum^{c}_{k = 1} \\big( t^{(n)}_k - y^{(n)}_k \\big)^2 \\] for one item error of them is: \\[ E^{(n)} = E = \\dfrac{1}{2} \\sum^{c}_{k = 1} \\big( t^{(n)}_k - y^{(n)}_k \\big)^2 = \\dfrac{1}{2} \\begin{Vmatrix} \\mathbf{t}^{(n)} - \\mathbf{y}^{(n)} \\end{Vmatrix}^2_2 \\label{error} \\tag{1} \\] at times, we simplify the equation by emitting the superscript \\({(n)}\\), just below: \\[ E = \\dfrac{1}{2} \\begin{Vmatrix} \\mathbf{t} - \\mathbf{y} \\end{Vmatrix}^2_2 \\label{error_one} \\tag{2} \\] the last output layer \\(\\mathbf{y}^{[L]}\\) breif as: \\[ \\begin{align*} \\mathbf{y} &amp;= \\mathbf{a}^{[L]} \\\\ &amp;= \\mathbf{a}^{[L]}\\color{Red}{\\bigg(\\mathbf{z}^{[L]}\\bigg)} \\\\ &amp;= \\mathbf{a}^{[L]}\\color{Red}{\\bigg(\\mathbf{W}^{[L]} \\mathbf{a}^{[L-1]}\\color{Blue}{\\big(\\mathbf{z}^{[L-1]}\\big)} + \\mathbf{b}^{[L]}\\bigg)} \\\\ &amp;= \\mathbf{a}^{[L]}\\color{Red}{\\bigg(\\mathbf{W}^{[L]} \\mathbf{a}^{[L-1]}\\color{Blue}{\\big(\\mathbf{W}^{[L-1]} \\mathbf{a}^{[L-2]}\\color{Green}{(\\mathbf{z}^{[L-2]})} + \\mathbf{b}^{[L-1]}\\big)} + \\mathbf{b}^{[L]}\\bigg)} \\\\ &amp;= \\mathbf{a}^{[L]}\\color{Red}{\\bigg(\\mathbf{W}^{[L]} \\mathbf{a}^{[L-1]}\\color{Blue}{\\big(\\mathbf{W}^{[L-1]} \\mathbf{a}^{[L-2]}\\color{Green}{(\\mathbf{W}^{[L-2]} \\mathbf{a}^{[L-3]}\\color{Black}{(\\mathbf{z}^{[L-3]})} + \\mathbf{b}^{[L-2]})} + \\mathbf{b}^{[L-1]}\\big)} + \\mathbf{b}^{[L]}\\bigg)} \\\\ &amp;= \\cdots \\end{align*} \\label{y_equ} \\tag{3} \\] let's have a look the derivative \\(\\delta^{[L]}\\) of the error with respect to the neurons \\(z^{[L]}\\) of the last output layer: from the equation \\(\\ref{error_one}\\) \\[ \\dfrac{\\partial E}{\\partial {z^{[L]}}} = (\\mathbf{y}-\\mathbf{t}) \\odot \\dfrac{\\partial \\mathbf{a}^{[L]}(z^{[L]})}{\\partial {z^{[L]}}} \\] pre layer of L, using the chain rule of derivative: \\[ \\begin{align*} \\dfrac{\\partial E}{\\partial {z^{[L-1]}}} \\\\ = \\dfrac{\\partial \\mathbf{a}^{[L-1]}(z^{[L-1]})}{\\partial {z^{[L-1]}}} \\end{align*} \\] 1.3 Convolutional Neural Network 1.4 Standard Neural Network and Convolution Nerual Network The difference between them is the calculate, one is matrix multiplication and another is convolution, apart from this, they are nearly the same. weights sharing below we display the convert: matrix: +----------------------+ weights | | | 1 2 3 | +-------------+ +--------------+ | = = | | 1 2 | | 23 33 | | | | | | | | 4 5 6 | * | | = | | | = = | | 3 4 | | 53 63 | | | +-------------+ +--------------+ | 7 8 9 | | | first rotate 180 mode = &quot;valid&quot; +----------------------+ Image Kernel or Convolution matrices or Mask 3 X 3 2 X 2 ---------------------------------------------------------------------------------- vector: 1 --------------\\ WX + b * 4 \\ 2 --------------\\ \\ * 3 \\ \\ 4 + 6 3 + -------------&gt; 23 * 2 / / 8 + 5 4 --------------/ / * 1 / 33 weight sharing &lt;-- 5 --------------/ * 4 \\ 53 6 -------------\\ \\ * 3 \\ \\ 20 + 18 7 + --------------&gt; 63 * 2 / / 16 + 9 8 -------------/ / * 1 / 9 -------------/ inputs hiden 9 X 1 4 X 1 ---------------------------------------------------------------------------------- the forward feed and back propagation. 2 References http://www.songho.ca/dsp/convolution/convolution2d_example.html?source=post_page https://grzegorzgwardys.wordpress.com/2016/04/22/8/ https://www.analyticsvidhya.com/blog/2018/12/guide-convolutional-neural-network-cnn/ https://becominghuman.ai/only-numpy-implementing-convolutional-neural-network-using-numpy-deriving-forward-feed-and-back-458a5250d6e4 https://www.kdnuggets.com/2018/04/building-convolutional-neural-network-numpy-scratch.html https://codereview.stackexchange.com/questions/133251/a-cnn-in-python-without-frameworks https://datascience-enthusiast.com/DL/Convolution_model_Step_by_Stepv2.html Notes on Convolutional Neural Networks How the backpropagation algorithm works https://qrsforever.github.io/2019/05/30/ML/Guide/activation_functions https://qrsforever.github.io/2019/07/23/ML/Guide/conv_mode","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"},{"name":"Scratch","slug":"Scratch","permalink":"https://qrsforever.github.io/tags/Scratch/"}]},{"title":"国内镜像","date":"2019-07-18T02:31:07.000Z","path":"2019/07/18/Tools/How/china_images/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; left: -4em; } pre.numberSource a.sourceLine::before { content: attr(title); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; } /* Alert */ code span.an { color: #008000; } /* Annotation */ code span.at { } /* Attribute */ code span.bu { } /* BuiltIn */ code span.cf { color: #0000ff; } /* ControlFlow */ code span.ch { color: #008080; } /* Char */ code span.cn { } /* Constant */ code span.co { color: #008000; } /* Comment */ code span.cv { color: #008000; } /* CommentVar */ code span.do { color: #008000; } /* Documentation */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.im { } /* Import */ code span.in { color: #008000; } /* Information */ code span.kw { color: #0000ff; } /* Keyword */ code span.op { } /* Operator */ code span.ot { color: #ff4000; } /* Other */ code span.pp { color: #ff4000; } /* Preprocessor */ code span.sc { color: #008080; } /* SpecialChar */ code span.ss { color: #008080; } /* SpecialString */ code span.st { color: #008080; } /* String */ code span.va { } /* Variable */ code span.vs { color: #008080; } /* VerbatimString */ code span.wa { color: #008000; font-weight: bold; } /* Warning */ apt mvn pip npm gradle 1 apt modify /etc/apt/sources.list 1.1 阿里 deb-src http://archive.ubuntu.com/ubuntu xenial main restricted deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe deb http://mirrors.aliyun.com/ubuntu/ xenial universe deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse deb http://archive.canonical.com/ubuntu xenial partner deb-src http://archive.canonical.com/ubuntu xenial partner deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse 1.2 清华大学 deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security universe deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security multiverse 1.3 东北大学 deb-src http://mirror.neu.edu.cn/ubuntu/ xenial main restricted deb http://mirror.neu.edu.cn/ubuntu/ xenial main restricted deb-src http://mirror.neu.edu.cn/ubuntu/ xenial restricted multiverse universe deb http://mirror.neu.edu.cn/ubuntu/ xenial-updates main restricted deb-src http://mirror.neu.edu.cn/ubuntu/ xenial-updates main restricted multiverse universe deb http://mirror.neu.edu.cn/ubuntu/ xenial universe deb http://mirror.neu.edu.cn/ubuntu/ xenial-updates universe deb http://mirror.neu.edu.cn/ubuntu/ xenial multiverse deb http://mirror.neu.edu.cn/ubuntu/ xenial-updates multiverse deb http://mirror.neu.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse deb-src http://mirror.neu.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse deb http://archive.canonical.com/ubuntu xenial partner deb-src http://archive.canonical.com/ubuntu xenial partner deb http://mirror.neu.edu.cn/ubuntu/ xenial-security main restricted deb-src http://mirror.neu.edu.cn/ubuntu/ xenial-security main restricted multiverse universe deb http://mirror.neu.edu.cn/ubuntu/ xenial-security universe deb http://mirror.neu.edu.cn/ubuntu/ xenial-security multiverse 2 mvn set your project's settings.xml &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;settings&gt; &lt;localRepository&gt;/home/lidong/.m2/repository&lt;/localRepository&gt; &lt;mirrors&gt; &lt;!-- 使用国内仓库 --&gt; &lt;mirror&gt; &lt;id&gt;alimaven&lt;/id&gt; &lt;name&gt;aliyun maven&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;/mirror&gt; &lt;/mirrors&gt; &lt;profiles&gt; &lt;profile&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;name&gt;local private nexus&lt;/name&gt; &lt;url&gt;http://maven.oschina.net/content/groups/public/&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;false&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;pluginRepositories&gt; &lt;pluginRepository&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;name&gt;local private nexus&lt;/name&gt; &lt;url&gt;http://maven.oschina.net/content/groups/public/&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;false&lt;/enabled&gt; &lt;/snapshots&gt; &lt;/pluginRepository&gt; &lt;/pluginRepositories&gt; &lt;/profile&gt; &lt;/profiles&gt; &lt;activeProfiles&gt; &lt;!-- &lt;activeProfile&gt;nexus&lt;/activeProfile&gt; --&gt; &lt;/activeProfiles&gt; &lt;/settings&gt; 3 pip modify ~/.config/pip/pip.conf, then don't use sudo [global] # index-url = https://pypi.tuna.tsinghua.edu.cn/simple index-url = https://mirrors.aliyun.com/pypi/simple/ [install] install-option=--prefix=~/.local trusted-host = mirrors.aliyun.com 4 npm npm config set registry https://registry.npm.taobao.org npm config get registry 5 gradle set your project's build.gradle buildscript { repositories { maven{ url &#39;http://maven.aliyun.com/nexus/content/groups/public/&#39; } maven{ url &#39;http://maven.aliyun.com/nexus/content/repositories/jcenter&#39;} } dependencies { classpath &#39;com.android.tools.build:gradle:3.3.0-alpha13&#39; } } allprojects { repositories { maven{ url &#39;http://maven.aliyun.com/nexus/content/groups/public/&#39;} maven{ url &#39;http://maven.aliyun.com/nexus/content/repositories/jcenter&#39;} } } task clean(type: Delete) { delete rootProject.buildDir }","tags":[{"name":"How","slug":"How","permalink":"https://qrsforever.github.io/tags/How/"}]},{"title":"(原创)神经网络之交叉熵代码实例","date":"2019-07-01T14:47:37.000Z","path":"2019/07/01/ML/Scratch/nn_crossent/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Intro SE and CE Gradient Hiden Codes ____________________________________________________ /\\ \\ \\_| | | z_0^h = sum_i^I(w[i, 0]^h * inputNode_i + b_0^h) | | | | hideNode_0 = tanh(z_0^h) | | | | _______________________________________________|_ \\_/_________________________________________________/ | | __________________________________________________ | /\\ \\ | \\_| | | | z_0^o = sum_j^J(w[j, 0]^o * hideNode_j + b_0^o | | | | inputNode: I | | ouputNode = softmax(z_0^o) | hidenNode: J | | | outputNode: K | | _____________________________________________|_ | \\_/_______________________________________________/ | | | | | | | | | | | | I J | K | | | tanh(z_0^h) softmax(z_0^o) ***** ***** ***** ** ** w[0, 0] ** ** w[0, 0] ** ** * * -----------&gt; * b_0 * -------------&gt; * * ** ** &gt; ** ** &gt; ** ** ***** / ^ ***** -/ ^ ***** -/ / -/ / / | -/ / w[1,0] / / w[1, 0]/ / -/ / -/ / / | -/ | ***** / / ***** -/ / ** ** -/ / ** ** / / * * | * b_1 * / ** ** / ** ** / ***** / ***** / . / . / . | . / . / . / / | w[i,0]| w[j, 0] / / / ***** / ***** / ***** ** **_| ** **- ** ** * * * b_j * * * ** ** ** ** ** ** ***** ***** ***** ith inputNode jth hideNode kth outputNode 1 Intro Above drawit, only one hiden layer with activation funciton tanh, and the output layer with activation function softmax(归一化指数函数). The input layer: have I nodes, the ith node is \\(x_i\\). The hiden layer: have J nodes, weight: \\(\\theta_{ij}\\), activation function: \\(tanh^{hiden}(z_j)\\), shortening: \\(a^h(z_j)\\) and \\(z_j = \\sum_i^I \\theta_{ij} x_i + b_i \\label{z_j} \\tag{1}\\). The output layer: have K nodes, weight: \\(\\theta_{jk}\\), activation function: \\(softmax^{output}(z_k)\\), shortening: \\(a^o(z_k)\\). and \\(z_k = \\sum_j^J \\theta_{jk} x_j + b_j \\label{z_k} \\tag{2}\\) \\(tanh(z_i)\\) and its derivative (equation only contain \\(z_i\\)): let \\(tanh(z_i) = \\dfrac{1-e^{-2z_i}}{1 + e^{-2z_i}}\\) then: \\[ \\begin{align*} tanh&#39;(z_i) &amp;= 1 - tanh^2(z_i) \\\\ &amp;= (1 + tanh(z_i))(1 - tanh(z_i)) \\\\ \\end{align*} \\] \\(softmax(z_i)\\) and its partial derivative (equation not only contain \\(z_i\\) but also contain other z-nodes in denominator): let \\(softmax(z_i) = \\dfrac{e^z_i}{\\sum_k^K e^{z_k}}\\) then: \\[ \\left\\{\\begin{align*} \\text{ if } i = j; \\ \\ \\dfrac{\\partial softmax&#39;(z_i)}{\\partial z_i} &amp;= \\dfrac{e^{z_i} \\sum_k^K e^{zk} - e^{z_i}e^{z_i}}{\\left(\\sum_k^K e^{z_k}\\right)^2} \\\\ &amp;= softmax(z_i)(1 - softmax(z_i)) \\\\ &amp;= a_i(1-a_i) \\label{i_eq_j} \\tag{3} \\\\ \\\\ \\text{ if } i \\neq j; \\ \\ \\dfrac{\\partial softmax&#39;(z_j)}{\\partial z_i} &amp;= \\dfrac{0 - e^{z_j} e^{z_i}}{\\left(\\sum_k^K e^{z_k}\\right)^2} \\\\ &amp;= -softmax(z_i)softmax(z_j) \\\\ &amp;= -a_ia_j \\label{i_neq_j} \\tag{4} \\end{align*}\\right. \\] 2 SE and CE SE loss function: \\[ Loss = \\sum_{k=1}^{K} \\dfrac{1}{2} \\left(a^{o}(z_k) - y_k\\right)^2 \\] MSE(mean squared error): \\(\\dfrac{Loss}{K}\\) with \\(\\ref{i_eq_j}\\) and \\(\\ref{i_neq_j}\\), so the partial derivative of \\(z_k\\) (the kth output node): \\[ \\begin{align*} \\dfrac{\\partial Loss}{\\partial z_i} &amp;= \\dfrac{\\partial \\sum_{k=1}^{K} \\dfrac{1}{2} \\left( a^{o}(z_k) - y_k\\right )^2}{\\partial z_i} \\\\ &amp;= \\sum_{k=1}^K \\left(a^o(z_k) - y_k \\right) \\dfrac{\\partial a^o(z_k)}{\\partial z_i} \\\\ &amp;= \\sum_{k \\neq i}^K \\left(a^o(z_i) - y_i \\right) \\dfrac{\\partial a^o(z_k)}{\\partial z_i} + \\sum_{k=i}^K \\left(a^o(z_i) - y_i \\right) \\dfrac{\\partial a^o(z_i)}{\\partial z_i} \\\\ &amp;= \\sum_{k \\neq i}^K \\left(a^o(z_k) - y_k \\right) \\left( -a^o(z_k)a^o(z_i) \\right ) + \\left(a^o(z_i) - y_i \\right )a^o(z_i) \\left( 1-a^o(z_i) \\right ) \\\\ &amp;\\approx \\left(a^o(z_i) - y_i \\right )a^o(z_i) \\left( 1-a^o(z_i) \\right ) \\label{se_z_k} \\tag{5} \\end{align*} \\] above, the last equation \\(\\ref{se_z_k}\\) is because the softmax is 'one-hot' encoding, \\(\\text{ if } k \\neq i, \\text{ then } a^o(z_k) a^o(z_i) \\approx 0\\) CE loss function \\[ Loss = -\\sum_{k=1}^K H\\big(y_k, a^o(z_k)\\big) = -\\sum_{k=1}^K y_k log a^o(z_k) \\] MCEE(mean crossentropy error): \\(\\dfrac{Loss}{K}\\) so the partial derivative of \\(z_k\\), for short: Loss to L, \\(a^o(z_i)\\) to \\(a_i\\): \\[ \\begin{align*} \\dfrac{\\partial L}{\\partial z_i} &amp;= \\sum_k^K \\big(\\frac{\\partial L}{\\partial a_k} \\frac{\\partial a_k}{\\partial z_i}\\big) \\\\ &amp;= \\sum_{k\\neq i}^K \\big(\\frac{\\partial L}{\\partial a_k} \\frac{\\partial a_k}{\\partial z_i}\\big) + \\sum_{k=i}^K \\big(\\frac{\\partial L}{\\partial a_k} \\frac{\\partial a_k}{\\partial z_i}\\big) \\\\ &amp;= \\sum_{k\\neq i}^K \\big( -y_k\\frac{1}{a_k} \\frac{\\partial a_k}{\\partial z_i} \\big) + \\big( -y_k\\frac{1}{a_k} \\frac{\\partial a_k}{\\partial z_i} \\big) \\\\ &amp;= \\sum_{k\\neq i}^K \\big( -y_k\\frac{1}{a_k} (-a_i a_k) + \\big( -y_i\\frac{1}{a_i} a_i(1-a_i) \\big) \\\\ &amp;= \\sum_{k\\neq i}^K a_iy_k + (-y_i(1-a_i)) \\\\ &amp;= \\sum_{k\\neq i}^K a_iy_k + a_iy_i -y_i \\\\ &amp;= a_i\\sum_k^K y_k - y_i \\\\ &amp;= a_i - y_i \\label{ce_z_k} \\tag{6} \\end{align*} \\] we call \\(\\frac{\\partial L}{\\partial z_i}\\) above is the middle calculate signal, the last output layer as oSignal, the hiden layer as hSignal, the signal equation is different between SE and CE. 3 Gradient look back \\(\\ref{z_j}\\) and \\(\\ref{z_k}\\). below is the weight hoGrad as the hiden node to output node just is the partial derivative of Loss to \\(\\theta\\), the \\(hoGrad_{jk}\\) denote the partial derivative of Loss to the weight where from the jth node in hiden layer and target to the ith output node: \\[ \\text{hoGrad}_{jk} = \\dfrac{\\partial L}{\\partial \\theta_{jk}} = \\dfrac{\\partial L}{\\partial z_k} \\dfrac{\\partial z_k}{\\partial \\theta_{jk}} = \\dfrac{\\partial L}{\\partial z_k} a^h(z_j) = \\text{oSignal}_k\\ a^h(z_j) \\] and the bias obGrad: \\(\\text{obGrad}_k = \\dfrac{\\partial L}{\\partial b_{jk}} = \\text{oSignal}_k\\ * 1\\) 4 Hiden let \\(a_k\\) short for \\(a^o(z_k)\\) let \\(a_j\\) short for \\(a^h(z_j)\\) let oSignal short for list \\(\\dfrac{\\partial Loss}{\\partial z_k}; k \\in [1, K]\\) let hSignal short for list \\(\\dfrac{\\partial Loss}{\\partial z_j}; j \\in [1, J]\\) if \\(z_k = \\theta_{jk} a_j + b_k;\\ a_j = tanh(z_j);\\ z_j = \\theta_{ij} x_i + b_j\\), then: \\[ \\left\\{\\begin{matrix} \\dfrac{\\partial z_k}{\\partial \\theta_{jk}} = a_j; &amp; \\dfrac{\\partial z_k}{\\partial b_k} = 1 \\\\ \\dfrac{\\partial z_j}{\\partial \\theta_{ij}} = x_i; &amp; \\dfrac{\\partial z_j}{\\partial b_j} = 1 \\\\ \\end{matrix}\\right. \\label{d_weight_bias} \\tag{7} \\] and \\[ \\begin{matrix} \\dfrac{\\partial z_k}{\\partial a_j} = \\theta_{jk}; &amp; \\dfrac{\\partial z_j}{\\partial x_i} = \\theta_{ij} \\\\ \\end{matrix} \\label{d_a_x} \\tag{8} \\] and \\[ \\begin{align*} \\dfrac{\\partial a_j}{\\partial z_j} &amp;= \\dfrac{\\partial tanh(z_j)}{\\partial z_j} \\\\ &amp;= \\big(1+tanh(z_j)\\big)\\big(1-tanh(z_j)\\big) \\\\ &amp;= (1+a_j)(1-a_j) \\end{align*} \\label{d_tanh} \\tag{9} \\] from \\(\\ref{d_weight_bias}\\), \\(\\ref{d_a_x}\\) and \\(\\ref{d_tanh}\\), we can get the partial derivative of the jth hide node \\(z_j\\) by Loss is (each output node contain the weight of \\(z_j\\)): \\[ \\begin{align*} \\text{hSignal}_j = \\dfrac{\\partial Loss}{\\partial z_j} &amp;= \\sum_{k=1}^{K} \\dfrac{\\partial Loss}{\\partial a_k} \\dfrac{\\partial a_k}{\\partial z_k} \\dfrac{\\partial z_k}{\\partial a_j} \\dfrac{\\partial a_j}{\\partial z_j} \\\\ &amp;= \\sum_{k=1}^{K} \\dfrac{\\partial Loss}{\\partial z_k} \\dfrac{\\partial z_k}{\\partial a_j} \\dfrac{\\partial a_j}{\\partial z_j} \\\\ &amp;= \\sum_{k=1}^{K} \\text{oSignal}_k \\dfrac{\\partial z_k}{\\partial a_j} \\dfrac{\\partial a_j}{\\partial z_j} \\\\ &amp;= \\sum_{k=1}^{K} \\text{oSignal}_k \\theta_{jk} \\dfrac{\\partial a_j}{\\partial z_j} \\\\ &amp;= \\dfrac{\\partial a_j}{\\partial z_j} \\sum_{k=1}^{K} \\text{oSignal}_k \\theta_{jk} \\\\ &amp;= (1+a_j)(1-a_j) \\sum_{k=1}^{K} \\text{oSignal}_k \\theta_{jk} \\label{hsignal_z_j} \\tag{10} \\\\ \\end{align*} \\] for the partial derivative of the jth hide node's weight: \\[ \\begin{align*} \\text{ihGrad}_{ij} &amp;= \\dfrac{\\partial Loss}{\\partial \\theta_{ij}} \\\\ &amp;= \\dfrac{\\partial Loss}{\\partial z_j} \\dfrac{\\partial z_j}{\\partial \\theta_{ij}} \\\\ &amp;= \\text{hSignal}_j * x_i \\end{align*} \\] 5 Codes","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"},{"name":"Scratch","slug":"Scratch","permalink":"https://qrsforever.github.io/tags/Scratch/"}]},{"title":"MSE和CE不同","date":"2019-06-25T13:41:53.000Z","path":"2019/06/25/Story/Passage/diff_mse_ce/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} What's the difference between cross-entropy and mean-squared-error loss functions? These loss functions have different derivatives and different purposes. From a probabilistic point of view, the cross-entropy arises as the natural cost function to use if you have a sigmoid or softmax nonlinearity in the output layer of your network, and you want to maximize the likelihood of classifying the input data correctly. If instead you assume the target is continuous and normally distributed, and you maximize the likelihood of the output of the net under these assumptions, you get the MSE (combined with a linear output layer). For classification, cross-entropy tends to be more suitable than MSE -- the underlying assumptions just make more sense for this setting. That said, you can train a classifier with the MSE loss and it will probably work fine (although it does not play very nicely with the sigmoid/softmax nonlinearities, a linear output layer would be a better choice in that case). For regression problems, you would almost always use the MSE. Another alternative for classification is to use a margin loss, which basically amounts to putting a (linear) SVM on top of your network.","tags":[{"name":"Passage","slug":"Passage","permalink":"https://qrsforever.github.io/tags/Passage/"}]},{"title":"(原创)交叉熵实例","date":"2019-06-25T03:33:49.000Z","path":"2019/06/25/ML/Scratch/CE_error/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 神经网络 简图 描述 梯度 0.1 神经网络 0.1.1 简图 input layer hide layer1 hide layer2 ouput layer L-2 L-1 L N I J K ******* ******* ******* ******* ** ** ** ** a(z) ** ** a(z) ** ** a(z) * x1 * * wx+b * ------&gt; * wa+b * ------&gt; * wa+b * -----&gt; ** ** ** ** relu ** ** relu ** ** softmax ******* ******* ******* ******* ******* ******* ******* ******* ** ** ** ** ** ** ** ** * x2 * * * * * * * ** ** ** ** ** ** ** ** ******* ******* ******* ******* . . . . . . . . . . . . ******* ******* ******* ******* ** ** ** ** ** ** ** ** * xN * * hI * * hJ * * oK * ** ** ** ** ** ** ** ** ******* ******* ******* ******* a_i(z_i) a_j(z_j) a_k(z_k) 0.1.2 描述 神经网络包含1个输入层, 2个隐藏层, 1个输出层. 输出层(神经元)节点数为N, 总层数L, 所以倒数第一个隐藏层为第L-1层, 以此类推L-2层. 第一个隐藏层的节点数为I个, 第二个隐藏层的节点数为J个, 输出层的节点数为K个. 隐藏层使用的激活函数为Relu, 输出层的激活函数我Softmax. 除了输入层外, 每个神经元的输入都是上一层所有节点经过激活函数之后的值, 例如: 输出层的第k个神经元的真实输出\\(t_k\\) L层: \\[ \\begin{align*} z_i^{L-2} &amp;= \\sum_n^N w_{in}^{L-2} x_n + b_i \\\\ a_i^{L-2} &amp;= relu(z_i^{L-2}) \\\\ &amp;= max(0, z_i^{L-2} \\\\ z_j^{L-1} &amp;= \\sum_i^I w_{ji}^{L-1} a_i + b_j \\\\ a_j^{L-1} &amp;= relu(z_j^{L-1}) \\\\ &amp;= max(0, z_j^{L-1} \\\\ z_k^{L} &amp;= \\sum_j^{J} w_{kj}^{L} a_j + b_k \\tag{0} \\\\ a_k^{L} &amp;= softmax(z_k^{L}) \\\\ &amp;= \\frac{e^{z_k^{L}}}{\\sum_c^K e^{z_c^{L}}} \\end{align*} \\] 交叉熵(误差估计): \\[ \\begin{align} E = -\\sum_k^K t_k log a_k^L = -\\sum_k^K t_k (z_k^L - log\\sum_c^K e^{z_c^L}) \\tag{1} \\end{align} \\] 0.1.3 梯度 更新权重(组成第k个节点对应上一层第j个节点的参数): \\(\\Delta W \\propto =-\\frac{\\partial E}{\\partial W}\\) 输出层: \\[ \\begin{align*} \\Delta W_{kj}^L &amp;= -\\eta \\frac{\\partial E}{\\partial W_{kj}} \\\\ &amp;= -\\eta \\frac{\\partial E}{\\partial a_k^L} \\frac{\\partial a_k^L}{\\partial z_k^L} \\frac{\\partial z_k^L}{\\partial W_{kj}^l} \\\\ \\end{align*} \\] 计算: \\[ \\begin{align} \\frac{\\partial E}{\\partial W_{kj}^L} = \\frac{\\partial E}{\\partial z_{k}^L} \\frac{\\partial z_{k}^L}{\\partial W_{kj}^L} \\tag{2} \\end{align} \\] \\[ \\begin{align*} \\frac{\\partial E}{\\partial z_{k}^L} &amp;= - \\sum_{d}^K t_d (\\mathbb{1}_{d=k} - \\frac{1}{\\sum_c e^{z_c^L}} e^{z_k^L}) \\nonumber \\\\ &amp;= - \\sum_d^K t_d (\\mathbb{1}_{d=k} - a_k^L) \\nonumber \\\\ &amp;= \\sum_d^K t_d a_k^L - \\sum_d^K t_d \\mathbb{1}_{d=k} \\nonumber \\\\ &amp;= a_k^L \\sum_d^K t_d - t_k \\nonumber \\\\ &amp;= a_k^L - t_k \\end{align*} \\tag{3} \\] 其中: \\[ \\mathbb{1}_{d=k} = \\begin{cases} 1 &amp; \\quad \\text{if } d=k \\\\ 0 &amp; \\quad \\text{otherwise }. \\end{cases} \\] 再由\\(\\frac{\\partial z_{k}^L}{\\partial W_{kj}^L} = a_j^{L-1}\\)代入得: \\[ \\begin{align} \\frac{\\partial E}{\\partial W_{kj}^L} &amp;= \\frac{\\partial E}{\\partial z_{k}^L} \\frac{\\partial z_{k}^L}{\\partial W_{kj}^L} = (a_k^L - t_k) a_j^{L-1} \\end{align} \\] 偏袒b: \\[ \\begin{align} \\frac{\\partial E}{\\partial b_{k}^L} &amp;= \\frac{\\partial E}{\\partial z_{k}^L} \\frac{\\partial z_{k}^L}{\\partial b_{k}^L} = a_k^L - t_k \\end{align} \\] 其他层方法相似.","tags":[{"name":"Scracth","slug":"Scracth","permalink":"https://qrsforever.github.io/tags/Scracth/"}]},{"title":"数学符号表","date":"2019-06-25T01:53:18.000Z","path":"2019/06/25/Tools/Math/symbols/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 统计学 机器学习 1 统计学 符号 描述 \\(\\mathbf{R}\\) 实数集 \\(\\mathbf{R^n}\\) n维实数向量空间, n维欧式空间 \\(H\\) 希尔伯特空间 \\(X\\) 输入空间 \\(Y\\) 输出空间 \\(x \\in X\\) 输入, 实例 \\(y \\in Y\\) 输出, 标记 \\(\\mathit{X}\\) 输入随机变量 \\(\\mathit{Y}\\) 输出随机变量 \\(T = {(x_1,y_1), (x_2,y_2), \\cdots, (x_N,y_N)}\\) 训练数据集 \\(N\\) 样本容量 \\((x_i,y_i)\\) 第i个训练数据点 \\(x = (x^{(1)}, x^{(2)}, \\cdots, x^{(n)})^T\\) 输入向量, n维实数向量 \\(x_i^{(j)}\\) 输入向量\\(x_i\\)的第j个分量 \\(\\mathit{P(X), P(Y)}\\) 概率分布 \\(\\mathit{P(X,Y)}\\) 联合概率分布 \\(\\mathbf{F}\\) 假设空间 \\(f \\in \\mathbf{F}\\) 模型, 特征函数 \\(\\theta, \\omega\\) 模型参数 \\(\\omega = (\\omega_1, \\omega_2, \\cdots, \\omega_n)^T\\) 权值向量 \\(b\\) 偏置 \\(J(f)\\) 模型复杂度 \\(R_emp\\) 经验风险或经验损失 \\(R_exp\\) 风险函数或期望损失 \\(L\\) 损失函数, 拉格朗日函数 \\(\\eta\\) 学习率 \\(\\begin{Vmatrix} x \\end{Vmatrix}_1\\) \\(L_1\\)范数 = \\(\\sum_{i=1}^{N}|x_i|\\) \\(\\begin{Vmatrix} x \\end{Vmatrix}_2\\) \\(L_2\\)范数 = \\(\\sqrt{\\sum_{i=1}^{N}x_i^2}\\) \\((x \\cdot {x}&#39;)\\) 向量\\(x\\)与\\({x}&#39;\\)內积 \\(\\mathit{H(X), H(p)}\\) 熵 \\(\\mathit{H(Y|X)}\\) 条件熵 \\(\\mathbf{S}\\) 分离超平面 \\(\\alpha = (\\alpha_1, \\alpha_2, \\cdots, \\alpha_n)^T\\) 拉格朗日乘子, 对偶问题变量 \\(\\alpha_i\\) 对偶问题的第i个变量 \\(K(x, z)\\) 核函数 \\(sign(x)\\) 符号函数 \\(I(x)\\) 指示函数 \\(Z(x)\\) 规范化因子 2 机器学习 符号 描述 \\(N, c\\) the total number of training examples, number of classes of output \\(x^{(n)}, y^{(n)}\\) the superscript \\({(n)}\\) denote the variable for the \\(n^{th}\\) individual training example \\(x^{[l]}, w^{[l]}, a^{[l]}\\) the superscript \\({[l]}\\) denote the \\(l^{th}\\) layer, can drop \\([]\\) on single training example \\(z^{x,l}, a^{x,l}\\) the z, activition in the \\(l^{th}\\) on the \\(x^{th}\\) training example \\(n_H^{[l]},n_W^{[l]},n_C^{[l]}\\) the numbers of height, width, channel in the \\(l^{th}\\) layer \\(x_i, y_i, b_i\\) the subscript \\(i\\) denote the \\(i^{th}\\) elem of the vector \\(\\mathbf{x, y, b}\\) \\(w^l_{jk}\\) weights for connections from the \\(k^{th}\\) neuron in the \\((l-1)^{th}\\) layer to the \\(j^{th}\\) neuon in the \\(l^{th}\\) \\(b^l_j\\) the the bias of the \\(j^{th}\\) neuron in the \\(l^{th}\\) layer \\(a^l_j\\) the activation of the \\(j^{th}\\) neuron in the \\(l^{th}\\) layer \\(\\sigma\\left(\\right)\\) the activation function(or vectorized activation function) \\(\\mathbf{z}^l = \\mathbf{w}^l a^{l-1}+\\mathbf{b}^l\\) the intermediate quantity(vector) called weighted input \\(\\begin{eqnarray} a^{l}_j = \\sigma\\left( \\sum_k w^{l}_{jk} a^{l-1}_k + b^l_j \\right)\\end{eqnarray}\\) the the activation \\(a^{l}_j\\) in the in component form \\(\\begin{eqnarray} a^{l} = \\sigma(w^l a^{l-1}+b^l) = \\sigma(z^l)\\end{eqnarray}\\) the the activation \\(a^{l}\\) in a matrix form \\(Cost(), C, Loss(), L, Error(), E\\) the cost function \\(\\partial C / \\partial w, \\partial C / \\partial b\\) the partical derivatives that cost function with respect to any weights w and bias b in the network \\(y = y(x), t = t(x)\\) the corresponding desired ouput over the individual input x \\(s \\odot t\\) element wise product of the two vectors \\(\\sigma^l_j = \\dfrac{\\partial C}{\\partial z^l_j}\\) the error of the \\(j^{th}\\) neuron in the \\(l^{th}\\) layer \\(\\nabla_a C\\) vector of the partial dervatives \\(\\partial C / \\partial a^L_j\\), the rate of change of C with respect to the output activations \\(\\begin{eqnarray} \\delta^L = \\nabla_a C \\odot \\sigma&#39;(z^L) \\end{eqnarray}\\) the error of the ouput layer in matrix-based form \\(\\begin{eqnarray} \\delta^L = (a^L-y) \\odot \\sigma&#39;(z^L) \\end{eqnarray}\\) error in the case of the quadratic cost \\(\\begin{eqnarray} \\delta^l = ((w^{l+1})^T \\delta^{l+1}) \\odot \\sigma&#39;(z^l) \\end{eqnarray}\\) the error of nuerons in other layer out of the last layer \\(\\begin{eqnarray} \\dfrac{\\partial C}{\\partial w^l_{jk}} = a^{l-1}_k \\delta^l_j \\end{eqnarray}\\) the rate of change of the cost with respect to any weight \\(\\begin{eqnarray} \\dfrac{\\partial C}{\\partial w^l} =\\delta^l (a^{l-1})^T \\end{eqnarray}\\) matrix-based form: the rate of change of the cost with respect to any weight \\(\\begin{eqnarray} \\dfrac{\\partial C}{\\partial b^l_j} = \\delta^l_j \\end{eqnarray}\\) the rate of change of the cost with respect to any bias in the network \\(\\begin{eqnarray} \\dfrac{\\partial C}{\\partial b} = \\delta \\end{eqnarray}\\) matrix-based form: the rate of change of the cost with respect to any bias in the network 参考","tags":[{"name":"Math","slug":"Math","permalink":"https://qrsforever.github.io/tags/Math/"}]},{"title":"(原创)交叉熵损失函数","date":"2019-06-23T07:24:43.000Z","path":"2019/06/23/ML/Guide/cross_entropy_loss/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 百科 相关概念 交叉熵 与似然的关系 交叉熵损失函数 定义符号 Logistic回归的交叉熵 Softmax回归的交叉熵 参考 1 百科 交叉熵(cross entropy)是信息论中的一个重要概念, 度量两个概率分布的差异性信息. cross entropy (CE) error is also called \"log loss\" 1.1 相关概念 熵是描述系统的不确定性, 越出乎意料, 越不可能发生的事的信息量越大, 确定的事信息量为0. \"妖是妖他妈生的\"信息量为0, \"10万在北京买了一套房\"的信息量很大(不可能吧) 信息量(self-information) \\(I(x) = log_2\\dfrac{1}{P(x)} = -logP(x)\\), 一个不可能的事情的发生比及有可能的事件 发生提供的信息要更多,只能衡量单个事件的信息量. 而整个系统(所有x)呈现出一个分布, 信息熵就是对概率分布进行量 化, 即所有x的自信息的期望. (期望编码长度最小) 两个独立的事件的信息量是可以叠加的. 信息熵\\(H(X) = E[-log_2p_i] = \\sum\\limits_{i=0}^{N}P(x_i)log_2\\dfrac{1}{P(x_i)} = -\\sum\\limits_{i=0}^{N}P(x_i)log_2P(x_i)\\) 代表随机变量或系统的不确定性, 熵越大, 随机变量或系统的不确定性就越大. 简写: \\(p_i = P(x_i); H(X) = -\\sum\\limits_{i=0}^{N}p_ilog_2p_i\\) KL散度(Kullback Leibler Divergence),有时候也叫KL距离(不同点是不对称),一般被用于计算两个分布之间的不同,散度 越离散值越大, 两个分布相同KL散度为0. 从另一个角度理解就是, 一个分布用另一个分布代替额外需要的编码bit. 数学定义(离散): \\[ \\begin{align*} D_{KL}(A||B) &amp;= \\sum\\limits_{i}P_A(x_i)log_2\\bigg(\\dfrac{P_A(x_i)}{P_B(x_i)}\\bigg) \\\\ &amp;= \\sum\\limits_{i}P_A(x_i)log_2\\bigg(P_A(x_i)\\bigg) - \\sum\\limits_{i}P_A(x_i)log_2\\bigg(P_B(x_i)\\bigg) \\\\ &amp;= -H(A) + H(A, B) \\end{align*} \\] 如果H(A)是个常数, KL散度\\(\\cong\\)交叉熵(不严谨), 这也许是交叉熵用来作为损失函数的原因. 如果两个分布相同\\(D_KL(A||B)=0\\), 但是\\(H(A,B)\\)是不等于0的. 注意: \\(D_KL(A||B) \\neq D_KL(B||A)\\) 实际上对数不一定都是以2为底, 10, e都可以, 重要的是确定后, 所有计算都要相同 1.2 交叉熵 交叉熵\\(H(P, Q) = -\\sum\\limits_{i=0}^{N}p_ilog_2q_i\\), 其中\\(p_i为真实分布, q_i为非真实(预测)分布\\), 表示预测分布 与真实分布的错误程度, 如果Q分布越接近P分布, 交叉熵值越小. 连续型: \\(-\\int p(x)logq(x)dx\\), 训练的目的就是使q(x)逼近p(x). 实例: 真实分布P: {1/4, 1/4, 1/4, 1/4} 预测分布Q1: { 1/4, 1/2, 1/8, 1/8} 预测分布Q2: { 1/4, 1/4, 1/8, 3/8} P自信息: \\[ \\begin{align*} H(P, P) &amp;= -\\sum\\limits_{i=0}^{n}p_ilog_2q_i \\\\ &amp;= -\\bigg[1/4 log_2(1/4) + 1/4 log_2(1/4) + 1/4 log_2(1/4) + 1/4 log_2(1/4)\\bigg] \\\\ &amp;= -\\bigg[1/4*(-2) + 1/4*(-2) + 1/4*(-2) + 1/4*(-2)\\bigg] \\\\ &amp;= 8/4 \\end{align*} \\] P与Q1的交叉熵: \\[ \\begin{align*} H(P, Q1) &amp;= -\\sum\\limits_{i=0}^{n}p_ilog_2q_i \\\\ &amp;= -\\bigg[1/4 log_2(1/4) + 1/4 log_2(1/2) + 1/4 log_2(1/8) + 1/4 log_2(1/8)\\bigg] \\\\ &amp;= -\\bigg[1/4*(-2) + 1/4*(-1) + 1/4*(-3) + 1/4*(-3)\\bigg] \\\\ &amp;= 9/4 \\end{align*} \\] P与Q2的交叉熵: \\[ \\begin{align*} H(P, Q2) &amp;= -\\sum\\limits_{i=0}^{n}p_ilog_2q_i \\\\ &amp;= -\\bigg[1/4 log_2(1/4) + 1/4 log_2(1/4) + 1/4 log_2(1/8) + 1/4 log_2(3/8)\\bigg] \\\\ &amp;= -\\bigg[1/4*(-2) + 1/4*(-2) + 1/4*(-3) + 1/4*log_2(3/8)\\bigg] \\\\ &amp;= \\dfrac{10 -log_23}{4} &lt; 9/4 \\end{align*} \\] 1.3 与似然的关系 例(不考虑0下标): 真实分类(one-hot encoded labels): \\[ { y^{(1)} = (1, 0, 0, 0)^T \\\\ y^{(2)} = (0, 1, 0, 0)^T \\\\ y^{(3)} = (0, 0, 0, 1)^T \\\\ y^{(4)} = (1, 0, 0, 0)^T \\\\ y^{(5)} = (0, 0, 1, 0)^T } \\] 其中\\(y_1^{(1)}=1, y_2^{(2)}=1, y_4^{(3)}=1, y_1^{(4)}=1, y_3^{(5)}=1, 其余都为0\\) 预测分类(one-hot): \\[ { \\hat{y}^{(1)} = (0.96, 0.02, 0.01, 0.01)^T \\\\ \\hat{y}^{(2)} = (0.1, 0.8, 0.02, 0.08)^T \\\\ \\hat{y}^{(3)} = (0.2, 0.1, 0.1, 0.6)^T \\\\ \\hat{y}^{(4)} = (0.7, 0.1, 0.1, 0.1)^T \\\\ \\hat{y}^{(5)} = (0.001, 0.009, 0.8, 0.1)^T } \\] 其中\\(\\hat{y}_1^{(1)}=0.96, \\hat{y}_2^{(2)}=0.8, \\hat{y}_4^{(3)}=0.6, \\hat{y}_1^{(4)}=0.7, \\hat{y}_3^{(5)}=0.8\\) 似然函数(联合): \\[ L(\\{y^{(n)}\\}, \\{\\hat{y}^{(n)}\\}) = \\prod_{n}^{N}L(y^{(n)}, \\hat{y}^{(n)}) \\] 问题是单个数据点对应的似然\\(L(y^{(n)}, \\hat{y}^{(n)})\\)应该如何计算呢, 从上面的例子分析第1组\\(\\hat{y}^{(1)}\\) 根据对应的真实分类应该为下标1, 即\\(\\hat{y}_1^{(1)}=0.96\\), 依次得到其余组应该对应的值\\(\\hat{y}_2^{(2)}=0.8, \\hat{y}_4^{(3)}=0.6, \\hat{y}_1^{(4)}=0.7, \\hat{y}_3^{(5)}=0.8\\). 也就是说, 预测分类的概率(向量)值由真实分类数据(样本数据, 已知)指定(下标). 假设第n组数据真实label\\(y_i^{(n)}\\)第i分量为1, 则第n组的预测 分类的概率值可表示为:\\(L(y^{(n)}, \\hat{y}^{(n)}) = \\sum_i^5 y_i^{(n)}\\hat{y}_i^{(n)}\\), 所以所有数据集的似然及对数似然表示为: \\[ L(\\{y^{(n)}\\}, \\{\\hat{y}^{(n)}\\}) = \\prod_{n}^{N} L(y^{(n)}, \\hat{y}^{(n)}) \\\\ logL(\\{y^{(n)}\\}, \\{\\hat{y}^{(n)}\\}) = \\sum_n^N logL(y^{(n)}, \\hat{y}^{(n)}) = \\sum_{n}^{N} [-\\sum_i y_i^{(n)}log\\hat{y}_i^{(n)}] \\] 其中i表示标签(one-hot)的下标, N表示数据集总大小, n表示某个数据实例. 从上图看到交叉熵(熵之和)的公式: \\[ \\begin{align*} {L}&#39; &amp;= -log L(\\{y^{(n)}\\}, \\{\\hat{y}^{(n)}\\}) \\\\ &amp;= -log \\prod_{n}^{N}L(y^{(n)}, \\hat{y}^{(n)}) \\\\ &amp;= -\\sum_{n}^{N} logL(y^{(n)}, \\hat{y}^{(n)}) \\\\ &amp;= -\\sum_{n}^{N} log \\sum_i y_i^{(n)}\\hat{y}_i^{(n)} \\\\ &amp;= \\sum_{n}^{N} [-\\sum_i y_i^{(n)}log\\hat{y}_i^{(n)}] \\\\ &amp;= \\sum_{n}^{N} H(y^{(n)}, \\hat{y}^{(n)}) \\\\ &amp;= H(\\{y^{(n)}\\}, \\{\\hat{y}^{(n)}\\}) \\end{align*} \\] 2 交叉熵损失函数 希望理想模型和真实模型分布一致: \\(P(model) \\cong P(trainning) \\cong P(real)\\), 根据模型概率分布差异计算预测 模型的可靠性, 真实的模型是无法得知的, 而预测模型也是通过训练数据训练出. KL散度是计算两个事件的概率分布的差 异, 且如果事件A的信息熵\\(H(A)\\)固定, 则简化为\\(H(A, B)\\)即交叉熵的计算, 当交叉熵最低时(训练数据分布的熵), 得到 最好的模型. 2.1 定义符号 n: 样本组数 p: 特征个数 m: 分类个数 (多分类: 神经元的个数) \\(\\theta_j\\): 第j个参数 \\(x^{(i)}\\): 第i组数据, \\(x^{(i)}=(1,x^{(i)}_1,x^{(i)}_2,...,x^{(i)}_p)^T\\) 包含偏置 \\(y^{(i)}\\): 第i组数据对应的类标记, \\((x^{(i)}, y^{(i)})\\)代表一组测试/训练样本数据 \\(\\hat{y}^{(i)}\\): 模型预测第i组数据的输出的标记 \\(z^{(i)}\\): 第i组数据输入后计算的输出(未sigmoid或softmax) \\(z^{(i)} = \\theta^T x^{(i)} = \\sum\\limits_j^p\\theta_{ij}x_{ij} + b\\) 2.2 Logistic回归的交叉熵 是非问题, \\(y^{(i)}\\)取0或1 0-1问题, 构造假设函数(hypothesis function): \\[ h_\\theta(x^{(i)}) = \\dfrac{1}{1 + e^{-\\theta^T x^{(i)}} } \\] 二分类问题, 设: \\(P(\\hat{y}^{(i)}=1|x^{(i)};\\theta)=h_\\theta(x^{(i)})\\) \\(P(\\hat{y}^{(i)}=0|x^{(i)};\\theta)=1-h_\\theta(x^{(i)})\\) 不考虑交叉熵, 单纯推导, 对上面, 取log, 原函数的单调性不变: \\(\\log P(\\hat{y}^{(i)}=1|x^{(i)};\\theta)=\\log h_\\theta(x^{(i)})=\\log\\frac{1}{1+e^{-\\theta^T x^{(i)}} }\\) \\(\\log P(\\hat{y}^{(i)}=0|x^{(i)};\\theta)=\\log (1-h_\\theta(x^{(i)}))=\\log\\frac{e^{-\\theta^T x^{(i)}}}{1+e^{-\\theta^T x^{(i)}} }\\) 对于第i组样本，假设函数表征正确的组合对数概率为: \\[ \\begin{align*} P &amp;= I\\{y^{(i)}=1\\}\\log P(\\hat{y}^{(i)}=1|x^{(i)};\\theta)+I\\{y^{(i)}=0\\}\\log P(\\hat{y}^{(i)}=0|x^{(i)};\\theta) \\\\ &amp;= y^{(i)}\\log P(\\hat{y}^{(i)}=1|x^{(i)};\\theta)+(1-y^{(i)})\\log P(\\hat{y}^{(i)}=0|x^{(i)};\\theta) \\\\ &amp;= y^{(i)}\\log(h_\\theta(x^{(i)}))+(1-y^{(i)})\\log(1-h_\\theta(x^{(i)})) \\end{align*} \\] 其中\\(I\\{y^{(i)}=1\\}\\) 和 \\(I\\{y^{(i)}=0\\}\\) 是指示函数, 当{}里成立时为1, 否则为0 n组样本: \\[ \\sum_{i=1}^{n}y^{(i)}\\log(h_\\theta(x^{(i)}))+(1-y^{(i)})\\log(1-h_\\theta(x^{(i)})) \\] 计算出的值越大越好, 而我们希望损失函数越小越好, 于是: \\[ J(\\theta)=-\\frac{1}{n}\\sum_{i=1}^{n}y^{(i)}\\log(h_\\theta(x^{(i)}))+(1-y^{(i)})\\log(1-h_\\theta(x^{(i)})) \\] 代入: \\[ \\begin{align*} J(\\theta) &amp;=-\\frac{1}{n}\\sum_{i=1}^n \\left[-y^{(i)}(\\log ( 1+e^{-\\theta^T x^{(i)}})) + (1-y^{(i)})(-\\theta^T x^{(i)}-\\log ( 1+e^{-\\theta^T x^{(i)}} ))\\right]\\\\ &amp; =-\\frac{1}{n}\\sum_{i=1}^n \\left[y^{(i)}\\theta^T x^{(i)}-\\theta^T x^{(i)}-\\log(1+e^{-\\theta^T x^{(i)}})\\right]\\\\ &amp; =-\\frac{1}{n}\\sum_{i=1}^n \\left[y^{(i)}\\theta^T x^{(i)}-\\log e^{\\theta^T x^{(i)}}-\\log(1+e^{-\\theta^T x^{(i)}})\\right]\\\\ &amp; =-\\frac{1}{n}\\sum_{i=1}^n \\left[y^{(i)}\\theta^T x^{(i)}-\\left(\\log e^{\\theta^T x^{(i)}}+\\log(1+e^{-\\theta^T x^{(i)}})\\right)\\right] \\\\ &amp; =-\\frac{1}{n}\\sum_{i=1}^n \\left[y^{(i)}\\theta^T x^{(i)}-\\log(1+e^{\\theta^T x^{(i)}})\\right] \\end{align*} \\] 计算\\(J(\\theta)\\)对j个参数分量\\(\\theta_j\\)求偏导: \\[ \\begin{align*} \\frac{\\partial}{\\partial\\theta_{j}}J(\\theta) &amp;=\\frac{\\partial}{\\partial\\theta_{j}}\\left(\\frac{1}{n}\\sum_{i=1}^n \\left[\\log(1+e^{\\theta^T x^{(i)}})-y^{(i)}\\theta^T x^{(i)}\\right]\\right)\\\\ &amp; =\\frac{1}{n}\\sum_{i=1}^n \\left[\\frac{\\partial}{\\partial\\theta_{j}}\\log(1+e^{\\theta^T x^{(i)}})-\\frac{\\partial}{\\partial\\theta_{j}}\\left(y^{(i)}\\theta^T x^{(i)}\\right)\\right]\\\\ &amp; =\\frac{1}{n}\\sum_{i=1}^n \\left(\\frac{x^{(i)}_je^{\\theta^T x^{(i)}}}{1+e^{\\theta^T x^{(i)}}}-y^{(i)}x^{(i)}_j\\right)\\\\ &amp; =\\frac{1}{n}\\sum_{i=1}^{n}(h_\\theta(x^{(i)})-y^{(i)})x_j^{(i)} \\end{align*} \\] 二分类交叉熵的形式: \\[ H(p,q)=-\\sum _x (p(x)logq(x)+(1-p(x))log(1-q(x))) \\] 2.3 Softmax回归的交叉熵 多分类问题. 柔性最大值. 接收N维向量输出一个(0,1)之间的实数 交叉熵就是用来判定实际的输出与期望的输出的接近程度 (神经网络)如果最后的输出节点数为M, 对于每一个输入样本X, 最后得到的输出为M数组, 且数组中的每一个维度(元素 )对应一个类别(标记), 如果一个样本属于k, 则对应输出数组的元素为1, 其他为0, 例如\\(y = (0, 0, 1, ..., 0)\\)(真实/期望输出), 这个是理想情况下, 真实得到是\\(\\hat{y} = (0.01, 0.12, 0.7, ...., 0.11)\\)(实际/模型输出), 原始输出\\((y_1, y_2, ..., y_n)\\)加上 softmax之后的结果. softmax函数模型: \\[ a_i = softmax(z_i) = \\frac{e^{z_i}}{\\sum_{j=0}^{m}e^{z_j}} \\] 其中\\(z_i = \\sum_j\\theta_{ij}x_{ij} + b_i\\)表示输出结果数组中第i个元素值, m表示分类个数. 注意:这是一个样本 假设概率分布p为期望输出(标签)，概率分布q为实际输出，H(p,q)为交叉熵. 多分类交叉熵的形式(一组输入数据): \\[ H(p,q)=-\\sum _x p(x)log q(x) \\] 同型: \\[ L = -\\sum_{i}^{m} y_i log a_i \\] 其中\\(y_i\\)真实样本分类结果, \\(a_i\\)第i个神经元经过softmax后的输出值 为了理解求导过程, 将求和函数拆开: \\[ \\begin{align*} L &amp;= -(y_1 log a_1 + y_2 log a_2 + \\cdots + y_i log a_i + \\cdots + y_m log a_m) \\\\ &amp;= -(y_1 log \\frac{e^{z_1}}{e^{z_1}+e^{z_2}+\\cdots+e^{z_m}} + y_2 log \\frac{e^{z_2}}{e^{z_1}+e^{z_2}+\\cdots+e^{z_m}} + \\cdots + y_i log \\frac{e^{z_i}}{e^{z_1}+e^{z_2}+\\cdots+e^{z_m}} + \\cdots + y_m log \\frac{e^{z_m}}{e^{z_1}+e^{z_2}+\\cdots+e^{z_m}}) \\end{align*} \\] 链式法则求导: \\[ \\begin{align*} \\frac{\\partial L}{\\partial z_i} &amp;= \\sum_j^m \\big(\\frac{\\partial L_j}{\\partial a_j} \\frac{\\partial a_j}{\\partial z_i}\\big) \\\\ &amp;= \\sum_j^m \\big( -y_j\\frac{1}{a_j} \\frac{\\partial a_j}{\\partial z_i} \\big) \\end{align*} \\] 对第一个输出\\(z_1\\)求偏导: \\[ \\begin{align*} \\frac{\\partial a_1}{\\partial z_1} &amp;= \\frac{e^{z_1}(e^{z_1}+e^{z_2}+\\cdots+e^{i_1}+\\cdots+e^{z_m}) - (e^{z_1})^2}{(e^{z_1}+e^{z_2}+\\cdots+e^{i_1}+\\cdots+e^{z_m})^2} \\\\ &amp;= \\frac{e^{z_1}}{e^{z_1}+e^{z_2}+\\cdots+e^{i_1}+\\cdots+e^{z_m}} - (\\frac{e^{z_1}}{e^{z_1}+e^{z_2}+\\cdots+e^{i_1}+\\cdots+e^{z_m}})^2 \\\\ &amp;= a_1(1 - a_1) \\\\ \\frac{\\partial a_2}{\\partial z_1} &amp;= \\frac{-e^{z_2} e^{z_1}}{(e^{z_1}+e^{z_2}+\\cdots+e^{i_1}+\\cdots+e^{z_m})^2} \\\\ &amp;= -a_1a_2 \\\\ \\frac{\\partial a_3}{\\partial z_1} &amp;= \\frac{-e^{z_3} e^{z_1}}{(e^{z_1}+e^{z_2}+\\cdots+e^{i_1}+\\cdots+e^{z_m})^2} \\\\ &amp;= -a_1a_3 \\end{align*} \\] \\(a_j\\)中含有所有\\(z_i\\)的信息, 所有求导稍微麻烦, (由上面的求导例子)求导分为两种情况: \\[ \\begin{align*} j = i: \\label{partial_aizi} \\tag{1} \\\\ \\frac{\\partial a_i}{\\partial z_i} &amp;= \\frac{e^{z_i}(e^{z_1}+e^{z_2}+\\cdots+e^{i_1}+\\cdots+e^{z_m}) - (e^{z_i})^2}{(e^{z_1}+e^{z_2}+\\cdots+e^{i_1}+\\cdots+e^{z_m})^2} \\\\ &amp;= \\frac{e^{z_i}}{e^{z_1}+e^{z_2}+\\cdots+e^{i_1}+\\cdots+e^{z_m}} - (\\frac{e^{z_i}}{e^{z_1}+e^{z_2}+\\cdots+e^{i_1}+\\cdots+e^{z_m}})^2 \\\\ &amp;= a_i(1 - a_i) \\\\ \\\\ j \\neq i: \\label{partial_aizj} \\tag{2} \\\\ \\frac{\\partial a_j}{\\partial z_i} &amp;= \\frac{-e^{z_j} e^{z_i}}{(e^{z_1}+e^{z_2}+\\cdots+e^{i_1}+\\cdots+e^{z_m})^2} \\\\ &amp;= -a_ia_j \\end{align*} \\] 综合\\(\\ref{partial_aizi}\\) 和 \\(\\ref{partial_aizj}\\): \\[ \\begin{align*} \\frac{\\partial L}{\\partial z_i} &amp;= \\sum_j^m \\big(\\frac{\\partial L_j}{\\partial a_j} \\frac{\\partial a_j}{\\partial z_i}\\big) \\\\ &amp;= \\sum_{j\\neq i}^m \\big(\\frac{\\partial L_j}{\\partial a_j} \\frac{\\partial a_j}{\\partial z_i}\\big) + \\sum_{j=i}^m \\big(\\frac{\\partial L_j}{\\partial a_j} \\frac{\\partial a_j}{\\partial z_i}\\big) \\\\ &amp;= \\sum_{j\\neq i}^m \\big( -y_j\\frac{1}{a_j} \\frac{\\partial a_j}{\\partial z_i} \\big) + \\big( -y_j\\frac{1}{a_j} \\frac{\\partial a_j}{\\partial z_i} \\big) \\\\ &amp;= \\sum_{j\\neq i}^m \\big( -y_j\\frac{1}{a_j} (-a_i a_j) + \\big( -y_i\\frac{1}{a_i} a_i(1-a_i) \\big) \\\\ &amp;= \\sum_{j\\neq i}^m a_iy_j + (-y_i(1-a_i)) \\\\ &amp;= \\sum_{j\\neq i}^m a_iy_j + a_iy_i -y_i \\\\ &amp;= a_i\\sum_jy_j - y_i \\\\ &amp;= a_i - y_i \\label{partial_Jizi} \\tag{3} \\end{align*} \\] 另外, \\(z_i = \\sum_k\\theta_{ik}x_{ik} + b_i\\) 如果\\(x_{ik}\\)是上一层的激活函数, 形式变为:\\(z_i = \\sum_k\\theta_{ik}a_{k}^{L-1} + b_i\\): \\[ \\frac{\\partial L}{\\partial \\theta_{ik}^{L}} = \\sum_j^m \\frac{\\partial L_j}{\\partial a_j} \\frac{\\partial a_j}{\\partial z_i} \\frac{\\partial z_i}{\\partial \\theta_{ik}} = (a_i - y_i) \\frac{\\partial z_i}{\\partial \\theta_{ik}} = (a_i - y_i)a_k^{L-1} \\] \\(a_k^{L-1}\\)为上一层的第k个激活函数 3 参考 交叉熵损失函数 Neural Network Cross Entropy 归一化 信息熵 交叉熵 为什么交叉熵可以用于计算代价 交叉熵代价函数(损失函数)及其求导推导 Softmax A Friendly Introduction to Cross-Entropy Loss the softmax function and its derivative Notes on Backpropagation with Cross Entropy 简单易懂的softmax交叉熵损失函数求导","tags":[{"name":"Guide","slug":"Guide","permalink":"https://qrsforever.github.io/tags/Guide/"}]},{"title":"(原创)本地规则引擎设计","date":"2019-06-17T07:59:42.000Z","path":"2019/06/17/Note/IOT/Rule-Engine-Summary/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; left: -4em; } pre.numberSource a.sourceLine::before { content: attr(title); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; } /* Alert */ code span.an { color: #008000; } /* Annotation */ code span.at { } /* Attribute */ code span.bu { } /* BuiltIn */ code span.cf { color: #0000ff; } /* ControlFlow */ code span.ch { color: #008080; } /* Char */ code span.cn { } /* Constant */ code span.co { color: #008000; } /* Comment */ code span.cv { color: #008000; } /* CommentVar */ code span.do { color: #008000; } /* Documentation */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.im { } /* Import */ code span.in { color: #008000; } /* Information */ code span.kw { color: #0000ff; } /* Keyword */ code span.op { } /* Operator */ code span.ot { color: #ff4000; } /* Other */ code span.pp { color: #ff4000; } /* Preprocessor */ code span.sc { color: #008080; } /* SpecialChar */ code span.ss { color: #008080; } /* SpecialString */ code span.st { color: #008080; } /* String */ code span.va { } /* Variable */ code span.vs { color: #008080; } /* VerbatimString */ code span.wa { color: #008000; font-weight: bold; } /* Warning */ 总体设计 日志系统 消息系统 引擎设计 模型 设备模型 规则模型 CLP语言 RulePayload设计 CLP设计 引擎UML HttpHandler 调试系统 系统监控(Python) 规则配置(JS) 1 总体设计 +----------------+ +-----------------+ +------------------+ | | | | | | | elink cloud | | debug monitor | | debug webpage | | | | python | | js | | | | | | | +----------------+ +-----------------+ +------------------+ \\ | | \\ | tcp | \\ | restapi | +-----+ \\ v | +-----+ | | +----------------+ +---------+ +---------+ | | | | | | gateway_agent | | monitor | | clp | | | | | | | (mqtt) | | (8192) | | | | | | | | +----------------+ +---------+ +---------+ | | | | | | | | | | | | | | | | m | | | v v | | e | | | +--------------------------------------+ | | s | | | | | | | s | | | +----&gt; | rule engine | | | a | | | | | | | | g | | | | +--------------------------------------+ | | e | | | | | ^ | | | | | | | | | | | | | | | | message queue | | | | | | | | | | | | | | | | | | | | | | | +---------------------------+ | | | | | | | | payload | | | | | log | | | | ----------------------- | | |utils| | | | | | rule,class,instance,scene | | | | | | | | +---------------------------+ | | | | | | | ^ | | | | | | | \\ | | | | | | | \\ | | | | | | v \\ | | | | | | +-----------------+ +---------------------+ | | | | | | | clipscpp | | datachannel | | | | | | | +-----------------+ | ------------------- | | | | | | | | clips core | | device, cloud, app | | | | | | | +-----------------+ +---------------------+ | | | | | | ^ ^ | | | | | | / \\ | | | | | | / \\ | | | | | | / \\ v | | | | +-----------------+ +----------------+ +---------------+ | | | | | sql table | | device manager | | http handler | | | | | | | | hu | | (8899) | | | | | +-----------------+ +----------------+ +---------------+ | | +-----+ ^ ^ ^ ^ +-----+ not | | | | ----\\--------------------+ | | +---------------------- / +---------------+ +-------------+ \\ / | | \\ +--------------+ | +---------------------+ | +------------+ | | ocf | | ipc system | | ocf | | | dev profiles | | | process | | | ocf device | | | coap | +---------------------+ | coap | | +--------------+ | | | +------------+ | | | +----------------+ | +--------------+ | konke bridge | &lt;-----+-----&gt; | hue bridge | +----------------+ fork fork +--------------+ | | | tcp | alljoy | | +---------------+ +---------------+ | konke gateway | | hue gateway | +---------------+ +---------------+ | | | zigbee unkown | | | ***************** ********* ****** sos ****** *** *** *** lightctrol red *** * light * * smartplug * *** *** *** scenectrol envsonsor *** ********* ****** ****** ***************** 2 日志系统 规则引擎重要的一个功能就是将用户配置的规则文本转换为clp脚本, 而调试clp脚本需要好的工具 , 将clp脚本的调试日志输出到统一的日志系统中是必然要做的. 首先使用固定buffer作为日志缓冲, 即ring buffer, 所有模块均可往这buffer中写入, 日志 的最终输出采用多通道方式, 可以需要依次输出到终端, 文件或者网络. +-----------------------+ +-------------------+ +----------------+ | RingBuffer | | MessageHandler | | DataSink | ----&gt;|-----------------------| |-------------------| |----------------| / | mBufHead | | mMessageQueue | | mRingBuffer |-------/ | mBufLength | | mMessageHandler | | m_dataSize | mRingBuffer |-----------------------| |-------------------| |----------------| | get[Write/Read]Head | | handleMessage | | onDataArrive | | submit[Write/Read] | +-------------------+ +----------------+ +-----------------------+ △ △ ^ | | | +-----------+-----------+ +-------------------------------------------------------------------------------+ | +------------+ | | | | | +-----------------+ | | | +-------&gt; | LogPool | v | | | |-----------------| mFilterHead +-----------+ | | | | mFilterHead |◇ --------------------------------&gt;| LogFilter | | | | |-----------------| |-----------| | | | | attachFilter | | m_next |◇ ----+ | | | detachFilter | |-----------| m_next | | | | | pushBlock | | | | onDataArrive | +-----------+ | | | receiveData | △ △ △ | | | | | | | | | | handleMessage | | | | | | +-----------------+ +----------------------+ | +-----------------------+ | | | | | | | | | | | | +-----------+ +-----------------+ +----------------+ +-----------------+ | | | LogThread | | ConsoleFilter | | FileFilter | | NetworkFilter | | | |-----------| |-----------------| |----------------| |-----------------| | | | | | | | | | | | | Create |-----------| | pushBlock | | pushBlock | | pushBlock | | +---------| run | +-----------------+ +----------------+ +-----------------+ | +-----------+ | | | | | | | ▽ | +----------------------+ +---------------+ | | MessageLooper | | Logger | | |----------------------| |---------------| mDataSink | | mMsgQueue | | mDataSink |◇ ------------------------------------------------+ |----------------------| |---------------| | run | | log | +----------------------+ +---------------+ 3 消息系统 消息系统是Homebrain主程序的血脉, 贯穿与整个引擎系统中. 也是程序设计中解耦合的重要方法. +--------------------------------------------------------------------------------------------------+ | | | | | +-----------------+ | | | Message | | | --&gt;|-----------------| | | +----------------+ / | what | | | | MessageQueue | / | arg[1|2|3] | target | | -----&gt;|----------------| / | target |◇ ------+ | / | mMessages |-------/ |-----------------| | / |----------------| mMessage | obtain | | / | enqueueMessage | | recycle | v / | removeMessage | | next | +--------------------+ / | nextMessage | +-----------------+ | MessageHandler | / +----------------+ |--------------------| mMessageQueue / | mMessageQueue |---------------/ | mMessageHandler |◆ -----------------+ |--------------------| mMessageHandler | | dispatchMessage | | +------------+ | sendMessage[Delay] | | +-----▷ | Thread | | handleMessage | | | |------------| +--------------------+ | | | PID | △ | | |------------| | | | | run | | | | +------------+ | v | +-------------------+ +----------------------+ | RuleEngineHandler | | MessageHandlerThread | |-------------------| |----------------------| | handleMessage | | mMessageQueue | +--------------------------------------+ +-------------------+ |----------------------| |while(true) | | run |-----&gt;| msg = mMessageQueue-&gt;nextMessage() | +----------------------+ | msg-&gt;target-&gt;dispatchMessage() | △ +--------------------------------------+ +-------------------+ | | RuleEngineThread | | |-------------------|-------------------------+ | | |-------------------| | run | +-------------------+ 4 引擎设计 采用专家系统工具Clips进行前向推导, clips是工具也是一种语言, 提供c接口, 同时也支持脚本 独立运行, 所以规则引擎的设计其实就转变为clips脚本设计. 4.1 模型 4.1.1 设备模型 { &quot;devicetype&quot;: &quot;oic.d.hue_bri_light&quot;, &quot;supertype&quot;: &quot;oic.d.light&quot;, &quot;devicename&quot;: &quot;飞利浦灯&quot;, &quot;manufacture&quot;: &quot;Philips&quot;, &quot;iconid&quot;: &quot;ic_default_light&quot;, &quot;version&quot;: &quot;0.9.2&quot;, &quot;profile&quot;: { &quot;OnlineState&quot;: { &quot;tag&quot;: &quot;在线状态&quot;, &quot;write&quot;: &quot;F&quot;, &quot;read&quot;: &quot;T&quot;, &quot;type&quot;: &quot;enum&quot;, &quot;range&quot;: { &quot;0&quot;: &quot;离线&quot;, &quot;1&quot;: &quot;在线&quot; } }, &quot;value&quot;: { &quot;rt&quot;: &quot;oic.r.switch.binary&quot;, &quot;iconid&quot;: &quot;ic_default_switch&quot;, &quot;tag&quot;: &quot;开关&quot;, &quot;read&quot;: &quot;T&quot;, &quot;write&quot;: &quot;T&quot;, &quot;type&quot;: &quot;enum&quot;, &quot;range&quot;: { &quot;0&quot;: &quot;关闭&quot;, &quot;1&quot;: &quot;开启&quot; }, &quot;unit&quot;: &quot;&quot; }, &quot;brightness&quot;: { &quot;rt&quot;: &quot;oic.r.light.brightness&quot;, &quot;tag&quot;: &quot;亮度&quot;, &quot;read&quot;: &quot;T&quot;, &quot;write&quot;: &quot;T&quot;, &quot;type&quot;: &quot;int&quot;, &quot;range&quot;: &quot;v &gt;= 0 and v &lt;= 100&quot;, &quot;unit&quot;: &quot;&quot; } } } 4.1.2 规则模型 { &quot;ruleName&quot;:&quot;example&quot;, &quot;ruleId&quot;:&quot;123456&quot;, &quot;description&quot;:&quot;this is a example for rule definition&quot;, &quot;trigger&quot;:{ &quot;triggerType&quot;:&quot;auto|manual&quot;, &quot;switch&quot;:{ &quot;enabled&quot;:&quot;on&quot;, &quot;timeCondition&quot;:&quot;on&quot;, &quot;deviceCondition &quot;:&quot;on&quot;, &quot;notify&quot;:&quot;on&quot;, &quot;manual&quot;:&quot;on&quot; } }, &quot;conditions&quot;:{ &quot;conditionLogic&quot;:&quot;and&quot;, &quot;timeCondition&quot;:[ { &quot;year&quot;:&quot;2018&quot;, &quot;month&quot;:&quot;10&quot;, &quot;day&quot;:&quot;10|13|17&quot;, &quot;hour&quot;:&quot;every&quot;, &quot;minute&quot;:&quot;every&quot;, &quot;second&quot;:&quot;1&quot; } ], &quot;deviceCondition&quot;:{ &quot;deviceLogic&quot;:&quot;or&quot;, &quot;deviceStatus&quot;:[ { &quot;deviceId&quot;:&quot;0007A895C8A7&quot;, &quot;propName&quot;:&quot;CurrentTemperature&quot;, &quot;propValue&quot;:&quot;v&gt;50&quot; }, { &quot;deviceId&quot;:&quot;DC330D799327&quot;, &quot;propName&quot;:&quot;onOffLight&quot;, &quot;propValue&quot;:&quot;v==true&quot; } ] } }, &quot;actions&quot;:{ &quot;execScene&quot;:&quot;&quot;, &quot;notify&quot;:{ &quot;title&quot;: &quot;xxx&quot;, &quot;message&quot;:&quot;Girlfriend Birthday!&quot; }, &quot;deviceControl&quot;:[ { &quot;deviceId&quot;:&quot;0007A895C7C7&quot;, &quot;propName&quot;:&quot;CurrentTemperature&quot;, &quot;propValue&quot;:&quot;50&quot; }, { &quot;deviceId&quot;:&quot;DC330D79932A&quot;, &quot;propName&quot;:&quot;onOffLight&quot;, &quot;propValue&quot;:&quot;true&quot; } ], &quot;manualRuleId&quot;:[ &quot;1528374365.417.48775&quot;, &quot;1528424679.929.67961&quot; ] } } 4.2 CLP语言 ruleID ^ -----&gt; comment, here we want is rule name. | / | / -----&gt; MultiSlot (defrule rul-0001 &quot;this is an example&quot; / +-------- (and / | (and ------------------------------------------------------- | ?fct_t1 &lt;- (datetime ?clock ?year ?month ?day ?hour ?minute ?second $?others) ---+ | 1 (test (= ?year 2018)) | Condition: Fact | layer (test (= ?month 06)) | (not use Template) | (test (or (= ?day 20) (= ?day 21) (= ?day 22) )) ---+ | ) -----------\\ | (or \\------&gt; Cell LHSNode | (object (is-a TempSensor) ---+ | (ID ?id &amp;:(eq ?id ins-0007A895C8A7)) | | 2 (CurrentTemperature ?CurrentTemperature &amp;:(&gt; ?CurrentTemperature 50)) | | layer ) | | (object (is-a Light) | Condition: Instance | (ID ?id &amp;:(eq ?id ins-DC330D799327)) /-----&gt; Cell | | (onOffLight ?onOffLight &amp;:(= ?onOffLight 1)) / | | ) \\ ------------------- ---+ | ) \\ +--&gt; timeout-ms +-------- ) --------&gt; SlotPoint | +--&gt; retry-count =&gt; | | +-------- (bind ?c (create-rule-context rul-0001 5000 5)) ------&gt; create the rule context | (if (eq ?c FALSE) then (return)) | (send ?c act-control ins-0007A895C7C7 CurrentTemperature 50) ---&gt; action: device control RHSNode | (send ?c act-control ins-DC330D79932A onOffLight 1) | (send ?c act-notify 10000001 &quot;tellYou&quot; &quot;Girlfriend Birthday&quot;) ---&gt; action: message notify | (switch-scene room1 commehome) ---&gt; action: switch scene +--------- (send ?c act-scene rul-1000) ---&gt; action: active manual rule ) ------------------------------------------------------------------------------------------------------------------------------ /---&gt; DEVICE is superclass + -------------- (defclass SmogAlarm / | (is-a DEVICE) -------/ | /---- (role concrete) (pattern-match reactive) ----&gt; can triggered by rule Class | v (slot OnlineState (type NUMBER) (allowed-numbers 2 1)) | (not abstract) (slot PowerOnOff (type INTEGER) (allowed-numbers 2 1)) | (slot SecurityLevel (type SYMBOL) (allowed-symbols low normal high)) | (slot Battery (type NUMBER) (allowed-numbers 2 1)) +---------------- ) / / v (INTEGER or FLOAT) 4.3 RulePayload设计 LHSNode Tree ********* &quot;and&quot;: condition logic *** LHSNode ** * * *** &quot;and&quot; *** / ********* \\ / | \\ child / | \\ child / cond | \\ / | \\ / | \\ / | \\ / | \\ / | \\ ********* +-------------+ ********* *** LHSNode *** | Condition | *** LHSNode *** * * | | * * *** &quot;or&quot; *** | &quot;and&quot; | *** &quot;or&quot; *** / ********* \\ +-------------+ ********* / \\ / \\ &quot;and&quot;: slot logic, only support &quot;and&quot; / cond cond \\ / \\ +---------------------------+ / \\ | +------+ | +-------------+ +-------------+ | | | | | Condition | | Condition | Fact Instance | | | | | | \\ / | | | &quot;and&quot; | | &quot;and&quot; | \\ type / | | +-------------+ +-------------+ \\ / v v | Condition &lt;---&gt; Device | TimeEvent | SlotPoint &lt;---&gt; Property | -----------+-----------+-----------+--------------- | | | | v v +-------------+ +-------------+ &quot;&amp;&quot;: cell logic | SlotPoint | | SlotPoint | &quot;|&quot;: cell logic | | | | &quot;~&quot; | &quot;&amp;&quot; | | &quot;|&quot; | +-------------+ +-------------+ | | | | v v +-------------------+ +-------------------+ | Cell | | Cell | Compare Symbol: &quot;=, &gt;, &lt;, &gt;=, &lt;=, &lt;&gt;&quot; | | | | Connective Symbol: &quot;&amp;, |, ~&quot; |(v &gt; 10) &amp; (v &lt; 20)| |(v = 10) | (v &gt; 20)| +-------------------+ +-------------------+ 4.4 CLP设计 (auto) (manual) device property profile rule online offline changed scene TestCase ---------------------------------------------------------------------------------------------------&gt; | | | | ║ | | | | | | mainHandler | | mainHander() | | | | ║ | | v v v v v ▼ v v MainThread -------------------------------------------------------------------------------------------------------------&gt; \\ profile rule \\ \\ ║ \\ \\ \\ json json \\ \\ ruleHandler \\ \\ \\ \\ \\ | | ║ | | \\ \\ \\ | | ▼ | | \\ \\ \\ v T v T T v T v T T T T RuleThread --------------+----------+---------+---------+---+-----+---------+---------+---------+---------+-----&gt; ^ T add | del | | \\ | / | | | | ruleHander() | | | | \\ | / | | | | | | | | | | | | | | | +--\\ +--\\ +--\\ +--\\ v v v /--+ /--+ /--+ /--+ \\ \\ \\ \\+---------+/ / / / T: timer (default 1s) \\ \\ \\ | refresh | / / / -----------------------------&gt;| |&lt;---------------------------- | run | +---------+ | +--------+ (LHS) | ----▷ | USER | +--------------------------------------------------------------+ / +--------+ salience | / △ | +-------------------+ / | v | RuleContext | / | +--------+ |-------------------| / / +---| Rule-1 | | rule-id | / / | +--------+ | timeout-ms | +---------+ +-----------+ +----------------+ | | retry-count |---------▷ | Context | | DEVICE | | SmogAlarm | +-&gt; +--------+ | current-try | | | |-----------| |----------------| +---| Rule-2 | | start-time | +---------+ | ID |◁ ------| OnlineState | | +--------+ | act-error | | UUID | | PowerOnOff | | | unanswer-list | | Class | | Battery | +-&gt; +--------+ | response-rules | +-----------+ +----------------+ +---| Rule-3 | |-------------------| | +--------+ | try-again | | | unanswer-count | +-&gt; +--------+ | act-control | | Rule-4 | | act-notify | +--------+ | act-scene | | +-------------------+ | +-------------------------+----------------------+------------+ | | | | | | Action | | | v +--------------------------&gt; act-control ------------&gt; act-notify -----------&gt; act-scene | send-message | (RHS) | ^ | ^ / | | | act-step-control | | true | | true / | | success | | | | | v | or | | +------&gt; make-rule | +------&gt; make-rule | fail | | | false (response) | | false (response) | | v | v | v | RuleEngineService --------------------------------------------------------------------------------------&gt; | ( HB ) ins-push txt-push msg-push | ^ ^ | | | services | | | +--------------------------------------------------+ Action +------&gt; onEnter ----------------+ | | | | ^ | ◇ | | | | +-------------------+ v +------&gt; onExit --------------+-------+ | SceneContext | +----------------+ | ^ | | ----------------- | | (MS)service | | | | | stime | |--------------- | | | | | where | +--&gt; enter start &lt;--+ | master | v | \\ | target | | | | name:skey | micro service | \\ | action ----+--&gt; story running &lt;--+--- state | (onStory) | \\ | services | | | | ntime | | | \\ | zombies | +--&gt; exit stop &lt;--+ | saves | | | \\ |-------------------| | args | +-------+------+ | \\ | add-service | | | | | | \\ | del-service | +----------------+ v v | | +-------------------+ gradligth autolight |2 3 | | | ^ ^ | | | | | | | | 1 +-----------+ swtich +----------+ | +------| gotosleep | ---------&gt; | wakeup | | stop +-----------+ to +----------+ | | | start 4 | +---------------------------------------------+ 4.5 引擎UML +---------------+ +--------------+ | Condition | +------------+ +----------+ | Action | |---------------| | SlotPoint | | _Cell_ | |--------------| | mSlotLogic | -----&gt; |------------| ------&gt;|----------| | mType | | mType | / | mCellLogic | / | nSymbol | | mCall | ^ | mCls | / | mSlotName | / | nValue | | mID | \\ | mID | / | mCells |◆ ---/mCells +----------+ | mSlotName | \\ | mSlots |◆ ----/mSlots +------------+ | mSlotValue | -------+ +---------------+ +--------------+ 1:n | mActions ^ +-----------+ mCondLogic: and/or/not | | | | mSlotLogic: and +------------+ +------------+ | +--------------+ | mCellLogic: &amp;,|,~ | SlotInfo | | RHSNode | | | LHSNode | | nSymbol: =,&gt;,&lt;,&gt;=,&lt;=,&lt;&gt; |------------| | -----------| | |--------------| | | nName | | mActions | | | mCondLogic | /mChildren | nValue | +------------+ +--------◇ | mConditions | / +------------+ ^ mConditions| mChildren |-/ +---------------+ ^ | +--------------+ | RulePayload | mSlots | 1:n +----------\\ ^ |---------------| | \\ | | mRuleName | ◆ +-------------+ \\ | | mRuleID | +-------------------+ | DataChannel | \\ | mLHS | mVersion | | InstancePayload | |-------------| \\ +----------◇ | mLHS | |-------------------| | | -----------------------◇ | mRHS | /--| mInsName | |send(payload)| mLHS |---------------| / | mClsName | +-------------+ | toString() | / | mSlots | △ ^ ^ △ +---------------+ / +-------------------+ | | | | | / | | | | | | +---------------+ | | +----------------+ | | | | | | | | | | | | ▽ | +------------------+ | | +--------------------------+ +----------+ ◁ --+ +-----------------+ | RuleDataChannel | | | | DeviceDataChannel | | Payload | | ClassPayload | mCloudMgr|------------------| | | | ------------------------ | |----------| ◁ -------------|-----------------| +----◆ | mCloudMgr | | | | mDeviceMgr | | type() | | classname | | | mHandler | | | | mHandler | +----------+ | superclass | | +------------------+ | | |--------------------------| | mSlots | version | | △ | | | onStateChanged() | | +---◇ | mSlots | | | | | | onPropertyChanged() |-------------+ 1:n | |-----------------| | | | | | send() | | | toString() | | +------------------------+ | | +--------------------------+◆ ---------------------+ | +-----------------+ | | ElinkRuleDataChannel | | | △ ◆ mHandler | | | |------------------------| | | | | | | | | | | | | +----------+ | | | | onRuleSync() | | | +-------------------------+ | | | +---------------+ | | send() | | | | ElinkDeviceDataChannel | | | | | Slot | | +------------------------+ | | |-------------------------| | | +---&gt; |---------------| | | | | onProfileSync() | | | | mType | | | | +-------------------------+ | | | mName | | | | | | | mMin/mMax | | +-------------------------+ | | mDeviceMgr | | | mAllowList | | | CloudManager | | | v | |---------------| | |-------------------------| | | +----------------------------------------+ | | toString() | +---&gt;| | | | | DeviceManger | | +---------------+ | registRuleSyncCallback | | | | -------------------------------------- | | | | | | | | | +-------------------------+ | | | registDeviceStateChangedCallback | | | | | registDevicePropertyChangedCallback | | | | | registDeviceProfileSyncCallback | | +-----------------------------------+ | | setProperty | | | +-----------------------------------+ +----------------------------------------+ | | | | | | +----------------------------+ +----------------+ | | | +----▷ | MessageHandler::Callback | &lt;----◇ | MessageHandler | ◁ ---------+ | | | | +----------------------------+ |----------------| | | | | | | mCallback | | | | | | +----------------+ | | | | +----------------------+ | | | | | RuleEngineService | | v | | |----------------------| mUrgentHandler +--------------------+ | | | mUrgentHandler |◇ --------------------------------------------------&gt;| RuleEventHandler | | | | | mCore +----------------------+ ------&gt;|--------------------| | | | mCore/mCoreUrgent | ◆ -------------&gt; | RuleEngineCore | / | handleMessage | | | | mServerRoot | |----------------------| / +--------------------+ | +--| mDeviceChannel | mEnv | mHandler | /mHandler | +----| mRuleChannel | +-------◆ | mEnv |◆ | | mOfflineInsesCalled | | |----------------------| | |----------------------| | | driver() | | | callInstancePush | | | | +------------------+ | callMessagePush | | | handleTimer | | RuleEventThread | | setDeviceChannel | | | handleClassSync | |------------------| | setRuleChannel | | | handleRuleSync | | mMessageQueue | | handleMessage | | | handleInstanceAdd | +------------------+ +----------------------+ | | handleInstanceDel | △ v | handleInstancePut | | +---------------+ +----------------------+ | | Environment | | | |--\\ +---------------------+ +---------------+ \\ CLP | RuleUrgentThread | Clipscpp ------&gt; clips6.30 |---------------------| | mService | +---------------------+ +----------------------+ | HBDatabase | | (template class) | /--------------◆ |----------------------| / mDB | mAutoCloseInterval | / | mDBPath mMutex | | |----------------------| | | updateOrInsert | v | deleteBy | +--------------------+ +--------------+ | queryBy | | DeviceProfileTable | |SQLiteDatabase| | | | | | | +----------------------+ +--------------------+ | | | | +--------------+ | | ^ mainDB() +---------------------+ | +------------------+ | | GatewayConnectTable | | | OCFDeviceTable | | mDB | | | | | | +---------------------+ | +------------------+ ◆ | | | +------------------+ | | | | SQLiteTable | ◁ ------------------------------------------------------------+---------------+ |------------------| | | | | | | | | | | +-----------------+ +------------------+ +-----------------+ +------------------+ | RuleEngineTable | | SceneEngineTable | | HBGlobalTable | | | | | | | +-----------------+ +------------------+ +-----------------+ 5 HttpHandler 自行百度craw, 一个非常快速和易于使用的C++微型web框架. 6 调试系统 6.1 系统监控(Python) python写的monitor工具, 设计了很多调试规则的选项, 具体功能: 显示系统信息 设置各模块的日志级别, 配置调试clp的各个变量信息等 将日志输出到monitor端,可以进行过滤, 可配置rule的调试选项等 显示当前系统的中的所有设备实例, 根据类型可以查询, 设置设备属性, 或直接设置到引擎中. 新建,查看,编辑,删除规则(只有查看功能有效, 其他功能已屏蔽, 可以使用webpage完成操作). 执行一些定义好的模式, 或者直接发送\"事实\"触发规则 6.2 规则配置(JS) 基于restapi实现规则的配置与执行, 具体功能: 网关(桥:hue, konke)配置管理 网关(桥)列表: 添加新的网关: 设备的发现及控制管理 设备发现: 设备列表及控制: 规则的编辑及管理 规则列表: 规则配置: 场景的编辑及管理 场景列表: 场景微服务配置:","tags":[{"name":"IOT","slug":"IOT","permalink":"https://qrsforever.github.io/tags/IOT/"},{"name":"Design","slug":"Design","permalink":"https://qrsforever.github.io/tags/Design/"}]},{"title":"(原创)用数据模拟卷积-初探","date":"2019-06-14T08:13:39.000Z","path":"2019/06/14/ML/Scratch/convolution_plot/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 网上很多写卷积的文档都是用\"很简单\"表示卷积so easy, 但草民认真读了他们的文章后, 反而对 卷积更不理解, 即使到现在还是不能理解, 这篇文章只是从数据上分析卷积过程, 很多疑点还需继 续探究","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"},{"name":"Scracth","slug":"Scracth","permalink":"https://qrsforever.github.io/tags/Scracth/"}]},{"title":"Jupyter支持动态图","date":"2019-06-13T08:18:35.000Z","path":"2019/06/13/Note/Jupyter/animations/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 1 参考 http://louistiao.me/posts/notebooks/embedding-matplotlib-animations-in-jupyter-notebooks/ http://louistiao.me/posts/notebooks/embedding-matplotlib-animations-in-jupyter-as-interactive-javascript-widgets/","tags":[{"name":"Jupyter","slug":"Jupyter","permalink":"https://qrsforever.github.io/tags/Jupyter/"}]},{"title":"A Student's Guide to Vectors and Tensors","date":"2019-06-12T02:03:33.000Z","path":"2019/06/12/Story/Math/Guide_Vectors_and_Tensors/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 非常形象的讲解张量 youtube 知乎部分翻译","tags":[]},{"title":"(原创)简单感知机-初探","date":"2019-06-03T15:53:37.000Z","path":"2019/06/03/ML/Scratch/simple_perceptron/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 一个简单的小程序, 来了解感知机如何工作的, 激活函数为sign","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"},{"name":"Scracth","slug":"Scracth","permalink":"https://qrsforever.github.io/tags/Scracth/"}]},{"title":"收藏学习网站","date":"2019-06-03T12:30:21.000Z","path":"2019/06/03/Story/Website/fav/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} AI Other 印度极客门户 1 AI http://neuralnetworksanddeeplearning.com/about.html The purpose of this book is to help you master the core concepts of neural networks, including modern techniques for deep learning. After working through the book you will have written code that uses neural networks and deep learning to solve complex pattern recognition problems. And you will have a foundation to use neural networks and deep learning to attack problems of your own devising. https://datascience-enthusiast.com/DL/dlindex.html 个人博客(Fisseha Berhane), 其中Deep Learning几篇文章可以参考学习. 2 Other 2.1 印度极客门户 geeksforgeeks 集中算法智慧的站点 需要翻墙","tags":[{"name":"Website","slug":"Website","permalink":"https://qrsforever.github.io/tags/Website/"}]},{"title":"卷积神经网络CNN理解","date":"2019-06-03T10:08:15.000Z","path":"2019/06/03/ML/Guide/cnn_intro/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 0.1 网络资源 Intuitively Understanding Convolutions for Deep Learning 卷积神经网络CNN总结 卷积要旋转180度 卷积神经网络简介 别怕,\"卷积\"其实很简单 wikipedia:convolution wikipedia:卷积 mathworld 图形Demo1 图形Demo2 最容易理解的对卷积(convolution)的解释 Understanding Convolutions 离散卷积过程举例图示详解 推荐: 卷积介绍 0.2 重要语句 卷积的重要的物理意义是:一个函数(如:单位响应)在另一个函数(如:输入信号)上的加权叠加. 对于线性时不变系统,如果知道该系统的单位响应,那么将单位响应和输入信号求卷积,就相当于把 输入信号的各个时间点的单位响应加权叠加,就直接得到了输出信号.系统的零状态响应等于单位 冲击响应卷积上输入函数.","tags":[{"name":"Guide","slug":"Guide","permalink":"https://qrsforever.github.io/tags/Guide/"}]},{"title":"(原创)神经元节点之雪花分割图例","date":"2019-06-02T15:33:56.000Z","path":"2019/06/02/ML/Scratch/snowflake_neural_logic/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 模拟一下如何处理线性不可分的问题, 纯属自娱自乐.","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"},{"name":"Scracth","slug":"Scracth","permalink":"https://qrsforever.github.io/tags/Scracth/"}]},{"title":"(原创)embedding向量查询","date":"2019-05-31T06:48:15.000Z","path":"2019/05/31/ML/API/embedding_lookup/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 用python实例分析embedding_lookup接口的使用, mod 和div的区别","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"},{"name":"API","slug":"API","permalink":"https://qrsforever.github.io/tags/API/"}]},{"title":"不翻墙打开受限网站","date":"2019-05-30T13:41:49.000Z","path":"2019/05/30/Tools/How/googleapis.com/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 这些网站很久才能打开, 因为去请求了google服务. 在/etc/hosts文件中添加: 127.0.0.1 ajax.googleapis.com 127.0.0.1 apis.google.com 如果翻墙后, 如有必要记着屏蔽","tags":[{"name":"ETC","slug":"ETC","permalink":"https://qrsforever.github.io/tags/ETC/"}]},{"title":"(原创)激活函数和导函数","date":"2019-05-30T07:33:35.000Z","path":"2019/05/30/ML/Guide/activation_functions/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 使用matplotlib分别画出几个常用的激活函数和他们的导函数的图像","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"},{"name":"Guide","slug":"Guide","permalink":"https://qrsforever.github.io/tags/Guide/"},{"name":"Plot","slug":"Plot","permalink":"https://qrsforever.github.io/tags/Plot/"}]},{"title":"(原创)梯度下降BGD,SGD,MBGD实例","date":"2019-05-28T07:30:04.000Z","path":"2019/05/28/ML/Scratch/GD/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 简易实现BGB,SGB,MBGB的python实现","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"},{"name":"Scracth","slug":"Scracth","permalink":"https://qrsforever.github.io/tags/Scracth/"}]},{"title":"因子分析","date":"2019-03-23T07:00:00.000Z","path":"2019/03/23/Books/Statistics/analysis_factor/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 0.1 参考 主成分分析和因子分析 浅析主成分分析与因子分析在SPSS中的区别 0.2 基本思想 因子分析是主成分分析的推广。 实际上,主成分分析可以看作是因子分析的一个特例. 同是在确保数据信息最小丢失的原则下，因子分析研究变量之间的内部依赖关系，从原始变量的相 关矩阵出发，将相关性较强的变量归于一类，最终形成几类假想型变量。每类变量代表了一个“公 共因子”（本质因子、基本特征）。 因子分析主要功能是简化数据、探测数据的基本结构。还可以与回归分析、聚类分析、判别分析等 套用。 0.3 区别 主成分分析中的主成分个数与原始变量个数是一样的,即有几个变量就有几个主成分,只不过最后我 们确定了少数几个主成分而已。而因子分析则需要事先确定要找几个成分,也称为因子 (principal componfa ct)or) ,然后将原始变量综合为少数的几个因子,以再现原始变量与因子之间的关系,一 般来说,因子的个数会远远少于原始变量的个数","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Draft","slug":"Draft","permalink":"https://qrsforever.github.io/tags/Draft/"}]},{"title":"统计图","date":"2019-03-22T07:14:38.000Z","path":"2019/03/22/Books/Statistics/statistics_charts/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 条形图 定义 简单条形图 复式条形图 饼图 定义 复式饼图 帕累托图 定义 环形图 定义 直方图 定义 直方图和条形图区别 茎叶图 雷达图 PP图 QQ图 1 条形图 1.1 定义 用宽度相同的条形的高度或长短来表示数据多少的图形. 1.2 简单条形图 1.3 复式条形图 2 饼图 2.1 定义 用圆形以及圆内扇形的角度来表示数值大小的图形, 主要用于表示一个样本(或总体)中各组成部分 的数据占全部数据的比例, 对于研究结构性问题十分有用. 2.2 复式饼图 3 帕累托图 3.1 定义 按各类别数据出现的频数的多少排序后绘制的条形图. 左侧的纵轴为计数值(count), 右侧的纵轴 为累计百分比(percent) 4 环形图 4.1 定义 简单饼图显示一个样本各个部分所占用的比例 每个样本用一个环表示, 样本中的每一部分数据使用环中的一段表示, 因此环形图可以显示多个样 本各个部分占的相应比例, 从而有利于对构成的比较研究. 5 直方图 5.1 定义 显示分组数据, 用矩形的宽度和高度(面积)来表示频数分布. 5.2 直方图和条形图区别 条形图: 用条形的长度表示各类别频数的多少, 宽度是固定的, 分开排列 直方图: 用面积表示各组频数的多少, 矩形的高度表示每一组的频数或频率, 宽度表示各组的组距 , 高度和宽度均有意义, 其次分组数据具有连续性. 6 茎叶图 7 雷达图 8 PP图 9 QQ图","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Draft","slug":"Draft","permalink":"https://qrsforever.github.io/tags/Draft/"}]},{"title":"聚类分析","date":"2019-03-22T07:12:58.000Z","path":"2019/03/22/Books/Statistics/analysis_cluster/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;}","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Draft","slug":"Draft","permalink":"https://qrsforever.github.io/tags/Draft/"}]},{"title":"判别分析","date":"2019-03-22T07:12:33.000Z","path":"2019/03/22/Books/Statistics/analysis_discriminatory/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;}","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Draft","slug":"Draft","permalink":"https://qrsforever.github.io/tags/Draft/"}]},{"title":"主成分分析","date":"2019-03-22T07:10:39.000Z","path":"2019/03/22/Books/Statistics/analysis_principal_components/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 0.1 参考 主成分分析和因子分析 浅析主成分分析与因子分析在SPSS中的区别 0.2 基本思想 实质上是将多个指标综合成少数几个指标的方法。 主成分分析是利用降维的方法，在确保数据信息损失最小的原则下，把多个指标转化为少数几 个综合指标的一种对多变量数据进行最佳综合简化的多元统计方法。主成分是原始变量之间的 线性组合，且主成分之间互不相关。 主成份分析的主要目的是压缩指标个数、简化数据，但常常与回归分析、因子分析、聚类分析、判 别分析等等套用。","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Draft","slug":"Draft","permalink":"https://qrsforever.github.io/tags/Draft/"}]},{"title":"卡方统计量","date":"2019-03-18T12:28:01.000Z","path":"2019/03/18/Books/Statistics/wiki_chi-square/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} draft 卡方拟合优度检验 卡方独立性检验 1 draft 卡方检验有两个用途：列联表的独立性检验和拟合优度检验。 1.1 卡方拟合优度检验 Goodness of fit test 百科 拟合优度检验是用卡方统计量进行统计显著性检验的重要内容之一。它是依据总体分布状况，计算 出分类变量中各类别的期望频数，与分布的观察频数进行对比，判断期望频数与观察频数是否有显 著差异，从而达到从分类变量进行分析的目的。 用来检验观测数与依照某种假设或分布模型计算得到的理论数之间一致性的一种统计假设检验，以 便判断该假设或模型是否与实际观测数相吻合。 检验观测数与理论数之间的一致性。 1.2 卡方独立性检验 通过检验观测数与理论数之间的一致性来判断事件之间的独立性，即判断两个事件是否是独立事件 或处理间差异是否显著。","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Wiki","slug":"Wiki","permalink":"https://qrsforever.github.io/tags/Wiki/"}]},{"title":"非参数统计例题1","date":"2019-03-15T02:01:29.000Z","path":"2019/03/15/Books/Statistics/cases_nonparametric_analysis_1/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 下表中的数据是12家咖啡连锁店周末(周日)、平时和假日平均每日销售额统计表,单位(百元): (1)请问用什么方法可以回答圣诞节与周末(周日)销售额之间有关系吗? 请写出具体的分析思路和分析结果。","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Cases","slug":"Cases","permalink":"https://qrsforever.github.io/tags/Cases/"}]},{"title":"例题之地区消费水平","date":"2019-02-27T13:48:03.000Z","path":"2019/02/27/Books/Statistics/cases_t_and_variance_analysis/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 国家统计局目前对地区的划分中,将我国 31 个省市自治区划分为东部地区、中部地区、西部地区、东北地区。 要分析四个地区的平均消费水平是否存在显著差异,所用的统计方法有哪些?这些方法的区别是什么? 你会选择什么方法进行分析?你的假设是什么? 答: 可两两之间进行 t 检验或 4 组数据进行方差分析。 T 检验:两独立样本 t 检验(two independent samples t-test),又称成组 t 检验。 适用于完全随机设计的两样本均数的比较,其目的是检验两样本所来自总体的均数是 否相等。完全随机设计是分别从不同总体中随机抽样进行研究,即本项目中从不同地 区随机抽样进行研究相符合。 单因素方差分析:研究一个分类型自变量对一个数值型因变量的影响,如本项目中就 是研究四个不同地区对平均消费水平的影响。 区别:T 检验属于均值分析,它是用来检验两类母体均值是否相等。均值分析是来考察 不同样本之间是否存在差异,即两个不同地区之间消费水平是否存在显著差异;而方 差分析则是评估不同样本之间的差异是否由某个因素起主要作用,即消费水平的显著 差异是否是由地区不同引起的。并且通过单因素方差分析只能得出 4 组数据是否存在 显著差异,并不能得出具体是哪几个地区之间有显著差异。 Kruskal-Wallis 检验: 用于检验多个独立总体是否相同的一种非参数检验方法。 原假设: 四 个地区平均消费水平相等,备择假设: 四个地区平均消费水平不全相等。不需要方差分析的 正态分布且方差相等的假设。该检验可用于顺序数据也可用于数值型数据 我选择用单因素方差分析,因为本项目共分为 4 组数据,只要求分析他们之间是 否存在显著差异,并不用确定具体差异如何存在的。原假设为:四个地区之间的平均 消费水平没有显著差异。若最终拒绝原假设,则说明四个地区之间的平均水平存在显 著差异。即证明了题目中的要求。因为对四个地区的分布和方差未知,选择非参数方法。","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Cases","slug":"Cases","permalink":"https://qrsforever.github.io/tags/Cases/"}]},{"title":"统计学之指数","date":"2019-02-21T02:30:19.000Z","path":"2019/02/21/Books/Statistics/statistics_index/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 0.1 diffirent between \"exponent\" and \"index\" exponent: 数学上的指数, 2的3次方,3就是指数 index: 价格、股票等方面的比较指数 index, 相对数, 基期, 报告期 0.2 简单综合指数和简单平均指数 简单综合: 简单求和, 价格低的容易被高价格掩盖 简单平均: 基期与报告期对比之后再综合 这里的简单是指把所有商品价值同等看待, 缺乏实际意义 0.3 加权综合指数和加权平均指数","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"}]},{"title":"设备操作API","date":"2018-12-29T09:51:48.000Z","path":"2018/12/29/Company/Leshi/Device_Operate_API/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; left: -4em; } pre.numberSource a.sourceLine::before { content: attr(title); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; } /* Alert */ code span.an { color: #008000; } /* Annotation */ code span.at { } /* Attribute */ code span.bu { } /* BuiltIn */ code span.cf { color: #0000ff; } /* ControlFlow */ code span.ch { color: #008080; } /* Char */ code span.cn { } /* Constant */ code span.co { color: #008000; } /* Comment */ code span.cv { color: #008000; } /* CommentVar */ code span.do { color: #008000; } /* Documentation */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.im { } /* Import */ code span.in { color: #008000; } /* Information */ code span.kw { color: #0000ff; } /* Keyword */ code span.op { } /* Operator */ code span.ot { color: #ff4000; } /* Other */ code span.pp { color: #ff4000; } /* Preprocessor */ code span.sc { color: #008080; } /* SpecialChar */ code span.ss { color: #008080; } /* SpecialString */ code span.st { color: #008080; } /* String */ code span.va { } /* Variable */ code span.vs { color: #008080; } /* VerbatimString */ code span.wa { color: #008000; font-weight: bold; } /* Warning */ 设备操作 环境变量 API测试 搜索新设备 查询主机设备列表 添加新设备 查询设备在线状态 查询设备属性Profile 设备状态信息获取 操作设备属性 1 设备操作 1.1 环境变量 export ip=192.168.124.16 export port=8899 export token=&quot;token:1234567&quot; export devId=&quot;00124b00-19a8-9215-d0d0&quot; export typeId=&quot;oic.d.kk_lightctrl&quot; export prop1=&quot;{\\&quot;name\\&quot;:\\&quot;value1\\&quot;, \\&quot;value\\&quot;:\\&quot;0\\&quot;}&quot; export prop2=&quot;{\\&quot;name\\&quot;:\\&quot;value2\\&quot;, \\&quot;value\\&quot;:\\&quot;1\\&quot;}&quot; 1.2 API测试 1.2.1 搜索新设备 命令: curl -v -X POST http://$ip:$port/api/familydevice/discovery -H $token 输出: { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familydevice/discovery&quot;, &quot;status&quot;: 1, &quot;result&quot;: { &quot;ret&quot;: &quot;success&quot;, &quot;maxDuration&quot;: &quot;5&quot; } } 1.2.2 查询主机设备列表 命令: curl -v -X POST http://$ip:$port/api/familydevice/listall -H $token 输出: { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familydevice/list&quot;, &quot;status&quot;: 1, &quot;result&quot;: [ { &quot;deviceId&quot;: &quot;00124b00-12cc-8000-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_envsensor&quot;, &quot;ownedStatus&quot;: &quot;false&quot; }, { &quot;deviceId&quot;: &quot;00124b00-12d2-676f-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_envsensor&quot;, &quot;ownedStatus&quot;: &quot;false&quot; }, { &quot;deviceId&quot;: &quot;00124b00-1646-0823-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_scenectrl&quot;, &quot;ownedStatus&quot;: &quot;false&quot; }, { &quot;deviceId&quot;: &quot;00124b00-16bd-69a5-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_doorcontact&quot;, &quot;ownedStatus&quot;: &quot;true&quot; }, { &quot;deviceId&quot;: &quot;00124b00-16bd-9578-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_sosalarm&quot;, &quot;ownedStatus&quot;: &quot;true&quot; }, { &quot;deviceId&quot;: &quot;00124b00-16bd-a7a8-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_doorcontact&quot;, &quot;ownedStatus&quot;: &quot;true&quot; }, { &quot;deviceId&quot;: &quot;00124b00-1769-1549-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_doorcontact&quot;, &quot;ownedStatus&quot;: &quot;false&quot; }, { &quot;deviceId&quot;: &quot;00124b00-1769-2c9b-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_sosalarm&quot;, &quot;ownedStatus&quot;: &quot;true&quot; }, { &quot;deviceId&quot;: &quot;00124b00-176c-76cd-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_sosalarm&quot;, &quot;ownedStatus&quot;: &quot;true&quot; }, { &quot;deviceId&quot;: &quot;00124b00-18dc-e960-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_smartplug&quot;, &quot;ownedStatus&quot;: &quot;true&quot; }, { &quot;deviceId&quot;: &quot;00124b00-18dc-eaa1-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_smartplug&quot;, &quot;ownedStatus&quot;: &quot;true&quot; }, { &quot;deviceId&quot;: &quot;00124b00-199f-5c97-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_lightctrl&quot;, &quot;ownedStatus&quot;: &quot;true&quot; }, { &quot;deviceId&quot;: &quot;00124b00-19a8-9215-d0d0&quot;, &quot;typeId&quot;: &quot;oic.d.kk_lightctrl&quot;, &quot;ownedStatus&quot;: &quot;false&quot; } ] } 1.2.3 添加新设备 命令: curl -v -X POST http://$ip:$port/api/familydevice/bind -H $token -d \"{\\\"deviceId\\\":\\\"$devId\\\", \\\"typeId\\\":\\\"$typeId\\\"}\" 输出： { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familydevice/bind&quot;, &quot;status&quot;: 1, &quot;result&quot;: { &quot;typeId&quot;: &quot;oic.d.kk_lightctrl&quot;, &quot;deviceId&quot;: &quot;00124b00-19a8-9215-d0d0&quot;, &quot;ownedStatus&quot;: &quot;true&quot; } } 1.2.4 查询设备在线状态 命令: curl -v -X POST http://$ip:$port/api/familydevice/isonline -H $token -d \"{\\\"deviceId\\\":\\\"$devId\\\"}\" 输出: { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familydevice/isonline&quot;, &quot;status&quot;: 1, &quot;result&quot;: { &quot;isonline&quot;: &quot;true&quot; } } 1.2.5 查询设备属性Profile 命令: curl -v -X POST http://$ip:$port/api/familydevice/profile -H $token -d \"{\\\"deviceId\\\":\\\"$devId\\\"}\" 输出: { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familydevice/profile&quot;, &quot;status&quot;: 1, &quot;result&quot;: { &quot;profile&quot;: { &quot;OnlineState&quot;: { &quot;tag&quot;: &quot;在线状态&quot;, &quot;write&quot;: &quot;F&quot;, &quot;read&quot;: &quot;T&quot;, &quot;type&quot;: &quot;enum&quot;, &quot;range&quot;: { &quot;0&quot;: &quot;离线&quot;, &quot;1&quot;: &quot;在线&quot; } }, &quot;value1&quot;: { &quot;tag&quot;: &quot;开关状态1&quot;, &quot;read&quot;: &quot;T&quot;, &quot;write&quot;: &quot;T&quot;, &quot;type&quot;: &quot;enum&quot;, &quot;range&quot;: { &quot;0&quot;: &quot;离线&quot;, &quot;1&quot;: &quot;在线&quot; } }, &quot;value2&quot;: { &quot;tag&quot;: &quot;开关状态2&quot;, &quot;read&quot;: &quot;T&quot;, &quot;write&quot;: &quot;T&quot;, &quot;type&quot;: &quot;enum&quot;, &quot;range&quot;: { &quot;0&quot;: &quot;离线&quot;, &quot;1&quot;: &quot;在线&quot; } }, &quot;value3&quot;: { &quot;tag&quot;: &quot;开关状态3&quot;, &quot;read&quot;: &quot;T&quot;, &quot;write&quot;: &quot;T&quot;, &quot;type&quot;: &quot;enum&quot;, &quot;range&quot;: { &quot;0&quot;: &quot;离线&quot;, &quot;1&quot;: &quot;在线&quot; } } }, &quot;description&quot;: &quot;控客3T灯控&quot;, &quot;manufacture&quot;: &quot;Konke&quot;, &quot;version&quot;: &quot;0.9.2&quot; } } 1.2.6 设备状态信息获取 命令: curl -v -X POST http://$ip:$port/api/familydevice/status -H $token -d \"{\\\"deviceId\\\":\\\"$devId\\\"}\" 输出: { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familydevice/status&quot;, &quot;status&quot;: 1, &quot;result&quot;: { &quot;value1&quot;: &quot;0&quot;, &quot;value2&quot;: &quot;0&quot;, &quot;value3&quot;: &quot;0&quot; } } 1.2.7 操作设备属性 命令: curl -v -X POST http://$ip:$port/api/familydevice/operate -H $token -d \"{\\\"deviceId\\\":\\\"$devId\\\", \\\"propSet\\\":\\\"$propset\\\"}\" 输出: { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familydevice/operate&quot;, &quot;status&quot;: 1, &quot;result&quot;: { &quot;ret&quot;: &quot;SUCCESS&quot; } }","tags":[{"name":"Work","slug":"Work","permalink":"https://qrsforever.github.io/tags/Work/"}]},{"title":"场景操作API","date":"2018-12-29T09:50:40.000Z","path":"2018/12/29/Company/Leshi/Scene_Operate_API/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; left: -4em; } pre.numberSource a.sourceLine::before { content: attr(title); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; } /* Alert */ code span.an { color: #008000; } /* Annotation */ code span.at { } /* Attribute */ code span.bu { } /* BuiltIn */ code span.cf { color: #0000ff; } /* ControlFlow */ code span.ch { color: #008080; } /* Char */ code span.cn { } /* Constant */ code span.co { color: #008000; } /* Comment */ code span.cv { color: #008000; } /* CommentVar */ code span.do { color: #008000; } /* Documentation */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.im { } /* Import */ code span.in { color: #008000; } /* Information */ code span.kw { color: #0000ff; } /* Keyword */ code span.op { } /* Operator */ code span.ot { color: #ff4000; } /* Other */ code span.pp { color: #ff4000; } /* Preprocessor */ code span.sc { color: #008080; } /* SpecialChar */ code span.ss { color: #008080; } /* SpecialString */ code span.st { color: #008080; } /* String */ code span.va { } /* Variable */ code span.vs { color: #008080; } /* VerbatimString */ code span.wa { color: #008000; font-weight: bold; } /* Warning */ 场景操作 环境变量 场景测试文件 数据库 API测试 创建场景 更新场景 删除场景 查询场景 查询场景列表 手动执行接口 1 场景操作 1.1 环境变量 export ip=192.168.124.16 export port=8899 export token=&quot;token:1234567&quot; 1.2 场景测试文件 自动模式的autotest.json文件 { &quot;sceneId&quot;: &quot;-&quot;, &quot;sceneName&quot;: &quot;autotest&quot;, &quot;description&quot;: &quot;当环境传感器流明值小于等于35则打开灯&quot;, &quot;trigger&quot;: { &quot;switch&quot;: { &quot;enabled&quot;: &quot;on&quot;, &quot;notify&quot;: &quot;off&quot;, &quot;timeCondition&quot;: &quot;off&quot;, &quot;deviceCondition&quot;: &quot;on&quot;, &quot;manual&quot;: &quot;on&quot; }, &quot;triggerType&quot;: &quot;auto|manual&quot; }, &quot;conditions&quot;: { &quot;conditionLogic&quot;: &quot;&quot;, &quot;deviceCondition&quot;: { &quot;deviceStatus&quot;: [ { &quot;propValue&quot;: &quot;v&lt;=35&quot;, &quot;deviceId&quot;: &quot;00124b00-12cc-8000-d0d0&quot;, &quot;propName&quot;: &quot;illuminance&quot; } ], &quot;deviceLogic&quot;: &quot;&quot; } }, &quot;actions&quot;: { &quot;deviceControl&quot;: [ { &quot;propValue&quot;: &quot;1&quot;, &quot;deviceId&quot;: &quot;00124b00-19a8-9215-d0d0&quot;, &quot;propName&quot;: &quot;value1&quot; }, { &quot;propValue&quot;: &quot;1&quot;, &quot;deviceId&quot;: &quot;00124b00-19a8-9215-d0d0&quot;, &quot;propName&quot;: &quot;value2&quot; } ] } } 手动模式的manualtest.json文件 { &quot;sceneId&quot;: &quot;-&quot;, &quot;sceneName&quot;: &quot;manualtest&quot;, &quot;description&quot;: &quot;&quot;, &quot;trigger&quot;: { &quot;switch&quot;: { &quot;enabled&quot;: &quot;on&quot;, &quot;notify&quot;: &quot;off&quot;, &quot;timeCondition&quot;: &quot;off&quot;, &quot;deviceCondition&quot;: &quot;off&quot;, &quot;manual&quot;: &quot;off&quot; }, &quot;triggerType&quot;: &quot;manual&quot; }, &quot;actions&quot;: { &quot;deviceControl&quot;: [ { &quot;propValue&quot;: &quot;1&quot;, &quot;deviceId&quot;: &quot;00124b00-19a8-9215-d0d0&quot;, &quot;propName&quot;: &quot;value3&quot; } ] } } 1.3 数据库 删除所有数据: adb shell sqlite3 /data/homebrain/engine.db \\\"delete from rules\\\" 查询所有数据: adb shell sqlite3 /data/homebrain/engine.db \\\"select id, name from rules\\\" 1.4 API测试 1.4.1 创建场景 命令: ret1SceneId=$(curl -v -X POST http://$ip:$port/api/familyscene/add -H $token -d @autotest.json 2&gt;/dev/null | grep -Po 'sceneId[\" :]+\\K[^\"]+') 命令: ret2SceneId=$(curl -v -X POST http://$ip:$port/api/familyscene/add -H $token -d @manualtest.json 2&gt;/dev/null | grep -Po 'sceneId[\" :]+\\K[^\"]+') 命令: ret3SceneId=$(curl -v -X POST http://$ip:$port/api/familyscene/add -H $token -d @manualtest.json 2&gt;/dev/null | grep -Po 'sceneId[\" :]+\\K[^\"]+') 输出: { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familyscene/add&quot;, &quot;result&quot;: { &quot;resInfo&quot;: &quot;规则添加成功&quot;, &quot;sceneId&quot;: &quot;163616&quot;, &quot;ruleScript&quot;: 1 }, &quot;status&quot;: 1 } ret[1-3]SceneId是返回的场景Id 1.4.2 更新场景 命令: cat autotest.json | sed \"s/\\\"-\\\"/\\\"$ret1SceneId\\\"/\" | sed \"s/=35/\\=45/\" | tee /tmp/autotest.json 命令: curl -v -X POST http://$ip:$port/api/familyscene/modify -H $token -d @/tmp/autotest.json { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familyscene/modify&quot;, &quot;result&quot;: { &quot;resInfo&quot;: &quot;规则修改成功&quot;, &quot;sceneId&quot;: &quot;163616&quot;, &quot;ruleScript&quot;: 1 }, &quot;status&quot;: 1 } 1.4.3 删除场景 命令: curl -v -X POST http://$ip:$port/api/familyscene/delete -H $token -d \"{\\\"sceneId\\\":\\\"$ret3SceneId\\\"}\" { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familyscene/delete&quot;, &quot;result&quot;: { &quot;resInfo&quot;: &quot;规则删除成功&quot;, &quot;sceneId&quot;: &quot;582111&quot;, &quot;ruleScript&quot;: 1 }, &quot;status&quot;: 1 } 1.4.4 查询场景 命令: curl -v -X POST http://$ip:$port/api/familyscene/query -H $token -d \"{\\\"sceneId\\\":\\\"$ret1SceneId\\\"}\" { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familyscene/query&quot;, &quot;result&quot;: { &quot;resInfo&quot;: &quot;规则查询成功&quot;, &quot;scene&quot;: { &quot;sceneId&quot;: &quot;163616&quot;, &quot;sceneName&quot;: &quot;autotest&quot;, &quot;description&quot;: &quot;当环境传感器监控流明值小于等于35则打开灯&quot;, &quot;trigger&quot;: { &quot;switch&quot;: { &quot;enabled&quot;: &quot;on&quot;, &quot;notify&quot;: &quot;off&quot;, &quot;timeCondition&quot;: &quot;off&quot;, &quot;deviceCondition&quot;: &quot;on&quot;, &quot;manual&quot;: &quot;on&quot; }, &quot;triggerType&quot;: &quot;auto|manual&quot; }, &quot;conditions&quot;: { &quot;conditionLogic&quot;: &quot;&quot;, &quot;deviceCondition&quot;: { &quot;deviceStatus&quot;: [ { &quot;propValue&quot;: &quot;v&lt;=45&quot;, &quot;deviceId&quot;: &quot;00124b00-12cc-8000-d0d0&quot;, &quot;propName&quot;: &quot;illuminance&quot; } ], &quot;deviceLogic&quot;: &quot;&quot; } }, &quot;actions&quot;: { &quot;deviceControl&quot;: [ { &quot;propValue&quot;: &quot;1&quot;, &quot;deviceId&quot;: &quot;00124b00-19a8-9215-d0d0&quot;, &quot;propName&quot;: &quot;value1&quot; }, { &quot;propValue&quot;: &quot;1&quot;, &quot;deviceId&quot;: &quot;00124b00-19a8-9215-d0d0&quot;, &quot;propName&quot;: &quot;value2&quot; } ] } } }, &quot;status&quot;: 1 } 1.4.5 查询场景列表 命令: ` curl -v -X POST http://\\(ip:\\)port/api/familyscene/listall -H $token { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familyscene/listall&quot;, &quot;result&quot;: { &quot;resInfo&quot;: &quot;规则列表查询成功&quot;, &quot;data&quot;: [ { &quot;triggerenabled&quot;: &quot;1&quot;, &quot;sceneName&quot;: &quot;autotest&quot;, &quot;sceneId&quot;: &quot;163616&quot;, &quot;description&quot;: &quot;当环境传感器监控流明值小于等于35则打开灯&quot; }, { &quot;triggerenabled&quot;: &quot;1&quot;, &quot;sceneName&quot;: &quot;manualtest&quot;, &quot;sceneId&quot;: &quot;947828&quot;, &quot;description&quot;: &quot;&quot; }, { &quot;triggerenabled&quot;: &quot;1&quot;, &quot;sceneName&quot;: &quot;manualtest&quot;, &quot;sceneId&quot;: &quot;582111&quot;, &quot;description&quot;: &quot;&quot; } ] }, &quot;status&quot;: 1 } 1.4.6 手动执行接口 命令: curl -v -X POST http://$ip:$port/api/familyscene/execute -H $token -d \"{\\\"sceneId\\\":\\\"$ret2SceneId\\\"}\" { &quot;requestId&quot;: &quot;abcddcba&quot;, &quot;request&quot;: &quot;/api/familyscene/execute&quot;, &quot;result&quot;: { &quot;resInfo&quot;: &quot;规则执行成功&quot;, &quot;sceneId&quot;: &quot;947828&quot;, &quot;ruleScript&quot;: 1 }, &quot;status&quot;: 1 }","tags":[{"name":"Work","slug":"Work","permalink":"https://qrsforever.github.io/tags/Work/"}]},{"title":"(原创)多元线性回归(MLR)","date":"2018-12-25T13:35:04.000Z","path":"2018/12/25/Books/Statistics/Multiple_Linear_Regression/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 资源 实践 1 资源 Multiple Linear Regression 统计学(第六版)-贾俊平 2 实践","tags":[{"name":"Statatistics","slug":"Statatistics","permalink":"https://qrsforever.github.io/tags/Statatistics/"},{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"}]},{"title":"离群点和高杠杆率点","date":"2018-12-20T08:00:28.000Z","path":"2018/12/20/Books/Statistics/outliers_and_leverage/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 资源 概念 1. 异常值(Outlier) 2. 杠杆率(Leverage) 实践 1 资源 Influential Points 2 概念 观察点是Outlier Point, 不一定就是Influence Point 观察点是High Leverage Point, 也不一定是Influence Point dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} A data point is influential if it unduly influences any part of a regression analysis, such as the predicted responses, the estimated slope coefficients, or the hypothesis test results. newonlinecoursesDistinction Between Outliers & High Leverage Observations 是不是Influence Point, 要看包含及排除这个观测点是否对预测Y值和回归模型系数以及统计检验结果有影响. 2.1 1. 离群点(Outlier) An outlier is a data point whose response y does not follow the general trend of the rest of the data. 该观测值偏离预测的Y值 2.2 2. 杠杆率(Leverage) A data point has high leverage if it has \"extreme\" predictor x values. 该观测值的X非常偏离其他X数据 推导公式: \\[ \\begin{alignat}{1} Y &amp;= X\\beta + \\epsilon \\\\ \\hat{y} &amp;= X(X^{&#39;}X)^{-1}X^{&#39;}y \\\\ H &amp;= X(X^{&#39;}X)^{-1}X^{&#39;} \\\\ \\hat{y}_i &amp;= h_{i1}y_1+h_{i2}y_2+...+h_{ii}y_i+ ... + h_{in}y_n \\;\\;\\;\\;\\; \\text{ for } i=1, ..., n \\\\ \\end{alignat} \\] H是个hat matrix, 为什么叫这个名字? 由\\(\\hat{y} = Hy\\), 把y通过H矩阵变换为\\(\\hat{y}\\), \\(h_{ii}\\)叫Leverages, 此值越大说明在\\(\\hat{y}_i\\)中\\(y_i\\)占有更大的角色. dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Here are some important properties of the leverages: The leverage hii is a measure of the distance between the x value for the ith data point and the mean of the x values for all n data points. The leverage hii is a number between 0 and 1, inclusive. The sum of the hii equals p, the number of parameters (regression coefficients including the intercept). newonlinecoursesDefinition and properties of leverages 如何通过\\(h_ii\\)判断观察点的x值是异常的? 答: 杠杆点均值 \\(\\bar{h} = \\dfrac{\\sum_{i = 1}^{n}h_{ii}}{n} = \\dfrac{p}{n}\\), 如果\\(h_{ii} \\gt 3\\dfrac{p}{n}\\), 则\\(h_{ii}\\)是高杠杆率点. 3 实践","tags":[{"name":"Statatistics","slug":"Statatistics","permalink":"https://qrsforever.github.io/tags/Statatistics/"}]},{"title":"一元线性回归(SLR)","date":"2018-12-20T02:37:00.000Z","path":"2018/12/20/Books/Statistics/Simple_Linear_Regression/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 资源 实践 1 资源 Using python statsmodels for OLS linear regression Introduction to Linear Regression Analysis(5th)-Douglas 数据集-百度云 2 模型 Population Regression Model: \\(y = \\beta_0 + \\beta_1 x + \\epsilon\\) Sample Regression Model: \\(y_i = \\beta_0 + \\beta_1 x_i + \\epsilon_i, \\quad i = 1,2,\\cdots,n\\) Simple Linear Regression Model: \\(\\hat{y} = \\hat{\\beta_0} + \\hat{\\beta_1} x\\) the least - squares criterion is \\[ S(\\beta_0, \\beta_1) = \\sum_{i = 0}^{n} (y_i - \\beta_0 - \\beta_1 x_i)^2 \\] Residual: \\(e_i = y_i - \\hat{y_i} = y_i - (\\hat{\\beta_0} + \\hat{\\beta_1} x), \\quad i = 1,2,\\cdots,n\\) 3 问题 after fit: How well does this equation fi t the data? Is the model likely to be useful as a predictor? Are any of the basic assumptions (such as constant variance and uncorrelated errors) violated, and if so, how serious is this? 4 实践","tags":[{"name":"Statatistics","slug":"Statatistics","permalink":"https://qrsforever.github.io/tags/Statatistics/"},{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"}]},{"title":"数理统计学习站点","date":"2018-12-18T14:52:53.000Z","path":"2018/12/18/Books/Statistics/statistics_websites/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 站点 数据集 1 资源 Statistics How To Data Science Plus Python StatsModels Online Courses: Stats Statistics By Jim Data Robot Towards Data Science 2 数据集 Kaggle 百度云","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"}]},{"title":"异方差性检验","date":"2018-12-18T14:39:11.000Z","path":"2018/12/18/Books/Statistics/Heteroscedasticity_Test/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 资源 数据集 Homoscedasticity Heteroscedasticity Why is it important to check for heteroscedasticity? How to detect heteroscedasticity? 1. Graphical Methods 2. Statistics Tests How to rectify? Draft 实践 1 资源 同方差 异方差 检测异方差并校准 new online: residuals beginners-guide-regression-analysis-plot emulating-r-regression-plots-in-python 2 数据集 百度云 3 Homoscedasticity homoscedasticity means \"having the same scatter.\" As variance is just the standard deviation squared, you might also see homoscedasticity described as a condition where the standard deviations are equal for all points. Running a test without checking for equal variances can have a significant impact on your results and may even invalidate them completely. 很多统计检验都假设等方差条件, 如果条件不满足, 会产生错误的结果. 4 Heteroscedasticity homoscedasticity means \"having the different scatter.\" where points are at widely varying distances from the regression line. 4.1 Why is it important to check for heteroscedasticity? 在线性回归模型中, 不能用X解释Y的那些部分都放入了误差项(可能还有一些未被发现的因素), 模型的稳健型就看误差项, 如果误差项不是同方差的(比如随着X, 标准误差变动), 那么构建的模型不够稳. 4.2 How to detect heteroscedasticity? 4.2.1 1. Graphical Methods 分析误差项(残差分析) Residual vs. Fitted Values Plot(残差散点图): 应该在Y=0, 这条直线上, 随机上下波动, 不会出现U型曲线, 残差相互独立性 Scale-Location Plot(标准化残差方根散点图): 学生化残差, 使用残差值的方根比残差值更无偏性, (sqrt(|E|)) is much less skewed than | E | for Gaussian zero-mean E), 小于2正常, 如果不开根方的话:标准化残差图, 图中的点一般在-2 ~ 2 之间正常. Normality Q-Q Plot(残差QQ图): 倾斜的直线是ok的, 如果发现有曲线U, 说明残差不是正态的, 假定不成立, 残差正态性检验 Leverage plot(杠杆图): Cookie distance, 库克距离, 是否存在异常数据 4.2.2 2. Statistics Tests 4.3 How to rectify? 5 Draft Breush Pagan (布劳殊-培干) 6 实践","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"}]},{"title":"(原创)Tutorial for Hexo","date":"2018-12-18T13:20:26.000Z","path":"2018/12/18/Tutorial/Hexo/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Tag Plugins Block Quote Include Posts Include Assets 原文 1 Requirements sudo apt install pandoc sudo apt install nbconvert sudo apt install texlive 2 Tag Plugins 2.1 Block Quote 语法: {% blockquote [author[, source]] [link] [source_link_title] %} content {% endblockquote %} Case1: {% blockquote %} Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem. {% endblockquote %} dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem. Case2: {% blockquote David Levithan, Wide Awake %} Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. {% endblockquote %} dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake Case3: {% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %} NEW: DevDocs now comes with syntax highlighting. http://devdocs.io {% endblockquote %} dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} NEW: DevDocs now comes with syntax highlighting. http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 Case4: {% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %} Every interaction is both precious and an opportunity to delight. {% endblockquote %} dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Every interaction is both precious and an opportunity to delight. Seth GodinWelcome to Island Marketing 2.2 Code Block 语法: {% codeblock [title] [lang:language] [url] [link text] %} code snippet {% endcodeblock %} Case1: {% codeblock %} alert('Hello World!'); {% endcodeblock %} alert(&#39;Hello World!&#39;); Case2: {% codeblock lang:objc %} [rectangle setX: 10 y: 10 width: 20 height: 20]; {% endcodeblock %} [rectangle setX: 10 y: 10 width: 20 height: 20]; 2.3 Include Posts 语法: {% post_path filename %} {% post_link filename [optional text] %} Case1: &lt;a href=&quot;{% post_path Tutorial/Latex %}&quot;&gt;link to Latex&lt;/a&gt;. link to Latex. Not support markdown: []({% post_path Tutorial/Latex %}) Case2: {% post_link Tutorial/Markdown 'link to Markdown' %} link to Markdown 2.4 Include Assets 语法: {% asset_path slug %} {% asset_img slug [title] %} {% asset_link slug [title] %} Case1: {% asset_path test.png %} {% asset_path test.png %} Case2: {% asset_img test.png \"test\" %} Case3: {% asset_link test.png \"link to test\" %} link to test 绑定了本POST的ID, 只能引用自己ID下的资源","tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://qrsforever.github.io/tags/Markdown/"}]},{"title":"置信区间和预测区间","date":"2018-12-18T07:19:55.000Z","path":"2018/12/18/Books/Statistics/Confidence_Prediction_Intervals/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 资料 实践 1 资料 stackoverflow:confidence-and-prediction-intervals-with-statsmodels 2 实践","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"}]},{"title":"OLS, WLS, GLS","date":"2018-12-18T07:16:23.000Z","path":"2018/12/18/Books/Statistics/OLS_WLS_GLS/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 资源 线性回归模型 高斯马尔科夫定理 OLS: Ordinal Least Squares: 普通 WLS: Weighted Least Squares: 加权 GLS: General Least Squares: 广义 实践 1 资源 加权最小平方法及稳健回归模型之简介 Introduction to Linear Regression Analysis(5th)-Douglas OLS in Matrix Form 2 线性回归矩阵形式 2.1 回顾:协方差与协方差矩阵 方差: \\(Var(X) = E[(X - E[X])(X - E[X])]\\) 协方差: \\(Cov(X, Y) = E[(X - E[X])(Y - E[Y])]\\) 总体:\\(y = X\\beta + \\epsilon\\) Assumptions: \\(E(\\epsilon) = 0\\) \\(Var(\\epsilon) = \\sigma^2\\mathbf{I}\\) 推到： \\(\\epsilon = y - X\\hat{\\beta}\\) \\(\\epsilon^T \\epsilon = (y - X\\hat{\\beta})^T (y - X\\hat{\\beta})\\), 求最小 \\(\\hat{\\beta} = (X^T X)^{-1}X^Ty\\) 其中\\(X^T X\\)是K x K的矩 2.2 高斯马尔科夫定理 在线性回归模型中，如果误差满足零均值、同方差且互不相关(并没要求正态分布或iid)，则回归系数的最佳(更小的方差)线性无偏估计(BLUE, Best Linear unbiased estimator)就是普通最小二乘法估计。 2.3 残差的协方差矩阵如何理解 疑点: 对于n个观测点, 哪来的残差矩\\(M_{n \\times n}\\) dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} How do I obtain the variance for a variable with one observation? The same goes for the off-diagonal elements: How come there exists a covariance for 2 single observations? stats, stackexchangeOLS: Variance Covariance matrix of residuals 3 OLS: Ordinal Least Squares: 普通 同方差(误差项的方差是常数) \\(\\hat{\\beta} = (X^T X)^{-1} X^T y\\) 4 WLS: Weighted Least Squares: 加权 异方差(误差项的方差是变化的) \\(Var(\\epsilon) = \\sigma^2\\mathbf{V}\\); \\(V_{n \\times n}\\) is diagonal but with unequal diagonal elements 5 GLS: General Least Squares: 广义 不仅仅是异方差 \\(\\hat{\\beta} = (X^T V^{-1} X)^{-1} X^T V^{-1} y\\) 6 实践","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"}]},{"title":"假设检验","date":"2018-12-14T09:30:07.000Z","path":"2018/12/14/Books/Statistics/Hypothesis_Tests/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 1 Draft Statistical hypothesis tests can be grouped into parametric tests and nonparametric tests. Parametric tests assume that the data can be well described by a distribution that is defined by one or more parameters 1.1 Tests for normality 1.1.1 Probability-Plots","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"}]},{"title":"核密度","date":"2018-12-14T09:15:54.000Z","path":"2018/12/14/Books/Statistics/Kernel_Density_Estimation/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 资源 概念 其他 1 资源 An Introduction to Statistics with Python-Thomas Haslwanter Wikipedia 2 概念 In statistics, kernel density estimation (KDE) is a non-parametric way to estimate the probability density function of a random variable. Kernel density estimation is a fundamental data smoothing problem where inferences about the population are made, based on a finite data sample. 3 其他","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"}]},{"title":"相关分析","date":"2018-12-07T09:44:17.000Z","path":"2018/12/07/Books/Statistics/analysis_correlation/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 资源 定义 方法 其他 1 资源 Kaggle 百度云 TODO 2 定义 相关分析: 统计分析方法, 随机变量之间的相关关系, 变量对等 回归分析: 统计分析方法, 随机变量之间的依赖关系, 变量不对等, X预测Y. X为可被控制/设定的普通变量 3 方法","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Draft","slug":"Draft","permalink":"https://qrsforever.github.io/tags/Draft/"}]},{"title":"赤裸裸统计学","date":"2018-12-05T07:06:37.000Z","path":"2018/12/05/Books/Statistics/Naked_Statistics/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 书籍 数据集 中心极限地理 假设检验 数字的意义 权衡犯错类型 回归分析 1 书籍 赤裸裸的统计学-Naked Statistics-曹槟(译) 1.1 数据集 变化的一生-数据集-官网 变化的一生-数据集-百度云 2 中心极限地理 标准差: 群体中个体的离散性 \\(S\\) 标准误差: 样本均值的离散性, (还有一种说法:统计量的标准差) \\(S/\\sqrt(n)\\) 正确的抽样, 样本均值分布总体均值左右 应用: 一组: 马拉松参赛人员样本 二组: 香肠节参赛人员样本 根据样本的体重均值, 可以猜到某样本要参赛的项目 dataset: V940: G23(IN):HOW TALL-INCHES V941: G24:WEIGHT IN POUNDS 3 假设检验 3.1 数字的意义 68% 95% 99.7% 0.05 1.96SE 3.2 权衡犯错类型 H0: 原假设, 收集足够的证据(样本数据)否定它, 阴性 H1: 备择假设, 符号决定拒绝域(双侧,单侧), 阳性 第一类错误(\\(\\alpha\\)): 假阳性 (拒绝了正确的原假设H0) 第二类错误(\\(\\beta\\)): 假阴性 (接受了错误的原假设H0) 在原假设的条件下, 通过样本数据判断发生某事件的概率, 如果概率很小, 如果\\(\\alpha = 0.05\\)就可以否定原假设, 不太相信H0, 但是H0有可能是对的. 拒绝H0的时候就会犯第一类错误 接受H0的时候就会犯第二类错误 \\(\\alpha\\) 应该是宽松(eg:0.1)还是严格(eg: 0.001)? 如果过于宽松, 拒绝域(eg:0.1)变大, 意味着H0更容易被拒绝, 拒绝H0就会犯第一类错误(\\(\\alpha\\)错误) 如果过于严格, 拒绝域(eg:0.001)变小, 意味着H0更容易被接受, 接受H0就会犯第二类错误(\\(\\bata\\)错误) 需要根据具体的假设事件的严重性去合理的给予\\(\\alpha\\)值, 例如: 过滤垃圾邮件 H0: 正常 H1: 垃圾 如果邮件不是垃圾邮件, 根据过滤系统和宽松的(较大)\\(\\alpha\\), 犯第一类错误概率变大(拒绝H0, 邮件是垃圾), 这个错误可能导致此人少看一封最要的邮件. 判断一个人是否患癌症 H0: 正常 H1: 癌症 如果此人患有癌症, 根据检验数据和严格的(较小)\\(\\alpha\\), 犯第二类错误概率变大(接受H0, 此人没癌症), 这个错误可能害死人, 所以需要宽松的\\(\\alpha\\) 结论: 如果拒绝H0, 会带来严重损失或坏的影响, 希望不要轻易拒绝, 即缩小拒绝域(\\(\\alpha\\)减小) 如果接受H0, 会带来严重损失或坏的影响, 希望不要轻易接受, 即扩大拒绝域(\\(\\alpha\\)增大) 4 回归分析 什么是回归系数? 是要研究的统计量吗? 如何理解回归系数的离散程度(回归系数的标准误差) ? 自变量每增减一个单位, 因变量(随机变量)增减的数值可能不同, 在一个平均数值的周围波动. 残差是什么? 为啥取这个名字? 观察值到回归线(方程)垂直距离, 英文名字residual, 回归方程中的\\(\\epsilon\\) OLS是什么? Ordinary Least Squares, 残差平方和最小, Best Fit Line","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Draft","slug":"Draft","permalink":"https://qrsforever.github.io/tags/Draft/"}]},{"title":"正态性检验","date":"2018-11-27T05:56:02.000Z","path":"2018/11/27/Books/Statistics/Normality_Test/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 资源 正态分布 统计量 代码演示 估计量 W检验 KS检验 Probability Plot QQ Plot 1 资源 正态性检验社-梁小筠 An Introduction to Statistics with Python-Thomas Haslwanter 2 正态分布 2.1 统计量 矩(monments): 均值, 方差, 偏度(skewness), 峰度(kurtosis) 量刚: 三阶中心矩的量刚是随机变量的立方 正态分布的中心距: \\[ \\mu_k = E(X - \\mu)^k = \\begin{cases} 0, &amp; \\text{k 是 奇数} \\\\ 1*3*5*(k - 1)\\sigma^2 &amp; \\text{k 是 偶数} \\end{cases} \\] 在统计中, 如何描述数据分布的倾斜方向, 以及倾斜的程度, 为什么使用偏度这个统计量呢? 偏度(3阶): 标准化的三阶中心距, 随机变量与中心分布的不对称程度 峰度(4阶): 随机变量在均值附近的相对平坦程度或峰值程度 (中国和国际的定义有些差别) 和数字3有关 2.2 代码演示","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"}]},{"title":"回归分析","date":"2018-11-26T11:37:44.000Z","path":"2018/11/26/Books/Statistics/analysis_regression/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 资源 概念 函数关系和相关关系 相关分析和回归分析 共线性 虚拟变量 回归 拟合优度 参考 回归模型的参数估计 点估计 普通最小二乘OLS 极大似然估计ML 矩法MM 区间估计 置信区间估计 预测区间估计 回归模型的显著性检验 线性关系F检验 回归系数t检验 预测 残差分析 线性回归几种方法实现 其他 问题 draft 1 资源 统计学(第六版)-贾俊平 计量经济学(第三版)-李子奈 2 概念 2.1 函数关系和相关关系 函数关系 圆的的面积, 能量的物理公式等, 一一对应 相关关系 身高和体重之间存在关系, 不一一对应 2.2 相关分析和回归分析 相关分析 统计分析方法, 随机变量之间的相关关系, 变量对等, 侧重于变量间相关程度的度量 回归分析 统计分析方法, 随机变量之间的依赖关系, 变量不对等, 侧重于Y和X的数量关系, X预测Y. X为可被控制/设定的普通变量 它所关心的是解释变量在给定确定值的情况下, 与之相关被解释变量所有可能出现的对应值的平均值. 思考: X确定之后的Y的条件概率分布是确定的, 可以得到Y的条件期望:\\(E(Y|X)\\). (抽样分布) 2.3 共线性 多重共线性 自变量之间存在相关关系(有些打酱油的自变量), 即某自变量可以由其他自变量推导出来, 会导致模型误差变大, 需要剔除 完全共线性 某自变量是其他自变量的线性函数, 即可以线性组合出该变量 2.4 虚拟变量 TODO, 一般是离散变量, 离散变量经过量化, 哑变量, 使模型更复杂, 但描述更简单 2.5 回归 线性回归 总体回归函数(PRF): \\(E(Y|X) = f(X) = \\beta_0 + \\beta_1X\\); 总体回归随机形式(个体): \\(Y = E(Y|X) + \\mu = \\beta_0 + \\beta_1X + \\mu\\), 其中\\(\\mu\\)是随机误差项(干扰项), 非系统部分 样本回归函数(SRF): \\(\\hat{Y} = f(X) = \\hat{\\beta_0} + \\hat{\\beta_1}X\\); 样本回归随机形式: \\(Y = \\hat{Y} + \\hat{\\mu} = \\hat{\\beta_0} + \\hat{\\beta_1}X + e\\), 其中\\(e\\)是\\(\\mu\\)的估计\\(\\hat{\\mu}\\), 样本残差. 子曰: (多元)总体回归函数是确定的, 但未知, 所以PRF中的随机误差项\\(\\mu\\)比SRF中的样本残差\\(e\\)少了一些未知解释变量等. 非线性回归 TODO 广义线性回归 非线性回归可转换为线性回归分析, 比如 Logistic回归 2.6 拟合优度 指回归直线对观测数据的接近程度, 使用判定系数度量. 什么是判定系数\\(R^2\\)? 它和相关系数\\(r\\)有什么联系和区别? 子曰: 在一元线性回归中: \\(r = \\sqrt{R^2}\\), r,\\(R^2\\)都可以描述回归直线的拟合程度, 但是r(eg:0.5)的值总是大于\\(R^2\\)(eg:0.25), eg: 表面上r看相关程度接近了一半, 实际上只能解释总变差的0.25. 什么是变差? 它和误差有什么区别? (误差和残差是一个东西吗?) 子曰: 变差是被解释变量的波动,包括x的引起的, 和非x的外因引起的; 残差是样本回归模型的非系统的那部分; 误差更多的是指总体回归模型的非系统的那部分, 但很多地方残差和误差都是一个东西. 变差: \\(y-\\bar{y}\\), 观测值与均值的离差 总变差平方和SST: \\(SST = \\sum(y_i - \\bar{y})^2\\) 回归平方和SSR: \\(SSR = \\sum(\\hat{y_i} - \\bar{y})^2\\); 为什么? \\(\\bar{y}\\)一条常数直线, \\(\\hat{y_i}\\)到该直线的距离, 只受到X变化的影响, 公式中没有真实值, 假定都在回归线上. 残差平方和SSE: \\(SSE = \\sum(y_i - \\hat{y_i})^2\\); 为什么? 样本回归模型非系统的那部分, X设定后, 回归值则定, 真实值与回归值的离差, 回归不能解释的那部分. SST = SSR + SSE 判定系数: \\(R^2 = \\dfrac{SSR}{SST} = 1 - \\dfrac{SSE}{SST}\\) 估计标准误差: \\(s_e = \\sqrt{\\dfrac{SSE}{n-2}} = \\sqrt{MSE}\\), 越小拟合越好 过拟合 TODO 欠拟合 TODO 2.7 参考 回归分析之理论篇 3 回归模型的参数估计 参数估计要依据样本数据做支撑. 一元 3.1 点估计 3.1.1 普通最小二乘OLS 二乘: 中国把平方和,一般叫做二乘 原理: 从总体随机抽取n组样本观察值, 最合理的参数估计量应该是使模型更好的拟合样本数据 实际观察值和通过回归模型计算出的被解释变量Y的估计值之差(e)的平方和最小. 即: \\(e = Y - \\hat{Y} = Y - (\\hat{\\beta_0} + \\hat{\\beta_1}X); Q=\\sum_{i=0}^{n}e_i^2\\) 通过微积分运算(偏导)计算未知参数. 3.1.2 极大似然估计ML 更本质地揭示通过样本数据估计总体参数的内在机理 原理: 从总体随机抽取n组样本观察值, 最合理的参数估计量应该是从模型中抽取这n组样本观察值的概率最大. 3.1.3 矩法MM TODO 了解更多:计量经济学(第三版)-李子奈 3.2 区间估计 The difference between a prediction interval and a confidence interval is the standard error. The standard error for a confidence interval on the mean takes into account(考虑) the uncertainty due to sampling. The line you computed from your sample will be different from the line that would have been computed if you had the entire population, the standard error takes this uncertainty into account. The standard error for a prediction interval on an individual observation takes into account the uncertainty due to sampling like above, but also takes into account the variability of the individuals around the predicted mean. The standard error for the prediction interval will be wider than for the confidence interval and hence the prediction interval will be wider than the confidence interval. 参考 A prediction interval is an interval associated with a random variable yet to be observed, with a specified probability of the random variable lying within the interval. For example, I might give an 80% interval for the forecast of GDP in 2014. The actual GDP in 2014 should lie within the interval with probability 0.8. Prediction intervals can arise in Bayesian or frequentist statistics. A confidence interval is an interval associated with a parameter and is a frequentist concept. The parameter is assumed to be non-random but unknown, and the confidence interval is computed from data. Because the data are random, the interval is random. A 95% confidence interval will contain the true parameter with probability 0.95. That is, with a large number of repeated samples, 95% of the intervals would contain the true parameter. 参考 另外: 贝叶斯置信区间(credable interval) 3.2.1 置信区间估计 给定\\(x_0\\), 求\\(y\\)平均值的区间估计, 对总体参数的估计(non-random but unkown), (重复抽样)我们有信心认为有\\(100*(1-\\alpha)\\)个样本包含总体参数的真值. 它的误差项: 随机抽样带来的. 公式: \\(E(Y|X) = \\beta_0 + \\beta_1X\\) 3.2.2 预测区间估计 给定\\(x_0\\), 求\\(y\\)的这个个值的区间估计, 对一个随机(random variable)变量的估计. 它的误差项: 随机抽样+个体的差异 公式: \\(Y = \\beta_0 + \\beta_1X + e\\) 4 回归模型的显著性检验 拟合优度检验 在重复抽样过程中, 参数估计量的期望值会接近总体参数, 但在一次抽样中, 计算出的估计量的值到底与总体参数有多接近呢? 4.1 线性关系F检验 F分布: 为什么? TODO 一元: MSR --&gt; SSR/1 --&gt; \\(\\hat{y} - \\bar{y}\\) --&gt; \\(\\hat{y}\\) 是什么分布? MSE --&gt; SSE/n-2 --&gt; \\(y - \\hat{y}\\) 是什么分布? 4.2 回归系数t检验 在一元回归检验中, 线性关系检验和回归系数检验是等效的, 只有一个系数, 但在多元回归中, 线性关系检验显著, 不代表回归系数检验显著, 因为只要有一个解释变量和被解释变量有线性关系, F检验显著, 并不能说明每个解释变量与被解释变量都是关系显著. 了解更多:统计学(第六版)-贾俊平 4.3 预测 4.4 残差分析 residual analysis 线性回归的几个假设前提: 残差等方差正态分布, 相互独立等. 什么时候进行残差分析? 回归模型之前, 显著性检验之后? 5 线性回归几种方法实现","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Draft","slug":"Draft","permalink":"https://qrsforever.github.io/tags/Draft/"}]},{"title":"方差分析","date":"2018-11-22T07:47:25.000Z","path":"2018/11/22/Books/Statistics/analysis_variance/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 什么个鬼 方差分析的假定 单因素 统计量 双因素 方差分析的假定 无交互作用 有交互作用 1 什么个鬼 为什么进行方差分析(ANOVA)? 方差分析是一种统计方法, 研究啥, 在实践中, 发现影响一个事物的因素有很多, 需要通过实验数据分析出哪个是主因素. 分析各分布的均值是否相等(表面), 判断分类自变量对连续因变量是否有显著影响 因素 (因变量) 水平 (自变量) 只有一个因素的方差分析: 单因素方差分析 研究的是均值是否相等, 为什么不叫等均值分析? 与方差齐性检验的区别? 一个因素多水平, 又要研究均值是否相等, 毫无疑问这个均值是来自各水平的, 之前学过判断均值是否相等的假设检验, 为啥还要搞出个方差分析?, 优势在哪? 前章节: 历史的数据是xxx? 现在抽样, 判断是否显著. (涉及到2个, 一个以往历史的(均值), 一个抽样观察值的(平均值)) 多水平如果两两组合也可以进行均值等分析检验, 但是要组合很多\\(C_n^2\\) Sum of Squares for 误差: SST: 总误差 = SSA + SSE, 自由度: n - 1 SSE: 组内误差, 随机误差对因变量的影响, 好听的名字: 残差效应; 自由度: n - k SSA: 组间误差, 自变量对因变量的影响, 好听的名字: 因子效应; 自由度: k - 1 误差(平方和表示)分为随机误差和系统误差, 随机误差是随机抽样(实验)导致, 系统误差是各水平内部存在差异导致. 组内误差: 某水平内部随机抽样 组间误差: 组间随机误差和自身的系统误差之和 TODO:组间的随机误差是什么鬼? 难道是各水平的随机抽取导致的? H1: 各水平均值相等 如果没有组间的系统误差, 那么各水平间的均值应该接近(只有随机误差). 系统误差大于多少时, 可以拒绝H0呢. 1.1 方差分析的假定 各水平来自同一个正态分布 (正态性检验) 各水平正态分布的方差相等 ? 是不是就需要第一步检验一下各水平的方差 ? (方差齐性检验) 观测值之间相互独立 2 单因素 2.1 统计量 因为每个水平抽取样本的容量不一定相等, 一般使用均方 \\[ MSA = \\frac{SSA}{k-1} \\\\ MSE = \\frac{SSE}{n-k} \\\\ F = \\frac{MSA}{MSE} \\\\ R_2 = \\frac{SSA}{SST} \\text{强度关系} \\] LSD 什么鬼 3 双因素 两个分类自变量 行因素: k个水平 列因素: r个水平 3.1 方差分析的假定 \\(k*r\\)个正态分布 (正态性检验), 随机误差\\(\\epsilon\\)为正态随机变量才能使用F检验 方差相同 (方差齐性检验), 如果方差不一致, 不能直接用方差分析, 需要变换 独立性 (游程检验和自相关系数) 3.2 无交互作用 SST: 自由度: kr - 1 SSR: 行因素产生的误差和; 自由度: k - 1 SSC: 列因素产生的误差和; 自由度: r - 1 SSE: 自由度: (k - 1)(r - 1) kr: 样本量可能为1 3.3 有交互作用 kr: 某一水平下要有几个观测值, m(行变量的每一个水平的行数)的出现 SST: n - 1 SSR: k - 1 SSC: r - 1 SSRC: (k - 1)(r - 1), 交互作用 SSE: kr(m - 1) ? 4 其他 Learning Using Python","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"}]},{"title":"统计推断","date":"2018-11-19T02:38:12.000Z","path":"2018/11/19/Books/Statistics/statistics_inference/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 参考书籍 参数估计 矩估计 极大似然估计(MLE) 评价估计量的标准 区间估计 如何理解 单总体均值的估计 单总体方差的估计 贝叶斯估计 假设检验 原理 拒绝域 假设 P值 总体检验 一个总体参数检验 两个总体参数检验 参数检验和非参数检验 其他 列联分析 方差分析 回归分析 1 参考书籍 概率论与数理统计(第二版)-茆诗松 概率论与数理统计(第四版)-盛骤 统计学(第四版)-贾俊平 计量经济学(第三版)-李子奈 Probability and Statistics (4th)-Morris H. DeGroot 2 参数估计 最小二乘法(勒让德) 贝叶斯估计法(贝叶斯) 矩估计法(卡尔·皮尔逊) 极大似然估计(费歇尔) 2.1 矩估计 样本矩估计总体矩, 不需要知道总体的分布, 几个未知参数, 构造几个\\(A_k\\), 解方程组. 使用\\(A_k\\)估计\\(\\mu_k\\): \\(\\hat{\\mu_k} = A_k\\) \\[ A_k = \\frac{1}{n}\\sum_{i=1}^nx_i^k \\] 方法(k个位置参数): 矩方程组: \\(\\mu_j = g_j(\\theta_1, \\theta_2, \\cdots, \\theta_k)\\) 解方程组: \\(\\theta_j = h_j(\\mu_1, \\mu_2, \\cdots, \\mu_k)\\) 样本估计: \\(\\hat{\\theta_j} = h_j(A_1, A_2, \\cdots, A_k)\\) 样本值带入计算 优点: 简单,总体分布可以不知道 缺点: 不唯一, 受样本异常值影响大, 不稳健 2.2 极大似然估计(MLE) Book:概率论与数理统计(第二版)-茆诗松, 例5.3.1, 黑白球 思想: 总体分布已知, 参数\\(\\theta\\)可能的取值, 取使样本观测值的概率最大的\\(\\theta\\)作为\\(\\hat\\theta\\)估计 容量为n的样本, n个观测值出现的联合分布\\(\\prod_{i = 1}^np(x_i; \\theta)\\) 似然函数(关于参数的函数): \\[ L(\\theta) = \\prod_{i=1}^np(x_i, \\theta) \\] 极大似然: \\[ L(\\hat{\\theta}) = \\underset{\\theta \\in \\Theta}{max}L(\\theta) \\] 2.3 评价估计量的标准 无偏性: 多次抽样, 抽样分布的数学期望等于被估计的总体的参数. \\(E(\\hat{\\theta}) = \\theta, \\text(\\theta 无偏无偏估计量)\\) 有效性: E(-100, 100) = 0, E(-10, 10) = 0, 但是明显后者更有效 一致性: 样本量越大越接近总体参数, 例如: 样本均值抽样分布的方差\\(\\sigma/\\sqrt{n}\\), n越大, 方差越小, 越有效. 2.4 区间估计 置信区间是一个范围值，由样本统计量所构造的对总体参数的估计区间。因为它的随机性，不可能从一个给定总体的两个样本产生相同的置信区间。但是如果你重复构造置信区间很多次，得到的置信区间中有一定比例将包含总体参数真值。置信区间中包含总体参数真值的次数所占的比率称为置信水平。 2.4.1 如何理解 通过一次抽样样本的估计量去估计总体参数, 这个估计到底有多接近总体的参数, 一般我们以样本估计值为中心画一个区域, 那么总体参数的真值有可能在该区域内, 也可能不在, 我们称这个区域叫置信区间(\\(1-\\alpha\\)), 我们把通过构造一个以样本参数的估计值为中心的区间, 来考察这个区间有多大的可能性包含总体参数真值, 这个检验方法叫参数的置信区间估计. 2.4.2 单总体均值的估计 统计量: z(正态分布), t(t-分布), 对称分布 \\[ \\begin{cases} z = \\frac{\\bar{x} - \\mu}{\\sigma/\\sqrt{n}} \\sim \\ N(0, 1) &amp; \\text{总体方差已知} \\\\ t = \\frac{\\bar{x} - \\mu}{\\mathcal{S}/\\sqrt{n}} \\sim \\ t(n-1) &amp; \\text{总体方差未知, 且小样本} \\\\ z = \\frac{\\bar{x} - \\mu}{\\mathcal{S}/\\sqrt{n}} \\sim \\ N(0, 1) &amp; \\text{总体方差未知, 且大样本} \\\\ \\end{cases} \\] 2.4.3 单总体方差的估计 统计量: \\(\\chi^2\\)(\\(\\chi^2\\)-分布), 偏态分布 2.5 贝叶斯估计 3 假设检验 参数估计使用样本信息估计总体参数, 假设检验则是先假设总体的某个参数的值, 然后判断H0的显著性 本章的参数一般指: T检验统计量 3.1 原理 基本思想: 概率性质的反正法(根据小概率事件原理: 小概率事件在一次随机试验是几乎不可能发生的) 3.2 拒绝域 拒绝域\\(W\\), 接受域\\(A\\) 如果给定了总体的分布以及显著性水平\\(\\alpha\\), 则拒绝域就可以定了. 3.3 假设 H0: (1)普遍被认为的道理 (2)拒绝它后果很严重(比如, 药效) H1: (1)研究人员想要证明的 例如: H0: 运动健康 H0: 这个药无效 H1: 新方法改善效率 一般H0没有\\(\\neq\\)的假设, 但可以含有等号\"\\(\\leqslant\\), \\(\\geqslant\\)\" 临界值由\\(\\mu = \\mu_0\\) (\\(1-\\alpha\\)的自信区间)的U分布决定 \\(U = \\dfrac{\\bar{X} - \\mu_0}{\\sigma/\\sqrt{n}} \\ \\sim \\ N(0, 1)\\) \\[ z = \\dfrac{\\bar{X} - \\mu_0}{\\sigma/\\sqrt{n}} \\] 拒绝域由H1决定 均值假设检验(\\(\\mu\\)是变量, \\(\\mu_0\\)是已知量均值): 类型 H1统计变量 临界值 拒绝域 右边检测 \\(\\mu &gt; \\mu_0\\) \\(\\mu_{1-\\alpha}\\) \\(\\mu &gt; \\mu_{1-\\alpha}\\) 左边检测 \\(\\mu &lt; \\mu_0\\) -\\(\\mu_{1-\\alpha}\\) \\(\\mu &lt; -\\mu_{1-\\alpha}\\) 双侧检测 \\(\\mu \\neq \\mu_0\\) \\(\\mu_{1-\\alpha/2} \\quad -\\mu_{1-\\alpha/2}\\) \\(\\mu &gt; \\mu_{1- \\alpha/2} \\quad \\mu &lt; -\\mu_{1-\\alpha/2}\\) 3.4 P值 为什么有P值, 用临界值有什么弊端? P值用来说明什么的? 以前为了计算方便, 通常将统计量标准化转换, 计算z值, 现在计算能力的发展, 容易计算P值, P值是个概率, 和H0假设差距的概率 假设H0是对的, 根据样本计算出来的估计统计量(均值)的实际数据与原假设H0之间不一致的概率, 与\\(\\alpha\\)对比, P值越小, H0越不靠谱 3.5 总体检验 3.5.1 一个总体参数检验 适用于均值,方差和比率 统计量: \\(z, t, \\chi^2\\) \\(\\chi^2\\): 来之标准正态总体的n个随机变量的平方之和, \\(\\sum_{i = 0}^{n}(\\frac{x_i - \\bar{x}}{\\sigma})^2\\) $$ \\[\\begin{alignat}{1} z = \\frac{\\bar{x} - \\mu_0}{\\sigma/\\sqrt{n}} \\qquad &amp; \\text{大样本均值检验统计量} \\\\ t = \\frac{\\bar{x} - \\mu_0}{s_2/\\sqrt{n}} \\qquad &amp; \\text{小样本均值检验统计量} \\\\ z = \\frac{p - \\pi_0}{\\sqrt{\\frac{\\pi_0(1-\\pi_0)}{n}}} \\qquad &amp; \\text{大样本比率检验统计量} \\\\ \\chi^2 = \\frac{(n-1)s^2}{\\sigma^2} \\qquad &amp; \\text{方差检验统计量} \\end{alignat}\\] $$ | | 样本量 | | | 大 | 小 | +--------------+------------------+ | | | | | | | 统计量 总体方差 | z | | 已知 | 未知 | +----------+--------+ | | | | | | | 统计量 统计量 | z t | 3.5.2 两个总体参数检验 重温 \"抽样分布\" 3.6 参数检验和非参数检验 假设检验分为参数检验(parametric tests)和非参数检验(nonparametric tests). Parametric tests assume that the data can be well described by a distribution that is defined by one or more parameters, in most cases by a normal distribution. Nonparametric tests do not depend on the data following a specific distribution. 3.7 其他 拟合优度检验 用来检验一批分类数据所来自的总体的分布是否与某种理论分布相一致 分类变量之间的相关性 独立性检验 3.7.1 列联分析 离散 3.7.2 方差分析 离散 + 连续 3.7.3 回归分析 连续 + 连续","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"}]},{"title":"贝叶斯","date":"2018-11-13T13:49:01.000Z","path":"2018/11/13/Books/Statistics/Bayesian/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 1 drafts 1.1 先验概率 客观先验概率(历史资料) 主观先验概率(主观经验) https://blog.csdn.net/a358463121/article/details/52562940","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"},{"name":"Bayesian","slug":"Bayesian","permalink":"https://qrsforever.github.io/tags/Bayesian/"}]},{"title":"统计学基础","date":"2018-11-05T07:28:39.000Z","path":"2018/11/05/Books/Statistics/statistics_elements/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 参考书籍 概率论 概念 多维 条件分布和条件期望 大数定理 中心极限定理 代码演示 经验分布 数理统计 抽样 代码演示 参数估计 假设检验 学习框架 1 参考书籍 概率论与数理统计(第二版)-茆诗松 概率论与数理统计(第四版)-盛骤 统计学(第四版)-贾俊平 Probability and Statistics (4th)-Morris H. DeGroot 2 概率论 研究随机变量, 假设分布是已知的, 研究它的数字特征, 性质, 特点, 规律性 2.1 概念 P: 区间, 范围, \\(\\leq\\), 分布函数 p: 点, 密度函数, P 是 p的积分/累积 什么时候使用X, 什么时候使用x, 一般会发现{}里会出现大写, ()里用小写, 例如下面的边缘分布: F: 分布, f: 密度 \\[ F_X(x) = P\\{X \\leq x\\} = P\\{X \\leq x, Y \\leq \\infty\\} = F(x, \\infty) \\] 参数空间: \\(\\theta \\in \\Theta\\) 基本结果(基础事件): \\(\\omega \\in \\Omega\\) ; 一枚硬币, 一个骰子, 一个人, 一个家庭 样本空间(基本空间): \\(\\Omega = \\{ \\omega_1, \\omega_2, ..., \\omega_i \\}, \\omega_1\\ \\text{ is a sample point}\\) 随机变量: \\(X = X(\\omega)\\) , 所有分布函数都是\\(X \\leq x\\), 这个变量一定是个数吗? \\[ P(X \\in C) = P({e: X(e) \\in C}) \\] C: 子集\\(\\in \\Omega\\) 加入一个变量(\\(\\mathbf{X,Y,Z}\\))在数轴上的取值(\\(x,y,z\\))依赖于随机现象的基本结果, 则称此变量为随机变量 随机变量X, 可以理解为一个函数? 将样本空间\\({e_1,e_2,\\cdots}\\)的\\(s_x\\)作为参数\\(X(e_i) \\in C\\) 随机表现在变量是由随机试验产生的随机事件, 变量说明是实轴上的一个数, 问题是并不是所有的随机事件都是数字来描述, 比如投硬币:正反面\\(S=\\{e\\}\\), 所以需要\"\\(X = X(e)\\) 实数\"的对应关系 分布列(概率分布): \\(\\sum_{i=1}^{\\infty}p(x_i)\\) , 概率的集合\\(\\{p(x_i)\\}\\) - 离散 密度函数(概率分布): \\(P(a \\leq X \\leq b) = \\int_{a}^{b}p(x)dx \\longrightarrow p(x)\\) - 连续 分布函数(累积函数): \\(F(x) = P(X \\leq x)\\) \\[ F(x) = \\sum\\limits_{x_i \\leq x}p(x_i) \\qquad (离散) \\\\ F(x) = \\int_{-\\infty}^{x}p(x)dx \\qquad (连续) \\] 数学期望: \\[ E(X) = \\sum\\limits_{i = 1}^{n}x_ip(x_i) \\qquad (离散) \\\\ E(X) = \\int_{-\\infty}^{\\infty}xp(x)dx \\qquad (连续) \\] 泊松分布: 在一定时间内, 某事件发生的次数 指数分布: 首次发生某个事件的时间 变异系数: 以期望为单位度量随机变量的波动程度 2.2 矩 均值(mean): 方差(variant): As variance is just the standard deviation squared: \\(var = sdev^2\\) 偏度(skewness): 偏态系数; 统计数据分布倾斜程度的度量 峰度(kurtosis): 与正态比较; 大于0 说明较正态陡峭, 小于0 说明较正态平坦; 值越大差异程度越大. 2.3 多维 \\(\\mathbf{X}(\\omega) = (X_1(\\omega), X_2(\\omega), X_3(\\omega), X_n(\\omega))\\) 一个人(基本结果/基础事件)的体重, 身高 联合分布: 多维随机变量的概率分布 \\[ F(x_1, x_2, ..., x_n) = P(X_1 \\leq x_1, X_2 \\leq x_2, ..., X_n \\leq x_n) \\] 联合概率密度(联合密度): \\(f(xy)\\) \\[ F(x,y) = \\int_{-\\infty}^x\\int_{-\\infty}^yf(x,y)dxdy \\] 边缘分布: 例如二维, \\(F(x, y)\\) 是 \"\\(X \\leq x \\cap Y \\leq y\\)\" 的交事件 \\[ \\begin{cases} \\lim_{y \\to \\infty}F(x, y) = P(X \\leq x, Y &lt; \\infty) = F_X(x) = F(x, \\infty) = P(X \\leq x) \\\\ \\\\ \\lim_{x \\to \\infty}F(x, y) = P(X &lt; \\infty, Y \\leq x) = F_Y(x) = F(\\infty, y) = P(Y \\leq y) \\end{cases} \\] 边缘分布律(离散): \\(p_{i \\cdotp}, p_{\\cdotp i}\\) 边缘密度函数(连续): \\(p_X(x) ;\\ p_Y(y)\\) ; 边缘分布公司好理解, 边缘密度函数([]括号里面的)理解上有些困难, 几何意义 \\[ \\text{边缘分布:} \\\\ F_X(x) = F(x, \\infty) = \\int_{-\\infty}^x\\big[\\int_{-\\infty}^{+\\infty}f(x,y)dy\\big]dx \\\\ \\text{边缘密度:} \\\\ f_X(x) = \\int_{-\\infty}^{+\\infty}f(x,y)dy \\] 全概率 条件概率 相互独立的随机变量: 父亲和儿子的身高显然不具有独立性, 两人如果投骰子的点数是独立的 \\[ \\begin{align} F(x_1, x_2, \\cdots, x_n) &amp;= F_1(x_1) F_2(x_2) \\cdots F_n(x_n) \\\\ \\\\ &amp;= P(X_1 \\leq x_1) P(X_2 \\leq x_2) \\cdots P(X_n \\leq x_n) \\end{align} \\] \\(F_n(x_n)\\) 是边缘分布 多维随机变量函数的数学期望: \\[ E[g(X,Y)] = \\begin{cases} \\sum_i^{\\infty}\\sum_j^{\\infty}g(x_i,y_j)P(X=x_i, Y=y_j), &amp; (离散) \\\\ \\int_{-\\infty}^{+\\infty}\\int_{-\\infty}^{+\\infty}g(x, y)dxdy, &amp; (连续) \\\\ \\end{cases} \\] \\(g(x,y)\\) 可以只关于\\(x\\)或者\\(y\\)的随机变量的函数. 协方差(相关矩): \\(g(X,Y)=(X-EX)(Y-EY)\\) \\[ \\begin{align} Cov(X, Y) = E[g(X, Y)] = E[(X-EX)(Y-EY)] \\tag{1} \\end{align} \\] (线性)相关系数: \\(Corr(X, Y) = Cov(X, Y) / \\delta_x \\delta_y\\) 马尔科夫不等式, 切比雪夫不等式: 知乎解答, 只是对概率的一个估计, 有可能不是很准确, 但比瞎猜好. 2.4 条件分布和条件期望 X,Y独立, 揭露他们之间隐含的趋势 条件分布律 条件密度函数 ? 离散|连续 条件密度的均值: 条件期望 条件分布: \\(P(X = x_i|Y = y_j) = \\dfrac{P(X = x_i, Y = y_i)}{P(Y = y_j)} = \\dfrac{P_{ij}}{P_{*j}}\\) 爸爸的身高(Y)对孩子身高(X)的条件分布情况(条件分布), Y越大, X一般也会越大, 条件分布:\\(E(X|Y = y_j)\\) &lt;&lt;概率论与数理统计(第二版)-茆诗松&gt;&gt; P153 有一张图很形象 \\[ \\begin{cases} P(X = j | Y = 1) = \\begin{cases} 0.2, &amp; \\text{j = 1} \\\\ 0.3, &amp; \\text{j = 2} \\\\ 0.5, &amp; \\text{j = 3} \\end{cases} &amp; \\text{离散} \\\\ \\\\ \\\\ \\begin{eqnarray} P(X \\leq x | y \\leq Y \\leq y + \\Delta{y}) &amp;=&amp; \\dfrac{P(X \\leq x, y \\leq Y \\leq y + \\Delta{y})}{P(y \\leq Y \\leq y + \\Delta{y})} \\\\ \\\\ &amp;=&amp; \\dfrac{\\int_{-\\infty}^{x}\\int_y^{y+\\Delta{y}}p(x,y)dydx}{\\int_y^{y+\\Delta{y}}p_Y(y)dy} \\end{eqnarray} &amp; \\text{连续} \\end{cases} \\] 2.5 大数定理 辛钦大数定理(law larger number): 试验次数很大时, 频率代替概率 随机变量\\(X_1, X_2, \\cdots\\)独立同分布, 且期望\\(E(X_k) = \\mu\\), 则: 依概率收敛于 \\[ \\bar{X} = \\dfrac{1}{n}\\sum_{k = 1}^nX_k \\ \\overset{P}{\\longrightarrow} \\mu \\] 2.6 中心极限定理 莱维-林德伯格 独立同分布的中心极限定理(central limit theorem): n足够大时, 近似服从正态分布, 大样本统计推断的基础 iid, 随机变量之和或均值的分布函数F(x), 当n足够大时, 不管原总体分布如何, F(x)近似服从正太分布 和: \\(T_n = X_1 + X_2 + \\cdot + X_n \\approx \\mathcal{N}(n\\mu, n\\sigma^2)\\) 均值: \\(M_n = \\sum_{i=0}^{n}/nX_i \\approx \\mathcal{N}(\\mu, \\sigma^2/n)\\) 一个样本中, 样本点受随机因素影响, 之间相互抵消, 所以样本均值的波动(样本方差)比单个样本点的波动要小(\\(1/\\sqrt{n}\\)) 伯努利随机变量的和 -&gt; 二项分布 -&gt; 正态分布 另一种的表述更好: \\[ \\dfrac{\\bar{X} - \\mu}{\\sigma/\\sqrt{n}} \\ \\overset{approx}{\\sim} \\ N(0, 1) \\ \\text{or} \\ \\ \\bar{X} \\ \\overset{approx}{\\sim} \\ N(\\mu, \\sigma^2/n) \\] 2.6.1 代码演示","tags":[{"name":"Statistics","slug":"Statistics","permalink":"https://qrsforever.github.io/tags/Statistics/"}]},{"title":"(原创)Tutorial for Latex","date":"2018-10-31T09:16:20.000Z","path":"2018/10/31/Tutorial/Latex/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 行内行间应用方式 常用希腊字母 常用求和符号和积分号 其他常用符号 运算符 声调 根号 上标下标 空白类型列举 公式锚点 矩阵 简单的矩阵 带括号的矩阵 排版 多行方程组对齐 多行公式等号对齐 大括号右多行赋值 字体 括号 颜色 特殊例子 分子分母 分布 在线使用 参考1 参考2 在线编辑 0.1 行内行间应用方式 $ equation $ (正文) $$ eqauation $$ (单独) 0.2 常用希腊字母 \\alpha \\(\\alpha\\) \\varTheta \\(\\varTheta\\) \\beta \\(\\beta\\) \\varGamma \\(\\varGamma\\) \\gamma \\(\\gamma\\) \\Gamma \\(\\Gamma\\) \\theta \\(\\theta\\) \\Theta \\(\\Theta\\) \\delta \\(\\delta\\) \\Delta \\(\\Delta\\) \\epsilon \\(\\epsilon\\) \\varDelta \\(\\varDelta\\) \\zeta \\(\\zeta\\) \\varLambda \\(\\varLambda\\) \\eta \\(\\eta\\) \\iota \\(\\iota\\) \\kappa \\(\\kappa\\) \\varLambda \\(\\varLambda\\) \\lambda \\(\\lambda\\) \\Lambda \\(\\Lambda\\) \\mu \\(\\mu\\) \\varOmega \\(\\varOmega\\) \\nu \\(\\nu\\) \\varPi \\(\\varPi\\) \\pi \\(\\pi\\) \\Pi \\(\\Pi\\) \\rho \\(\\rho\\) \\varSigma \\(\\varSigma\\) \\sigma \\(\\sigma\\) \\Sigma \\(\\Sigma\\) \\tau \\(\\tau\\) \\varPhi \\(\\varPhi\\) \\phi \\(\\phi\\) \\Phi \\(\\Phi\\) \\omega \\(\\omega\\) \\Omega \\(\\Omega\\) \\tau \\(\\tau\\) \\Tau \\(\\Tau\\) \\chi \\(\\chi\\) \\upsilon \\(\\upsilon\\) \\iota \\(\\iota\\) 0.3 常用求和符号和积分号 \\sum \\(\\sum\\) \\int \\(\\int\\) \\sum_{i=1}^{N} \\(\\sum_{i=1}^{N}\\) \\int_{a}^{b} \\(\\int_{a}^{b}\\) \\prod \\(\\prod\\) \\iint \\(\\iint\\) \\prod_{i=1}^{N} \\(\\prod_{i=1}^{N}\\) \\iint_{a}^{b} \\(\\iint_{a}^{b}\\) \\bigcup \\(\\bigcup\\) \\bigcap \\(\\bigcap\\) \\bigcup_{i=1}^{N} \\(\\bigcup_{i=1}^{N}\\) \\bigcap_{i=1}^{N} \\(\\bigcap_{i=1}^{N}\\) 0.4 其他常用符号 \\sqrt[3]{2} \\(\\sqrt[3]{2}\\) \\sqrt{2} \\(\\sqrt{2}\\) \\sqrt{a} \\(\\sqrt{a}\\) \\vec{a} \\(\\vec{a}\\) \\tilde{a} \\(\\tilde{a}\\) \\sqrt[3]{2} \\(\\sqrt[3]{2}\\) x_{3} \\(x_{3}\\) \\lim_{x \\to 0} \\(\\lim_{x \\to 0}\\) \\frac{1}{2} \\(\\frac{1}{2}\\) \\infty \\(\\infty\\) \\cdotp \\(\\cdotp\\) \\cdots \\(\\cdots\\) \\vdots \\(\\vdots\\) \\ddots \\(\\ddots\\) \\bot \\(\\bot\\) \\partial \\(\\partial\\) \\hat{a} \\(\\hat{a}\\) \\dot{a} \\(\\dot{a}\\) \\bar{a} \\(\\bar{a}\\) a^{3} \\(a^{3}\\) \\frac{1}{a} \\(\\frac{1}{a}\\) 0.5 运算符 语法 效果 语法 效果 \\pm \\(\\pm\\) \\propto \\(\\propto\\) \\times \\(\\times\\) \\leq \\(\\leq\\) \\circ \\(\\circ\\) \\subseteq \\(\\subseteq\\) \\cdot \\(\\cdot\\) \\subset \\(\\subset\\) \\cap \\(\\cap\\) \\cup \\(\\cup\\) \\supset \\(\\supset\\) \\bullet \\(\\bullet\\) \\supseteq \\(\\supseteq\\) \\div \\(\\div\\) \\geq \\(\\geq\\) \\mp \\(\\mp\\) \\in \\(\\in\\) 0.6 声调 语法 效果 语法 效果 语法 效果 \\bar{x} \\(\\bar{x}\\) \\acute{\\eta} \\(\\acute{\\eta}\\) \\check{\\alpha} \\(\\check{\\alpha}\\) \\grave{\\eta} \\(\\grave{\\eta}\\) \\breve{a} \\(\\breve{a}\\) \\ddot{y} \\(\\ddot{y}\\) \\dot{x} \\(\\dot{x}\\) \\hat{\\alpha} \\(\\hat{\\alpha}\\) \\tilde{\\iota} \\(\\tilde{\\iota}\\) 0.7 根号 语法 效果 语法 效果 \\sqrt{3} \\(\\sqrt{3}\\) \\sqrt[n]{3} \\(\\sqrt[n]{3}\\) 0.8 上标下标 功能 语法 效果 上标 a^2 \\(a^2\\) 下标 a_2 \\(a_2\\) 组合 a^{2+2} \\(a^{2+2}\\) 组合 a_{i,j} \\(a_{i,j}\\) 结合 x_2^3 \\(x_2^3\\) 前置 {}_1^2!X_3^4 \\({}_1^2\\!X_3^4\\) 向量 \\vec{c} \\(\\vec{c}\\) 向量 \\overleftarrow{a b} \\(\\overleftarrow{a b}\\) 向量 \\overrightarrow{c d} \\(\\overrightarrow{c d}\\) 导数 x' \\(x&#39;\\) 导数 x^\\prime \\(x^\\prime\\) 导数 \\dot{x} \\(\\dot{x}\\) 导数 \\ddot{y} \\(\\ddot{y}\\) 上划线 \\overline{h i j} \\(\\overline{h i j}\\) 下划线 \\underline{k l m} \\(\\underline{k l m}\\) 上面 \\overset{P}{\\longrightarrow} \\(\\overset{P}{\\longrightarrow}\\) 下面 \\underset{P}{\\Longrightarrow} \\(\\underset{P}{\\Longrightarrow}\\) 默认行内公式$\\sum_{k=1}^n{x_k}$上下标: \\(\\sum_{k=1}^n{x_k}\\) 默认行间公式$$\\sum_{k=1}^n{x_k}$$上下标: \\[\\sum_{k=1}^n{x_k}\\] 强制行内公式$\\sum\\limits_{k=1}^n{x_k}$上下标: \\(\\sum\\limits_{k=1}^n{x_k}\\) 强制行间公式$$\\sum\\nolimits_{k=1}^n{x_k}$$上下标: \\[\\sum\\nolimits_{k=1}^n{x_k}\\] 0.9 空白类型列举 功能 语法 效果 描述 两个空格 a \\qquad b \\(a \\qquad b\\) 两个m的宽度 一个空格 a \\quad b \\(a \\quad b\\) 一个m的宽度 大空格 a\\ b \\(a\\ b\\) 1/3m宽度 中等空格 a\\;b \\(a\\;b\\) 2/7m宽度 小空格 a,b \\(a,b\\) 1/6m宽度 没有空格 ab \\(ab\\) 正常宽度 紧贴 a!b \\(a!b\\) 缩进1/6m宽度 0.10 公式锚点 $\\int_{-\\infty}^\\infty e^{-\\pi x^2}\\,\\mathrm{d}x=1\\label{a}\\tag{1}$ 这里引用$\\ref{a}$ \\(\\int_{-\\infty}^\\infty e^{-\\pi x^2}\\,\\mathrm{d}x=1\\label{a}\\tag{1}\\) 这里引用\\(\\ref{a}\\) 0.11 矩阵 0.11.1 简单的矩阵 $$ \\begin{matrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{matrix} \\tag{3} $$ \\[ \\begin{matrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{matrix} \\tag{3} \\] 0.11.2 带括号的矩阵 $$ \\left \\{ \\begin{matrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{matrix} \\right \\} \\tag{4} $$ \\[ \\left \\{ \\begin{matrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{matrix} \\right \\} \\tag{4} \\] $$ \\left [ \\begin{matrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{matrix} \\right ] \\tag{5} $$ \\[ \\left[ \\begin{matrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{matrix} \\right] \\tag{5} \\] $$ \\begin{bmatrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{bmatrix} \\tag{6} $$ \\[ \\begin{bmatrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{bmatrix} \\tag{6} \\] $$ \\begin{Bmatrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{Bmatrix} \\tag{7} $$ \\[ \\begin{Bmatrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{Bmatrix} \\tag{7} \\] $$ \\begin{vmatrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{vmatrix} \\tag{8} $$ \\[ \\begin{vmatrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{vmatrix} \\tag{8} \\] $$ \\begin{Vmatrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{Vmatrix} \\tag{9} $$ \\[ \\begin{Vmatrix} 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 \\\\ 7 &amp; 8 &amp; 9 \\end{Vmatrix} \\tag{9} \\] 0.12 排版 0.12.1 多行方程组对齐 $$ \\begin{cases} a_{11}x_1&amp;+&amp;a_{12}x_2&amp;+&amp;\\cdots&amp;+a_{1n}x_n&amp;=&amp;b_1\\\\ &amp;&amp;&amp;&amp;\\vdots\\\\ a_{n1}x_1&amp;+&amp;a_{n2}x_2&amp;+&amp;\\cdots&amp;+a_{nn}x_n&amp;=&amp;b_n&amp; \\end{cases} $$ \\[ \\begin{cases} a_{11}x_1&amp;+&amp;a_{12}x_2&amp;+&amp;\\cdots&amp;+a_{1n}x_n&amp;=&amp;b_1\\\\ &amp;&amp;&amp;&amp;\\vdots\\\\ a_{n1}x_1&amp;+&amp;a_{n2}x_2&amp;+&amp;\\cdots&amp;+a_{nn}x_n&amp;=&amp;b_n&amp; \\end{cases} \\] $$ \\begin{align*} &amp;a_1 x + b_1 y + c_1 z = d_1\\tag{$3.11$} \\\\ &amp;aa_2 x + b_2 y + c_2 z = d_2\\tag{$3.12$} \\\\ &amp;aaa_3 x + b_3 y + c_3 z = d_3\\tag{$3.13$} \\end{align*} $$ \\[ \\begin{align*} &amp;a_1 x + b_1 y + c_1 z = d_1\\tag{$3.11$} \\\\ &amp;aa_2 x + b_2 y + c_2 z = d_2\\tag{$3.12$} \\\\ &amp;aaa_3 x + b_3 y + c_3 z = d_3\\tag{$3.13$} \\end{align*} \\] 0.12.2 多行公式等号对齐 eqnarray(built-in) is similar to align(amsmath package) below $$ \\begin{eqnarray} f(x,y) &amp;=&amp; 2xy+(x-y)^2\\\\ &amp;=&amp; x^2+y^2 \\end{eqnarray} $$ \\[ \\begin{eqnarray} f(x,y) &amp;=&amp; 2xy+(x-y)^2\\\\ &amp;=&amp; x^2+y^2 \\end{eqnarray} \\] $$ \\begin{align*} f(x,y) &amp;= 2xy+(x-y)^2 \\\\ &amp;= x^2+y^2 \\end{align*} $$ \\[ \\begin{align*} f(x,y) &amp;= 2xy+(x-y)^2 \\\\ &amp;= x^2+y^2 \\end{align*} \\] 指定第几列对齐 $$ \\begin{alignat}{2} \\sigma_1 &amp;= x + y &amp;\\qquad \\sigma_2 &amp;= \\frac{x}{y} \\\\ \\sigma_1&#39; &amp;= \\frac{\\partial x + y}{\\partial x} &amp; \\sigma_2&#39; &amp;= \\frac{\\partial \\frac{x}{y}}{\\partial x} \\end{alignat} $$ \\[ \\begin{alignat}{2} \\sigma_1 &amp;= x + y &amp;\\quad \\sigma_2 &amp;= \\frac{x}{y} \\\\ \\sigma_1&#39; &amp;= \\frac{\\partial x + y}{\\partial x} &amp; \\sigma_2&#39; &amp;= \\frac{\\partial \\frac{x}{y}}{\\partial x} \\end{alignat} \\] 0.12.3 大括号右多行赋值 $$ \\left\\{\\begin{array}{cc} 1, &amp; x=f(Pa_{x})\\\\ 0, &amp; other\\ values \\end{array}\\right. $$ \\[ \\left\\{\\begin{array}{cc} 1, &amp; x=f(Pa_{x})\\\\ 0, &amp; other\\ values \\end{array}\\right. \\] $$ P(x|Pa_x)=\\begin{cases} 1, &amp; x=f(Pa_{x})\\\\ 0, &amp; other\\ values \\end{cases} $$ \\[ P(x|Pa_x)=\\begin{cases} 1, &amp; x=f(Pa_{x})\\\\ 0, &amp; other\\ values \\end{cases} \\] $$ \\begin{equation} \\left.\\begin{aligned} B&#39;&amp;=-\\partial \\times E,\\\\ E&#39;&amp;=\\partial \\times B - 4\\pi j, \\end{aligned} \\right\\} \\qquad \\text{Maxwell&#39;s equations} \\end{equation} $$ \\[ \\begin{equation} \\left.\\begin{aligned} B&#39;&amp;=-\\partial \\times E,\\\\ E&#39;&amp;=\\partial \\times B - 4\\pi j, \\end{aligned} \\right\\} \\qquad \\text{Maxwell&#39;s equations} \\end{equation} \\] 0.13 字体 黑板粗体$\\mathbb{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$: \\(\\mathbb{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\) 正粗体$\\mathbf{012abcABC}$: \\(\\mathbf{012abcABC}\\) 罗马体$\\mathrm{012abcABC}$: \\(\\mathrm{012abcABC}\\) 斜体数字$\\mathit{0123456789}$: \\(\\mathit{0123456789}\\) 手写体 $\\mathcal{012abcABC}$: \\(\\mathcal{012abcABC}\\) 0.14 括号 \\Bigg ( \\bigg [ \\Big \\{ \\big \\langle \\left | \\| \\frac{a}{b} \\| \\right | \\big\\rangle \\Big \\} \\bigg ] \\Bigg ): \\[ \\Bigg ( \\bigg [ \\Big \\{ \\big \\langle \\left | \\| \\frac{a}{b} \\| \\right | \\big\\rangle \\Big \\} \\bigg ] \\Bigg ) \\] 0.15 颜色 字体颜色︰$\\color{色调}表达式$ 背景颜色︰$\\pagecolor{色调}表达式$ \\(\\color{Apricot}Apricot\\) \\(\\color{Aquamarine}Aquamarine\\) \\(\\color{Bittersweet}Bittersweet\\) \\(\\color{Black}Black\\) \\(\\color{Blue}Blue\\) \\(\\color{BlueGreen}BlueGreen\\) \\(\\color{BlueViolet}BlueViolet\\) \\(\\color{BrickRed}BrickRed\\) \\(\\color{Brown}Brown\\) \\(\\color{BurntOrange}BurntOrange\\) \\(\\color{CadetBlue}CadetBlue\\) \\(\\color{CarnationPink}CarnationPink\\) \\(\\color{Cerulean}Cerulean\\) \\(\\color{CornflowerBlue}CornflowerBlue\\) \\(\\color{Cyan}Cyan\\) \\(\\color{Dandelion}Dandelion\\) \\(\\color{DarkOrchid}DarkOrchid\\) \\(\\color{Emerald}Emerald\\) \\(\\color{ForestGreen}ForestGreen\\) \\(\\color{Fuchsia}Fuchsia\\) \\(\\color{Goldenrod}Goldenrod\\) \\(\\color{Gray}Gray\\) \\(\\color{Green}Green\\) \\(\\color{GreenYellow}GreenYellow\\) \\(\\color{JungleGreen}JungleGreen\\) \\(\\color{Lavender}Lavender\\) \\(\\color{LimeGreen}LimeGreen\\) \\(\\color{Magenta}Magenta\\) \\(\\color{Mahogany}Mahogany\\) \\(\\color{Maroon}Maroon\\) \\(\\color{Melon}Melon\\) \\(\\color{MidnightBlue}MidnightBlue\\) \\(\\color{Mulberry}Mulberry\\) \\(\\color{NavyBlue}NavyBlue\\) \\(\\color{OliveGreen}OliveGreen\\) \\(\\color{Orange}Orange\\) \\(\\color{OrangeRed}OrangeRed\\) \\(\\color{Orchid}Orchid\\) \\(\\color{Peach}Peach\\) \\(\\color{Periwinkle}Periwinkle\\) \\(\\color{PineGreen}PineGreen\\) \\(\\color{Plum}Plum\\) \\(\\color{ProcessBlue}ProcessBlue\\) \\(\\color{Purple}Purple\\) \\(\\color{RawSienna}RawSienna\\) \\(\\color{Red}Red\\) \\(\\color{RedOrange}RedOrange\\) \\(\\color{RedViolet}RedViolet\\) \\(\\color{Rhodamine}Rhodamine\\) \\(\\color{RoyalBlue}RoyalBlue\\) \\(\\color{RoyalPurple}RoyalPurple\\) \\(\\color{RubineRed}RubineRed\\) \\(\\color{Salmon}Salmon\\) \\(\\color{SeaGreen}SeaGreen\\) \\(\\color{Sepia}Sepia\\) \\(\\color{SkyBlue}SkyBlue\\) \\(\\color{SpringGreen}SpringGreen\\) \\(\\color{Tan}Tan\\) \\(\\color{TealBlue}TealBlue\\) \\(\\color{Thistle}Thistle\\) \\(\\color{Turquoise}Turquoise\\) \\(\\color{Violet}Violet\\) \\(\\color{VioletRed}VioletRed\\) \\(\\color{White}White\\) \\(\\color{WildStrawberry}WildStrawberry\\) \\(\\color{Yellow}Yellow\\) \\(\\color{YellowGreen}YellowGreen\\) \\(\\color{YellowOrange}YellowOrange\\) 0.16 特殊例子 0.16.1 分子分母 $$ x_1^*=\\dfrac{a_{22}r_1-a_{12}r_2}{a_{11}a_{22}-a_{12}a_{21}} $$ \\[ x_1^*=\\dfrac{a_{22}r_1-a_{12}r_2}{a_{11}a_{22}-a_{12}a_{21}} \\] 语法 效果 语法 效果 语法 效果 \\frac{a}{b} \\(\\frac{a}{b}\\) \\dfrac{c}{d} \\(\\dfrac{c}{d}\\) e/f \\(e/f\\) 0.16.2 分布 分布名 语法 效果 例子 二项分布 \\binom{n}{k} \\(\\binom{n}{k}\\) \\(f(k) = \\binom{n}{k} p^k (1-p)^{n-k}\\) 0.16.3 在线使用 只能行间 ![](http://latex.codecogs.com/gif.latex?F%28x%29%20%3D%20%5Cint_%7Ba%7D%5E%7Bb%7Df%28x%29dx \"latextest\") 输出:","tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://qrsforever.github.io/tags/Markdown/"}]},{"title":"Frequentist和Bayesian之前的故事","date":"2018-10-30T02:51:02.000Z","path":"2018/10/30/Story/Math/Frequentist_Bayesian/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 原文 在统计学中，很多工程师会惊讶于在统计学居然存在两个本质上截然对立的学派，他们是如此的对立以至于他们对于概率的定义都是截然不同的，这 就是Frequentist和Bayesian统计学派之间的故事。 对于Frequentist来说，概率是一个实验重复很多次后的期望频率，而Bayesian观点则认为概率从本质上来说是我们对于一个事件的信心（Degree of Belief），它用来描述我们认为一个事件有多大可行性发生。 所以对于Frequentist来说，均值是一个确定且存在的数，只是我们不知道也没有办法知道他的确切数值，当一个Frequentist对数据进行分析的时候 ，他会建立一个Confidence Interval，其中心在所有数据的均值处。 这里就有一个很有意思的事情，因为对于Frequentist来说均值确实存在而且确定，所以它或者在区间内或者不在区间内，所以Frequentist不能说实 际均值有95%的概率处在这个Confidence Interval中，因为实际均值是一个固定的数，并不是随机的，所以他们只能采用一个迂回的说法：对于95% 的随机样本，这样算法产生的Confidence Interval包含了实际均值。 而对于Bayesians来说，世界确实截然不同的，他们认为只有数据才是真实的，实际均值也是一个随机的变量，所以他们可以说实际均值更有可能是 某个值而不是另外某个值（基于数据和先验知识），于是Bayesians构建一个Credible Interval，他们说实际均值有95%的概率在Credible Interval 中，这是Frequentist所不能接受的一种说法。 在1990年以前，很少有人从事Bayesian Analysis，原因是Bayesian Analysis需要大量的计算，而当时的计算机能力很弱，最近一段时间Bayesian Method发展很迅速，Sampling Method和Variational Method的出现使得Bayesian方法逐渐变得Popular。","tags":[{"name":"Math","slug":"Math","permalink":"https://qrsforever.github.io/tags/Math/"}]},{"title":"Ubutnu编辑器VIM配置","date":"2018-06-25T02:26:15.000Z","path":"2018/06/25/Tools/How/vim/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; left: -4em; } pre.numberSource a.sourceLine::before { content: attr(title); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; } /* Alert */ code span.an { color: #008000; } /* Annotation */ code span.at { } /* Attribute */ code span.bu { } /* BuiltIn */ code span.cf { color: #0000ff; } /* ControlFlow */ code span.ch { color: #008080; } /* Char */ code span.cn { } /* Constant */ code span.co { color: #008000; } /* Comment */ code span.cv { color: #008000; } /* CommentVar */ code span.do { color: #008000; } /* Documentation */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.im { } /* Import */ code span.in { color: #008000; } /* Information */ code span.kw { color: #0000ff; } /* Keyword */ code span.op { } /* Operator */ code span.ot { color: #ff4000; } /* Other */ code span.pp { color: #ff4000; } /* Preprocessor */ code span.sc { color: #008080; } /* SpecialChar */ code span.ss { color: #008080; } /* SpecialString */ code span.st { color: #008080; } /* String */ code span.va { } /* Variable */ code span.vs { color: #008080; } /* VerbatimString */ code span.wa { color: #008000; font-weight: bold; } /* Warning */ 一把利剑 目录结构 基本配置vimrc 依赖 VIM配置 1 一把利剑 ∆ /.\\ _/ \\_ / \\ / ﬆ ﬆ \\ | | | ∾ ∾ ∾ | | ∾ ∾ ∾ | | ∾ ∾ ∾ | | ∾ ∾ ∾ | | | | VIM | | | | 编 程 | | | | ∾ ∾ ∾ | | ∾ ∾ ∾ | | ∾ ∾ ∾ | | ∾ ∾ ∾ | ┌------┴---------┴------┐ « ✠ う ✠ » └--------┬-----┬--------┘ | ◎ | | ◎ | └¤¤◎¤¤┘ 2 目录结构 . ├── autoload ├── bin ├── bundle │ ├── .configs ----&gt; 插件配置目录, 每个插件对应一个文件 │ │ ├── asyncrun.vim_conf.vim │ │ ├── bufexplorer_conf.vim │ │ ├── CCTree_conf.vim │ │ ├── CompleteParameter.vim_conf.vim │ │ ├── deoplete-jedi_conf.vim │ │ ├── deoplete.nvim_conf.vim │ │ ├── dict.vim_conf.vim │ │ ├── DoxygenToolkit.vim_conf.vim │ │ ├── DrawIt_conf.vim │ │ ├── EasyMotion_conf.vim │ │ ├── eclim_conf.vim │ │ ├── errormarker.vim_conf.vim │ │ ├── FuzzyFinder_conf.vim │ │ ├── fzf_conf.vim │ │ ├── fzf.vim_conf.vim │ │ ├── grep.vim_conf.vim │ │ ├── init.vim ----&gt; 配置插件, 有选择的配置需要使用的插件 │ │ ├── jedi-vim_conf.vim │ │ ├── jupyter-vim_conf.vim │ │ ├── LeaderF_conf.vim │ │ ├── lookupfile_conf.vim │ │ ├── neocomplcache_conf.vim │ │ ├── neocomplete.vim_conf.vim │ │ ├── neosnippet_conf.vim │ │ ├── nerdcommenter_conf.vim │ │ ├── nerdtree_conf.vim │ │ ├── Nvim-R_conf.vim │ │ ├── supertab_conf.vim │ │ ├── syntastic_conf.vim │ │ ├── tagbar_conf.vim │ │ ├── ultisnips_conf.vim │ │ ├── unite.vim_conf.vim │ │ ├── vcscommand.vim_conf.vim │ │ ├── vim-align_conf.vim │ │ ├── VimIM_conf.vim │ │ ├── vim-instant-markdown_conf.vim │ │ ├── vim-markdown-toc_conf.vim │ │ ├── vim-maximizer_conf.vim │ │ ├── vim-pandoc_conf.vim │ │ ├── vim-pandoc-syntax_conf.vim │ │ ├── vim-powerline_conf.vim │ │ ├── vimshell.vim_conf.vim │ │ ├── vim-snippets_conf.vim │ │ └── YouCompleteMe_conf.vim . . . . . │ ├── Vundle.vim │ └── YouCompleteMe ├── colors ├── configure ├── dict ---&gt; 补全字典 ├── doc ├── extern ---&gt; 外部有用的工具, vim通过程序间接调用 │ ├── git-blog-setting ---&gt; markdown生成blog页面 │ ├── instant-markdown-ext ---&gt; markdown快速生成html, 使用pandoc │ ├── ripgrep ---&gt; rg │ └── YCM-Generator ├── plugin ├── res │ └── icons ├── src ├── syntax ├── tags ├── UltiSnips ---&gt; 定义自己的snips └── xml 3 基本配置vimrc let g:mapleader = &quot;,&quot; autocmd! :mapclear &quot; 插件依赖设置 &quot; &quot;打开关键字色 syntax on &quot;载入文件类型插件 filetype plugin on &quot;为特定文件类型载入相关缩进文件 filetype indent on &quot; &quot; The search prefix key. nnoremap [search] &lt;Nop&gt; nmap s [search] source ~/.vim/bundle/.configs/init.vim &quot;F1~F12快捷键映射&quot; nmap &lt;unique&gt; &lt;silent&gt; &lt;F1&gt; :MyMarksBrowser&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;F2&gt; :MyBufExplorer&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;F3&gt; :NERDTreeToggle %:p:h&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;F4&gt; :TagbarToggle&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;F5&gt; :MyLookupFile&lt;CR&gt; &quot; nmap &lt;unique&gt; &lt;silent&gt; &lt;F6&gt; :&lt;c-u&gt;call MyMake(&#39;n&#39;)&lt;CR&gt; &quot; nmap &lt;unique&gt; &lt;silent&gt; &lt;F7&gt; :&lt;c-u&gt;call MyGrep(&#39;n&#39;)&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;F8&gt; :&lt;c-u&gt;call MyTags(&#39;n&#39;)&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;F9&gt; :MyMarkColor&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;F11&gt; :MaximizerToggle&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;F12&gt; ,ra imap &lt;unique&gt; &lt;silent&gt; &lt;F1&gt; &lt;ESC&gt;:MarksBrowser&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;F2&gt; &lt;ESC&gt;:MyBufExplorer&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;F3&gt; &lt;ESC&gt;:NERDTreeToggle %:p:h&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;F4&gt; &lt;ESC&gt;:TagbarToggle&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;F5&gt; &lt;ESC&gt;:MyLookupFile&lt;CR&gt; &quot; imap &lt;unique&gt; &lt;silent&gt; &lt;F6&gt; &lt;ESC&gt;:&lt;c-u&gt;call MyMake(&#39;i&#39;)&lt;CR&gt; &quot; imap &lt;unique&gt; &lt;silent&gt; &lt;F7&gt; &lt;ESC&gt;:&lt;c-u&gt;call MyGrep(&#39;i&#39;)&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;F8&gt; &lt;ESC&gt;:&lt;c-u&gt;call MyTags(&#39;i&#39;)&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;F9&gt; &lt;ESC&gt;:MyMarkColor&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;F11&gt; &lt;ESC&gt;:MaximizerToggle&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;F12&gt; &lt;ESC&gt;,ra &quot; vmap &lt;unique&gt; &lt;silent&gt; &lt;F6&gt; :&lt;c-u&gt;call MyMake(&#39;v&#39;)&lt;CR&gt; vmap &lt;unique&gt; &lt;silent&gt; &lt;F12&gt; :&lt;c-u&gt;call MyYank2Reg(&#39;v&#39;)&lt;CR&gt; &quot; &quot;Shift&quot; nmap &lt;unique&gt; &lt;silent&gt; &lt;S-F1&gt; :lnext&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;S-F2&gt; :cprevious&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;S-F3&gt; :cnext&lt;CR&gt; &quot; nmap &lt;unique&gt; &lt;silent&gt; &lt;S-F6&gt; :MyAsyncRun&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;S-F9&gt; :MyVimShellS&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;S-F10&gt; :MyColColor&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;S-F12&gt; :MyUMLCharConvert&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;S-F1&gt; &lt;ESC&gt;:lnext&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;S-F2&gt; &lt;ESC&gt;:cprevious&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;S-F3&gt; &lt;ESC&gt;:cnext&lt;CR&gt; &quot; imap &lt;unique&gt; &lt;silent&gt; &lt;S-F6&gt; &lt;ESC&gt;:MyAsyncRun&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;S-F9&gt; &lt;ESC&gt;:MyVimShellS&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;S-F10&gt; &lt;ESC&gt;:MyColColor&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;S-F12&gt; &lt;ESC&gt;:MyUMLCharConvert&lt;CR&gt; &quot; &quot;Ctrl&quot; nmap &lt;unique&gt; &lt;silent&gt; &lt;C-F1&gt; :lprevious&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;C-F2&gt; :tprevious&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;C-F3&gt; :tnext&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;C-F9&gt; :MyVimShellV&lt;CR&gt; nmap &lt;unique&gt; &lt;silent&gt; &lt;C-F10&gt; :g/&lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;/d&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;C-F1&gt; &lt;ESC&gt;:lprevious&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;C-F2&gt; &lt;ESC&gt;:tprevious&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;C-F3&gt; &lt;ESC&gt;:tnext&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;C-F9&gt; &lt;ESC&gt;:MyVimShellV&lt;CR&gt; imap &lt;unique&gt; &lt;silent&gt; &lt;C-F10&gt; &lt;ESC&gt;:g/&lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;/d&lt;CR&gt; &quot;Shift and Ctrl &amp;term不同特殊映射 ctrl+F1不可用 map &lt;Esc&gt;O1;2P &lt;S-F1&gt; map &lt;Esc&gt;O1;2Q &lt;S-F2&gt; map &lt;Esc&gt;O1;2R &lt;S-F3&gt; map &lt;Esc&gt;O1;2S &lt;S-F4&gt; map &lt;Esc&gt;[15;2~ &lt;S-F5&gt; map &lt;Esc&gt;[17;2~ &lt;S-F6&gt; map &lt;Esc&gt;[18;2~ &lt;S-F7&gt; map &lt;Esc&gt;[19;2~ &lt;S-F8&gt; map &lt;Esc&gt;[20;2~ &lt;S-F9&gt; map! &lt;Esc&gt;O1;2P &lt;S-F1&gt; map! &lt;Esc&gt;O1;2Q &lt;S-F2&gt; map! &lt;Esc&gt;O1;2R &lt;S-F3&gt; map! &lt;Esc&gt;O1;2S &lt;S-F4&gt; map! &lt;Esc&gt;[15;2~ &lt;S-F5&gt; map! &lt;Esc&gt;[17;2~ &lt;S-F6&gt; map! &lt;Esc&gt;[18;2~ &lt;S-F7&gt; map! &lt;Esc&gt;[19;2~ &lt;S-F8&gt; map! &lt;Esc&gt;[20;2~ &lt;S-F9&gt; map &lt;Esc&gt;O1;5P &lt;C-F1&gt; map &lt;Esc&gt;O1;5Q &lt;C-F2&gt; map &lt;Esc&gt;O1;5R &lt;C-F3&gt; map &lt;Esc&gt;O1;5S &lt;C-F4&gt; map &lt;Esc&gt;[15;5~ &lt;C-F5&gt; map &lt;Esc&gt;[17;5~ &lt;C-F6&gt; map &lt;Esc&gt;[18;5~ &lt;C-F7&gt; map &lt;Esc&gt;[19;5~ &lt;C-F8&gt; map &lt;Esc&gt;[20;5~ &lt;C-F9&gt; map &lt;Esc&gt;[21;5~ &lt;C-F10&gt; map &lt;Esc&gt;[23;5~ &lt;C-F11&gt; map &lt;Esc&gt;[24;5~ &lt;C-F12&gt; map! &lt;Esc&gt;O1;5P &lt;C-F1&gt; map! &lt;Esc&gt;O1;5Q &lt;C-F2&gt; map! &lt;Esc&gt;O1;5R &lt;C-F3&gt; map! &lt;Esc&gt;O1;5S &lt;C-F4&gt; map! &lt;Esc&gt;[15;5~ &lt;C-F5&gt; map! &lt;Esc&gt;[17;5~ &lt;C-F6&gt; map! &lt;Esc&gt;[18;5~ &lt;C-F7&gt; map! &lt;Esc&gt;[19;5~ &lt;C-F8&gt; map! &lt;Esc&gt;[20;5~ &lt;C-F9&gt; map! &lt;Esc&gt;[21;5~ &lt;C-F10&gt; map! &lt;Esc&gt;[23;5~ &lt;C-F11&gt; map! &lt;Esc&gt;[24;5~ &lt;C-F12&gt; &quot;F1~F12快捷键映射&quot; &quot;非F1~F12快捷键&quot; nmap &lt;silent&gt; ga :MyGoAlternate&lt;CR&gt; nmap &lt;silent&gt; &lt;leader&gt;tt :tabnew&lt;CR&gt; &quot;Quickfix 编译出错信息调试很有用 nmap &lt;silent&gt; &lt;C-w&gt;e :MyBelowCopen&lt;CR&gt; &quot;Location list windows 打开 nmap &lt;silent&gt; &lt;C-w&gt;d :MyBelowLopen&lt;CR&gt; nmap cd :lchdir %:p:h&lt;CR&gt;:pwd&lt;CR&gt; &quot; Insert模式下&lt;C-L&gt;清楚后面所有的字符直到), 类似Normal模式下的d$动作, C-u清楚前面的字符直到( &quot; imap &lt;unique&gt; &lt;silent&gt; &lt;C-l&gt; &lt;Esc&gt;&lt;Esc&gt;l&lt;C-v&gt;f)hdi &quot; imap &lt;unique&gt; &lt;silent&gt; &lt;C-u&gt; &lt;Esc&gt;&lt;Esc&gt;l&lt;C-v&gt;F(ldi &quot;单手保存 ctrl+s 在BASH中,是Lock the console, 解锁ctrl+q, 解决方法是在.bashrc中添加stty stop &#39;&#39; 或者 alias vim=&quot;stty stop &#39;&#39;; vim&quot; &quot; nmap &lt;C-s&gt; :update&lt;CR&gt;:echo expand(&#39;%:p&#39;)&lt;CR&gt; imap &lt;C-s&gt; &lt;ESC&gt;:&lt;c-u&gt;update&lt;CR&gt;:echo expand(&#39;%:p&#39;)&lt;CR&gt; nmap &lt;C-s&gt; :silent update!&lt;CR&gt;:silent lchdir %:p:h&lt;CR&gt;:pwd&lt;CR&gt; &quot; imap &lt;C-s&gt; &lt;ESC&gt;:&lt;c-u&gt;silent update!&lt;CR&gt;:silent lchdir %:p:h&lt;CR&gt;:pwd&lt;CR&gt; imap \\\\ &lt;C-x&gt;&lt;C-o&gt; &quot; 标签跳转页面 nmap g0 :tabl&lt;CR&gt; nmap g1 1gt nmap g2 2gt nmap g3 3gt nmap g4 4gt nmap g5 5gt nmap g6 6gt nmap g7 7gt nmap g8 8gt nmap g9 9gt &quot;非F1~F12快捷键&quot; &quot;自己定义的命令 &quot; command XCCTags !ctags --c++-kinds=+p --fields=+ialS --extra=+q -R . command XRS %s/\\s\\+$//ge &quot;消除每行后面的多余的空格 command XRW %s///ge &quot;消除文件中的^M字符 command XONE 0,$s/\\n// &quot;多行变一行 &quot;自己定义的命令 &quot; &quot;窗口配置&quot; noremap &lt;C-j&gt; &lt;C-W&gt;j noremap &lt;C-k&gt; &lt;C-W&gt;k noremap &lt;C-h&gt; &lt;C-W&gt;h noremap &lt;C-l&gt; &lt;C-W&gt;l &quot; 让terminal进入norm模式 &quot; tnoremap &lt;Esc&gt; &lt;C-W&gt;N tnoremap &lt;C-j&gt; &lt;C-W&gt;j tnoremap &lt;C-k&gt; &lt;C-W&gt;k tnoremap &lt;C-h&gt; &lt;C-W&gt;h tnoremap &lt;C-l&gt; &lt;C-W&gt;l &quot; &lt;C-W&gt;r --&gt; 交换窗口 noremap &lt;C-W&gt;v &lt;C-W&gt;v&lt;C-W&gt;l noremap &lt;C-W&gt;s &lt;C-W&gt;s&lt;C-W&gt;j &quot;窗口配置&quot; &quot;简单配置&quot; &quot;侦测文件类型 filetype on &quot;设置终端支持256颜色 set t_Co=256 &quot;设置VIM颜色主题 你可以借助插件scrollcolor.vim和color_sample_pack.vim来选择你喜爱的主题(150多个)(请参考下面插件) colorscheme elflord &quot;预览窗口,eg. ctr+w { 时的窗口大小 set previewheight=20 &quot;设置弹出菜单的高度 set pumheight=15 &quot;使用鼠标 set mouse=a &quot;在vim里可以用鼠标复制粘贴, 用鼠标左键选中,中键粘贴(中键), shift + 选中:可复制(右键) &quot;可以在buffer中任意地方使用鼠标 &quot; set selection=exclusive &quot; set selectmode=mouse,key &quot;autocmd 如果切换文件, 自动切换当前路径, BufEnter * 会使 eclim插件的JavaImpl冲突 &quot;if has(&quot;autocmd&quot;) &quot; autocmd BufWinEnter * :lchdir %:p:h &quot;endif &quot;将当前编辑文件的路径设置为当前路径 &quot; set autochdir &quot;autocmd &quot;解决consle输出乱码 language messages zh_CN.utf-8 &quot;可用来改动补全时采用的方式 set wildmode=list:full &quot;Alt组合键不映射到菜单上 set winaltkeys=no &quot;可用来取得菜单式的匹配列表 高亮首个匹配 &quot;:set wildmenu &quot;当set wildmode=list:full默认set wildmenu已启动, 但是set wildmode=longest:list时不启动 &quot;设置粘贴模式和恢复 &quot;:set paste &quot;:set nopaste &quot;修改一个文件后，自动进行备份，备份的文件名为原文件名加“~“后缀 &quot;if has(&quot;vms&quot;) &quot; set nobackup &quot;else &quot; set backup &quot;vim main.c 多出 main.c~文件用来保存打开前的原文件, 最后可用vimdiff main.c main.c~比较 &quot;endif &quot;写备份但关闭vim后自动删除 set writebackup &quot;set nowritebackup &quot;vi兼容开关 当使用omni自动补全时,要设置 set nocompatible &quot;不使用swap文件 set noswapfile &quot;关闭遇到错误时的声音提示 set noerrorbells &quot;不要闪烁 set novisualbell &quot;使用空格来替换tab set expandtab &quot;多标签设置 set showtabline=1 &quot;0表示从不显示标签栏 1表示打开文件多于一个时显示标签栏 2表示总是显示标签栏 set tabpagemax=15 &quot;标签个数 &quot;在vim编辑器下方不显示命令 &quot;&quot;To reduce the number of hit-enter prompts: &quot; Set &#39;cmdheight&#39; to 2 or higher. &quot; Add flags to &#39;shortmess&#39;. &quot; Reset &#39;showcmd&#39; and/or &#39;ruler&#39;. set cmdheight=1 set showcmd &quot; set noshowcmd &quot;打开 VIM 的状态栏标尺 set ruler set laststatus=2 &quot;always show &quot;当光标达到上端或下端时 翻滚的行数 set scrolljump=0 &quot;当光标达到水平极端时 移动的列数 set sidescroll=0 &quot;当光标距离极端(上,下,左,右)多少时发生窗口滚动 set scrolloff=2 &quot;当使用vimdiff比较文件,相比较的比较文件同步滚动,但是splite分割窗口, 两个窗口也同步, 有时候挺有用的． &quot;set scrollbind &quot;自动读写相关 &quot; autoread not work: https://stackoverflow.com/questions/2490227/how-does-vims-autoread-work &quot; manually exec :e set autoread &quot; read open files again when changed outside Vim ( 同步 ) set autowrite &quot; write a modified buffer on each :next , ... ( 跳到另一个文件时,自动保存上个文件 ) set modified &quot;设置VIM行号 set nu &quot;Tab 宽度 set ts=4 &quot;自动缩进的时候, 缩进尺寸 set sw=4 set softtabstop=4 &quot;显示括号配对情况 wrong set sm &quot;smartmatch &quot; 开启新行时使用智能自动缩进 set smartindent &quot; 搜索时忽略大小写，但在有一个或以上大写字母时仍保持对大小写敏感 set ignorecase smartcase &quot; 输入搜索内容时就显示搜索结果 set incsearch &quot; 搜索时高亮显示被找到的文本 set hlsearch &quot;use backspace delete a word. set backspace=indent,eol,start &quot;indent: 如果用了:set indent,:set ai 等自动缩进,想用退格键将字段缩进的删掉,必须设置这个选项.否则不响应. &quot;eol:如果插入模式下在行开头,想通过退格键合并两行,需要设置eol. &quot;start：要想删除此次插入前的输入,需设置这个. &quot;显示TAB健 &quot; set list &quot; set listchars=tab:&gt;-,trail:- &quot;允许backspace和光标键跨越行边界 ( 不习惯 ) &quot;set whichwrap+=&lt;,&gt;,h,l &quot;内容多时,是否换行显示 set nowrap &quot; characters to show before wrapped lines set showbreak=&lt;&lt;&gt;&gt; &quot;启动的时候不显示那个援助乌干达儿童的提示 set shortmess=aoOWtI &quot;通过使用: commands命令，告诉我们文件的哪一行被改变过 ( 不习惯 ) &quot; set report=1 &quot;在被分割的窗口间显示空白，便于阅读 (没看到效果) &quot;stl:\\ : 当前窗口状态栏显示&#39;空格&#39; (&#39;\\&#39;转义字符) &quot;stlnc:- : 非当前窗口状态栏显示--- &quot;vert:\\| : 垂直分割线为| &quot;fold:- : 若设置折叠功能,折叠后显示--- &quot;set fillchars=stl:\\ ,stlnc:-,vert:\\|,fold:-,diff:- set fillchars=stl:\\ ,stlnc:\\ ,vert:\\|,fold:-,diff:- &quot;set fillchars=vert:\\ ,stl:\\ ,stlnc:\\ &quot;带有如下符号的单词不要被换行分割 set iskeyword+=_,$,@,%,# &quot; 中文帮助 &quot; set helplang=cn &quot; 设定doc文档目录 &quot; let helptags=$VIMFILES.&#39;/doc&#39; &quot; 保留历史记录 set history=500 &quot; 英文单词在换行时不被截断 set linebreak &quot; 设置每行多少个字符自动换行，加上换行符 set textwidth=106 &quot; 选中已有行执行 gq 可以自动换行 或者 gq=G 或者 gggqG &quot;highlight column after &#39;textwidth&#39; &quot; set cc=+1 &quot; fo = formatoptions: &quot; t：根据 textwidth 自动折行； &quot; c：在（程序源代码中的）注释中自动折行，插入合适的注释起始字符； &quot; r：插入模式下在注释中键入回车时，插入合适的注释起始字符； &quot; q：允许使用“gq”命令对注释进行格式化； &quot; n：识别编号列表，编号行的下一行的缩进由数字后的空白决定（与“2”冲突，需要“autoindent”）； &quot; 2：使用一段的第二行的缩进来格式化文本； &quot; l：在当前行长度超过 textwidth 时，不自动重新格式化； &quot; m：在多字节字符处可以折行，对中文特别有效（否则只在空白字符处折行）； &quot; M：在拼接两行时（重新格式化，或者是手工使用“J”命令），如果前一行的结尾或后一行的开头是多字节字符，则不插入空格，非常适合中文 set fo+=Mm &quot; 光标可以定位在没有实际字符的地方 &quot;set ve=block &quot;显示匹配的括号([{和}]) set showmatch &quot; 短暂跳转到匹配括号的时(0.5s) set matchtime=1 &quot;多少个键被敲下后执行一次交换文件刷新 &quot;set updatecount=40 &quot;设置敲入40个字符后执行 &quot;交换文件刷新后的超时时间 set updatetime=5000 &quot;x毫秒秒后刷新 &quot;:preserve &quot;若设置的时间过长,该命令会手工的存入交换文件中. &quot; When using make, where should it dump the file, please see ./bundle/.config/errormarker.vim_conf.vim &quot; set makeprg=make\\ -j4 &quot; set makeprg=ant set makeef=errors &quot;lz 如果设置本选项,执行宏,寄存器和其它不通过输入的命令时屏幕不会重画.另外,窗口标题的刷新也被推迟.要强迫刷新,使用:redraw. &quot;set lz &quot;lazyredraw / &#39;lz&#39; (缺省关闭) &quot; set redrawtime=4000 &quot;过长的行显示不全 set display=lastline &quot; horiz split new windows below current set splitbelow &quot; vert split new windows to right of current set splitright &quot; Ignore compiled files set wildignore=*.o,*~,*.pyc,*.sh,*.png,.git\\*,.hg\\*,.svn\\* &quot;简单配置&quot; &quot;Gui选项 放到.gvimrc&quot; set tabline=%!MyTabLine() &quot; custom tab pages line if has(&quot;gui_running&quot;) &quot;set noruler set guifont=Monospace\\ 12 &quot;在Linux下设置字体的命令是： &quot;set guicursor=a:blinkon0 &quot;停止光标闪烁 set guioptions= &quot;set guioptions=e &quot; GUI Tabbar &quot;set guioptions+=m &quot; 菜单栏 &quot;set guioptions+=T &quot; 工具栏 &quot; set guioptions+=b &quot; 底边滚动条 &quot; set guioptions+=l &quot; 左边滚动条 &quot;set guioptions+=L &quot; 垂直分隔窗口左边滚动条 &quot; set guioptions+=r &quot; 右边滚动条 &quot;set guioptions+=R &quot; 垂直分隔窗口右边滚动条 set mousemodel=popup map! &lt;S-Insert&gt; &lt;MiddleMouse&gt; &quot;MiddleMouse: 粘贴 colorscheme spring set kp=man\\ -P\\ more &quot; remove the [m when using K man help map &lt;M-0&gt; :tabl&lt;CR&gt; map &lt;M-1&gt; 1gt map &lt;M-2&gt; 2gt map &lt;M-3&gt; 3gt map &lt;M-4&gt; 4gt map &lt;M-5&gt; 5gt map &lt;M-6&gt; 6gt map &lt;M-7&gt; 7gt map &lt;M-8&gt; 8gt map &lt;M-9&gt; 9gt map! &lt;M-0&gt; &lt;esc&gt;:tabl&lt;CR&gt; map! &lt;M-1&gt; &lt;esc&gt;1gt map! &lt;M-2&gt; &lt;esc&gt;2gt map! &lt;M-3&gt; &lt;esc&gt;3gt map! &lt;M-4&gt; &lt;esc&gt;4gt map! &lt;M-5&gt; &lt;esc&gt;5gt map! &lt;M-6&gt; &lt;esc&gt;6gt map! &lt;M-7&gt; &lt;esc&gt;7gt map! &lt;M-8&gt; &lt;esc&gt;8gt map! &lt;M-9&gt; &lt;esc&gt;9gt endif &quot;Gui选项 放到.gvimrc&quot; &quot;高亮 注释代码的颜色&quot; &quot;hi Comment ctermfg=6 &quot;hi cComment ctermfg=LightBlue guifg=LightBlue &quot;hi cCommentL ctermfg=DarkGray guifg=DarkGray &quot;高亮 注释代码的颜色&quot; &quot;高亮 menu color &quot; highlight Pmenu ctermbg=LightGreen ctermfg=black guibg=LightGreen highlight PmenuSel ctermbg=LightBlue guibg=LightBlue highlight PmenuSbar ctermbg=Blue guibg=Blue highlight PmenuThumb ctermbg=Yellow guibg=Yellow &quot;高亮 menu color &quot; &quot;高亮 当前行(列)&quot; set cursorline &quot; set cursorcolumn &quot; ctermfg : red(1) yellow(2) blue green grey brown cyan magenta 数字 hi CursorLine term=none cterm=underline ctermbg=none ctermfg=none gui=underline guibg=NONE &quot; hi CursorColumn term=none cterm=bold ctermbg=none ctermfg=none gui=bold guibg=NONE &quot;高亮 当前行(列)&quot; &quot; 高亮列&quot; hi ColorColumn ctermbg=darkgrey guibg=lightgrey &quot;&quot; &quot;高亮tab标签&quot; &quot;hi! TabWinNum term=bold,underline cterm=underline gui=bold,underline ctermfg=green guifg=Green ctermbg=darkgrey guibg=DarkGrey &quot;hi! TabWinNumSel term=bold,underline cterm=underline gui=bold,underline ctermfg=magenta ctermbg=blue guifg=Magenta guibg=#0000ff &quot;hi! TabPunct term=bold,underline cterm=underline gui=bold,underline ctermfg=cyan guifg=cyan ctermbg=darkgrey guibg=DarkGrey &quot;hi! TabPunctSel term=bold,underline cterm=underline gui=bold,underline ctermfg=magenta ctermbg=blue guifg=Magenta guibg=#0000ff hi! TabLineFill ctermfg=darkcyan guifg=darkgrey hi! TabLineFillEnd ctermfg=lightred ctermbg=black guifg=lightred guibg=black hi! TabLineSel term=bold ctermfg=blue ctermbg=green gui=bold guifg=blue guibg=green &quot;hi! TabModded term=underline cterm=underline ctermfg=black ctermbg=yellow gui=underline guifg=black guibg=yellow &quot;hi! TabExit term=underline,bold ctermfg=red guifg=#ff0000 guibg=darkgrey cterm=underline gui=underline &quot;hi! TabExitSel gui=underline term=underline,bold guifg=green guibg=blue cterm=underline ctermfg=green ctermbg=blue &quot;hi! TabSep term=reverse,standout,underline cterm=reverse,standout,underline gui=reverse,standout,underline ctermfg=black ctermbg=white &quot;高亮tab标签&quot; &quot;高亮 其他&quot; &quot;hi statusline cterm=bold ctermfg=LightGreen ctermbg=DarkMagenta gui=bold guifg=Green guibg=DarkMagenta hi Folded term=none cterm=bold ctermbg=none ctermfg=none gui=bold guibg=NONE hi FoldColumn term=none cterm=bold ctermbg=none ctermfg=none gui=bold guibg=NONE hi SignColumn term=none cterm=bold ctermbg=none ctermfg=none gui=bold guibg=NONE hi VertSplit term=none cterm=bold ctermbg=none ctermfg=none gui=bold guibg=NONE hi DebugBreak term=bold cterm=bold ctermbg=cyan ctermfg=none gui=bold guibg=magenta guifg=NONE hi Cursor term=none cterm=bold ctermbg=white ctermfg=none &quot;高亮 其他&quot; &quot;字符编码(多字节)&quot; if has(&quot;multi_byte&quot;) set fileencodings=ucs-bom,utf-8,gb18030,gbk,gb2312,chinese,big5,latin1,cp936 set termencoding=utf-8 set encoding=utf-8 endif &quot;VIM中显示信息都为英文的. language en_US.utf8 &quot;字符编码(多字节)&quot; &quot;设置C/C++语言的具体缩进方式 eg. switch case 缩进&quot; &quot;打开 C/C++ 风格的自动缩进 ( =a{ , gg=G 代码美化 ) set cin set cinoptions={0,1s,t0,n-2,p2s,(03s,=.5s,&gt;1s,=1s,:1s set cino=:4g0t0(sus &quot;工作需要不缩进,不习惯也要习惯 &quot; set cino=:0g0t0(sus &quot; :0 -- switch 语句之下的 case 语句缩进 0 个空格 &quot; g0 -- class,struct,等权限控制语句(public,protected,private)相对class,struct等所在的块缩进 0 个空格 &quot; t0 -- 如果函数返回值与函数名不在同一行，则返回值缩进 0 个空格 &quot; (sus - 当一对括号跨越多行时，其后的行缩进前面 sw 指定的距离 &quot;设置C/C++语言的具体缩进方式 eg. switch case 缩进&quot; &quot;vim折叠功能&quot; &quot;折叠方式,可用选项 ‘foldmethod’ 来设定折叠方式：set fdm=*** &quot;有 6 种方法来选定折叠： &quot;manual 手工定义折叠 &quot;indent 更多的缩进表示更高级别的折叠 &quot;expr 用表达式来定义折叠 &quot;syntax 用语法高亮来定义折叠 &quot;diff 对没有更改的文本进行折叠 &quot;marker 对文中的标志折叠 &quot;常用的折叠快捷键 &quot;zf 创建折叠 (marker 有效) &quot;zo 打开折叠 &quot;zO 对所在范围内所有嵌套的折叠点展开 &quot;zc 关闭当前折叠 &quot;zC 对所在范围内所有嵌套的折叠点进行折叠 &quot;[z 到当前打开的折叠的开始处。 &quot;]z 到当前打开的折叠的末尾处。 &quot;zM 关闭所有折叠 (我喜欢) &quot;zr 打开所有折叠 &quot;zR 循环地打开所有折叠 (我喜欢) &quot;zE 删除所有折叠 &quot;zd 删除当前折叠 &quot;zD 循环删除 (Delete) 光标下的折叠，即嵌套删除折叠 &quot;za 若当前打开则关闭，若当前关闭则打开 ( 这个就足够了) &quot;zA 循环地打开/关闭当前折叠 &quot;zj 到下一折叠的开始处 ( 我喜欢 ) &quot;zk 到上一折叠的末尾 ( 我喜欢 ) &quot;set foldmethod=indent &quot;set foldmethod=marker &quot;要想在{ } 代码块中折叠，按空格键 &quot;syntax 与 c.vim 中的 \\cc 注释功能冲突 &quot;set foldmethod=syntax set foldmethod=marker set foldenable &quot; 开始折叠 set foldcolumn=0 &quot; 设置折叠区域的宽度 set foldlevel=0 &quot; 设置折叠层数为 &quot;set foldopen=all &quot;set foldclose=all &quot; 设置为自动关闭折叠 &quot;使&quot;用空格打开或关闭折叠 nnoremap &lt;space&gt; @=((foldclosed(line(&#39;.&#39;)) &lt; 0) ? &#39;zC&#39; : &#39;zO&#39;)&lt;CR&gt; &quot;vim折叠功能&quot; &quot;文件比较&quot; &quot;:vertical diffsplit FILE_RIGHT &quot;与已打开的文件进行比较 &quot;设置不同之处显示上下三行 set diffopt=context:3 &quot;命令模式（ESC键进入）： &quot;[c 跳转到下一个差异点 &quot;]c 跳到上一个差异点 &quot;dp 左边文件差异复制到右边文件(直接在键盘上行按下dp) &quot;do 右边文件差异复制到左边文件(直接在键盘上行按下do) &quot;zo 隐藏相同行 &quot;zc 展开向同行 &quot;u 撤销 &quot;Ctrl+ww 文件切换 &quot; &quot;:qa! 退出不保存 &quot;:wa 保存 &quot;:wqa 保存退出 &quot;:diffupdate 重新比较 &quot;文件比较&quot; &quot;单词列表匹配&quot; &quot;ctrl+x ctrl+k &quot;apt-get install wordlist set dictionary=~/.vim/dict/math.txt set dictionary+=~/.vim/dict/wordlist.txt set cpt=.,w,b,u,t,k,i &quot; set cpt=. &quot; . scan the current buffer (&#39;wrapscan&#39; is ignored) &quot; w scan buffers from other windows &quot; b scan other loaded buffers that are in the buffer list &quot; u scan the unloaded buffers that are in the buffer list &quot; U scan the buffers that are not in the buffer list &quot; k scan the files given with the &#39;dictionary&#39; option &quot; kspell use the currently active spell checking |spell| &quot; k{dict} scan the file {dict}. Several &quot;k&quot; flags can be given, &quot; patterns are valid too. For example: &gt; &quot; :set cpt=k/usr/dict/*,k~/spanish &quot; s scan the files given with the &#39;thesaurus&#39; option &quot; s{tsr} scan the file {tsr}. Several &quot;s&quot; flags can be given, patterns &quot; are valid too. &quot; i scan current and included files &quot; d scan current and included files for defined name or macro &quot; |i_CTRL-X_CTRL-D| &quot; ] tag completion &quot; t same as &quot;]&quot; &quot;单词列表匹配&quot; &quot;打开文件后自动回到上一次最后编辑的地方&quot; &quot;如果不起作用查看 ~/.viminfo 文件属性 au BufReadPost * \\ if line(&quot;&#39;\\&quot;&quot;) &gt; 1 &amp;&amp; line(&quot;&#39;\\&quot;&quot;) &lt;= line(&quot;$&quot;) | \\ exe &quot;normal! g&#39;\\&quot;&quot; | \\ endif &quot;打开文件后自动回到上一次最后编辑的地方&quot; &quot;completeopt 弹出菜单 输入字母实现即时的过滤和匹配 ( 参考 neocomplcache )&quot; &quot;&quot;关掉智能补全时的预览窗口 (Scratch) &quot;&quot; menu 使用弹出菜单来显示可能的补全 &quot;&quot; longest 只插入匹配的最长公共文本 &quot;&quot;set completeopt=menuone,menu,longest,preview &quot; set completeopt=menu set completeopt=longest,menu &quot;completeopt 弹出菜单 输入字母实现即时的过滤和匹配 ( 参考 neocomplcache )&quot; &quot; 设置Logcat文件类型&quot; &quot; au BufRead,BufNewFile *logcat* set filetype=logcat &quot; &quot;a.vim实现源文件与头文件切换&quot; let alternateNoDefaultAlternate = 1 &quot; &quot;按q之后按:进入histroy command &quot; 0~ 1~ workaround: https://github.com/vim/vim/issues/1671 if has(&quot;unix&quot;)&quot; let s:uname = system(&quot;echo -n \\&quot;$(uname)\\&quot;&quot;) if !v:shell_error &amp;&amp; s:uname == &quot;Linux&quot; set t_BE= &quot; 影响R concose set t_SH= endif endif&quot; &quot; gu gU 大小写互转 &quot; gitm89$ &quot; workaround for autoread not work au FocusGained,BufEnter * :silent! ! 4 依赖 1. 要求vim版本：vim8.0 or high 2. 管理插件: git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim 3. 安装插件: Open vim, 执行:PluginInstall 4. cd bundle/vimproc.vim; make -f make_unix.mk 5. 保证系统clang版本3.9 or high， 到YouCompleteMe执行python3 ./install.py --clang-completer --clangd-completer or --all (时间比较久) ./install.py --clangd-completer --clang-completer --go-completer --ts-completer --java-completer python3: 修改一下install.sh 6. jedi补全sudo pip3 install -U jedi git clone https://github.com/davidhalter/jedi sudo python setup.py install or (推荐) sudo pip3 install -e git://github.com/davidhalter/jedi.git#egg=jedi 安装numpydoc: sudo apt-get install python-numpydoc sudo apt-get install python3-numpydoc (ubuntu16) 补全(某些)时有个错误: docscrape.py:140: UserWarning: Unknown section Note 打开文件加一个&quot;Note&quot; Section 7. 使用universal-ctags, https://github.com/universal-ctags/ctags 下载编译 8. 使用markdown, 并根据对应的配置里面的说明进行修改 `npm -g install instant-markdown-d` 9. Js `cd bundle/tern_for_vim; npm install` sudo npm i -g eslint eslint-plugin-vue 10. fzf 把export FZF_DEFAULT_OPTS=&quot;--bind=&#39;ctrl-o:execute(vim {})&#39;&quot; 放到~/.fzf.bash cd ./bundle/fzf/; ./install --all sudo apt-get install silversearcher-ag sudo apt-get install ripgrep (ubuntu18.10) or git clone https://github.com/BurntSushi/ripgrep cd ripgrep ; cargo build --release; ./target/release/rg --version or cargo install ripgrep (推荐) 11. LeaderF cd ./bundle/LeaderF; ./install.sh 12. jupyter sudo pip3 install jupyter_contrib_nbextensions jupyter nbextensions_configurator enable --user # Now clone the repository cd $(jupyter --data-dir)/nbextensions git clone https://github.com/lambdalisue/jupyter-vim-binding vim_binding chmod -R go-w vim_binding jupyter nbextension enable vim_binding/vim_binding 配置jupyter jupyter notebook --generate-config jupyter notebook password 13. 语法检查 sudo apt-get install pyflakes sudo apt-get install python-flake8 (推荐) 14. 数学公式 sudo apt-get install texlive","tags":[{"name":"How","slug":"How","permalink":"https://qrsforever.github.io/tags/How/"}]},{"title":"求导法则","date":"2018-06-24T08:25:43.000Z","path":"2018/06/24/Books/Math/derivative_rules/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 1 基本求导法则 2 复合求导法则","tags":[{"name":"Math","slug":"Math","permalink":"https://qrsforever.github.io/tags/Math/"}]},{"title":"(原创)本地规则引擎介绍","date":"2018-06-14T07:48:14.000Z","path":"2018/06/14/Note/IOT/Rule-Engine-Design2/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Elink Rule Schema Device Schema Rule Model Design LHS Tree Clp Struct Rule Class UML Clp Script Design Act Auto Gen Rule Others Local Build Sync Elink Script Rule Categories TODO 1 Elink 1.1 Rule Schema { &quot;ruleName&quot;:&quot;example&quot;, &quot;ruleId&quot;:&quot;123456&quot;, &quot;description&quot;:&quot;this is a example for rule definition&quot;, &quot;trigger&quot;:{ &quot;triggerType&quot;:&quot;auto|manual&quot;, &quot;switch&quot;:{ &quot;enabled&quot;:&quot;on&quot;, &quot;timeCondition&quot;:&quot;on&quot;, &quot;deviceCondition &quot;:&quot;on&quot;, &quot;notify&quot;:&quot;on&quot;, &quot;manual&quot;:&quot;on&quot; } }, &quot;conditions&quot;:{ &quot;conditionLogic&quot;:&quot;and&quot;, &quot;timeCondition&quot;:[ { &quot;year&quot;:&quot;2018&quot;, &quot;month&quot;:&quot;10&quot;, &quot;day&quot;:&quot;10|13|17&quot;, &quot;hour&quot;:&quot;every&quot;, &quot;minute&quot;:&quot;every&quot;, &quot;second&quot;:&quot;1&quot; } ], &quot;deviceCondition&quot;:{ &quot;deviceLogic&quot;:&quot;or&quot;, &quot;deviceStatus&quot;:[ { &quot;deviceId&quot;:&quot;0007A895C8A7&quot;, &quot;propName&quot;:&quot;CurrentTemperature&quot;, &quot;propValue&quot;:&quot;v&gt;50&quot; }, { &quot;deviceId&quot;:&quot;DC330D799327&quot;, &quot;propName&quot;:&quot;onOffLight&quot;, &quot;propValue&quot;:&quot;v==true&quot; } ] } }, &quot;actions&quot;:{ &quot;notify&quot;:{ &quot;title&quot;: &quot;xxx&quot;, &quot;message&quot;:&quot;Girlfriend Birthday!&quot; }, &quot;deviceControl&quot;:[ { &quot;deviceId&quot;:&quot;0007A895C7C7&quot;, &quot;propName&quot;:&quot;CurrentTemperature&quot;, &quot;propValue&quot;:&quot;50&quot; }, { &quot;deviceId&quot;:&quot;DC330D79932A&quot;, &quot;propName&quot;:&quot;onOffLight&quot;, &quot;propValue&quot;:&quot;true&quot; } ], &quot;manualRuleId&quot;:[ &quot;1528374365.417.48775&quot;, &quot;1528424679.929.67961&quot; ] } } 1.2 Device Schema { &quot;result&quot;: { &quot;description&quot;: &quot;烟雾报警器&quot;, &quot;id&quot;: 12, &quot;profile&quot;: { &quot;OnlineState&quot;: { &quot;tag&quot;: &quot;在线状态&quot;, &quot;write&quot;: &quot;F&quot;, &quot;type&quot;: &quot;enum&quot;, &quot;read&quot;: &quot;T&quot;, &quot;range&quot;: { &quot;2&quot;: &quot;离线&quot;, &quot;1&quot;: &quot;在线&quot; } }, &quot;PowerOnOff&quot;: { &quot;tag&quot;: &quot;开关状态&quot;, &quot;write&quot;: &quot;F&quot;, &quot;type&quot;: &quot;enum&quot;, &quot;read&quot;: &quot;T&quot;, &quot;range&quot;: { &quot;2&quot;: &quot;关闭&quot;, &quot;1&quot;: &quot;开启&quot; } }, &quot;SecurityControl&quot;: { &quot;tag&quot;: &quot;布防开关&quot;, &quot;write&quot;: &quot;T&quot;, &quot;type&quot;: &quot;enum&quot;, &quot;read&quot;: &quot;T&quot;, &quot;range&quot;: { &quot;2&quot;: &quot;关闭&quot;, &quot;1&quot;: &quot;开启&quot; } }, &quot;Battery&quot;: { &quot;tag&quot;: &quot;剩余电量&quot;, &quot;write&quot;: &quot;F&quot;, &quot;type&quot;: &quot;enum&quot;, &quot;read&quot;: &quot;T&quot;, &quot;range&quot;: { &quot;2&quot;: &quot;正常&quot;, &quot;1&quot;: &quot;低电量&quot; } } } }, &quot;status&quot;: 1, &quot;request&quot;: &quot;/api/device/profile&quot; } 规则引擎的设计参考了Elink的json schema, 但设计上并不会受限该schema, 如果不加新的特殊需求, 设计模型不会大改. 2 Rule Model Design 2.1 LHS Tree LHSNode Tree ********* &quot;and&quot;: condition logic *** LHSNode ** * * *** &quot;and&quot; *** / ********* \\ / | \\ child / | \\ child / cond | \\ / | \\ / | \\ / | \\ / | \\ / | \\ ********* +-------------+ ********* *** LHSNode *** | Condition | *** LHSNode *** * * | | * * *** &quot;or&quot; *** | &quot;and&quot; | *** &quot;or&quot; *** / ********* \\ +-------------+ ********* / \\ / \\ &quot;and&quot;: slot logic, only support &quot;and&quot; / cond cond \\ / \\ +---------------------------+ / \\ | +------+ | +-------------+ +-------------+ | | | | | Condition | | Condition | Fact Instance | | | | | | \\ / | | | &quot;and&quot; | | &quot;and&quot; | \\ type / | | +-------------+ +-------------+ \\ / v v | Condition &lt;---&gt; Device | TimeEvent | SlotPoint &lt;---&gt; Property | -----------+-----------+-----------+--------------- | | | | v v +-------------+ +-------------+ &quot;&amp;&quot;: cell logic | SlotPoint | | SlotPoint | &quot;|&quot;: cell logic | | | | &quot;~&quot; | &quot;&amp;&quot; | | &quot;|&quot; | +-------------+ +-------------+ | | | | v v +-------------------+ +-------------------+ | Cell | | Cell | Compare Symbol: &quot;=, &gt;, &lt;, &gt;=, &lt;=, &lt;&gt;&quot; | | | | Connective Symbol: &quot;&amp;, |, ~&quot; |(v &gt; 10) &amp; (v &lt; 20)| |(v = 10) | (v &gt; 20)| +-------------------+ +-------------------+ 2.2 Clp Struct ruleID ^ -----&gt; comment, here we want is rule name. | / | / -----&gt; MultiSlot (defrule rul-0001 &quot;this is an example&quot; / +-------- (and / | (and ------------------------------------------------------- | ?fct_t1 &lt;- (datetime ?clock ?year ?month ?day ?hour ?minute ?second $?others) ---+ | 1 (test (= ?year 2018)) | Condition: Fact | layer (test (= ?month 06)) | (not use Template) | (test (or (= ?day 20) (= ?day 21) (= ?day 22) )) ---+ | ) -----------\\ | (or \\------&gt; Cell LHSNode | (object (is-a TempSensor) ---+ | (ID ?id &amp;:(eq ?id ins-0007A895C8A7)) | | 2 (CurrentTemperature ?CurrentTemperature &amp;:(&gt; ?CurrentTemperature 50)) | | layer ) | | (object (is-a Light) | Condition: Instance | (ID ?id &amp;:(eq ?id ins-DC330D799327)) /-----&gt; Cell | | (onOffLight ?onOffLight &amp;:(= ?onOffLight 1)) / | | ) \\ ------------------- ---+ | ) \\ +--&gt; timeout-ms +-------- ) --------&gt; SlotPoint | +--&gt; retry-count =&gt; | | +-------- (bind ?c (create-rule-context rul-0001 5000 5)) ------&gt; create the rule context | (if (eq ?c FALSE) then (return)) | (send ?c act-control ins-0007A895C7C7 CurrentTemperature 50) ---&gt; action: device control RHSNode | (send ?c act-control ins-DC330D79932A onOffLight 1) | (send ?c act-notify 10000001 &quot;tellYou&quot; &quot;Girlfriend Birthday&quot;) ---&gt; action: message notify +--------- (send ?c act-scene rul-1000) ---&gt; action: active scene ) ---------------------------------------------------------------------------------------------------------------------------------------- /---&gt; DEVICE is superclass + -------------- (defclass SmogAlarm / | (is-a DEVICE) -------/ | /---- (role concrete) (pattern-match reactive) ----&gt; can triggered by rule Class | v (slot OnlineState (type NUMBER) (allowed-numbers 2 1)) | (not abstract) (slot PowerOnOff (type INTEGER) (allowed-numbers 2 1)) | (slot SecurityLevel (type SYMBOL) (allowed-symbols low normal high)) | (slot Battery (type NUMBER) (allowed-numbers 2 1)) +---------------- ) / / v (INTEGER or FLOAT) 定义Rule; (defrule rule-name ${LHSNode} =&gt; ${RHSNode}) LHSNode := [Condition+], Condition可以由Fact和Object(instance)组成 一个Fact或者Object由一个或多个单槽(SlotPoint)/多槽组成: Fact := [SingleSlot+], Object := [(SingleSlot|MultiSlot)+] 一个槽点比如Fact中的\"年|月|日|时|分|秒\", Object中的属性, 槽点(属性)值可进行逻辑比较, 构成触发点, 取名为Cell 时间Fact不采用Template原因在程序实现更方便 一旦RHSNode被执行, 首先为该Rule创建Context, Context销毁之时就是Rule的执行得到结束之日(异步). TODO 1. 一个Rule在Context没有销毁之前多次触发, 并无响应, 只有等到Context得到success结果或者超时结束,下次触发Rule方有效. 2.3 Rule Class UML +---------------+ +--------------+ | Condition | +------------+ +----------+ | Action | |---------------| | SlotPoint | | _Cell_ | |--------------| | mSlotLogic | -----&gt; |------------| ------&gt;|----------| | mType | | mType | / | mCellLogic | / | nSymbol | | mCall | ^ | mCls | / | mSlotName | / | nValue | | mID | \\ | mID | / | mCells |◆ ---/mCells +----------+ | mSlotName | \\ | mSlots |◆ ----/mSlots +------------+ | mSlotValue | -------+ +---------------+ +--------------+ 1:n | mActions ^ +-----------+ mCondLogic: and/or/not | | | | mSlotLogic: and +------------+ +------------+ | +--------------+ | mCellLogic: &amp;,|,~ | SlotInfo | | RHSNode | | | LHSNode | | nSymbol: =,&gt;,&lt;,&gt;=,&lt;=,&lt;&gt; |------------| | -----------| | |--------------| | | nName | | mActions | | | mCondLogic | /mChildren | nValue | +------------+ +--------◇ | mConditions | / +------------+ ^ mConditions| mChildren |-/ +---------------+ ^ | +--------------+ | RulePayload | mSlots | 1:n +----------\\ ^ |---------------| | \\ | | mRuleName | ◆ +-------------+ \\ | | mRuleID | +-------------------+ | DataChannel | \\ | mLHS | mVersion | | InstancePayload | |-------------| \\ +----------◇ | mLHS | |-------------------| | | -----------------------◇ | mRHS | /--| mInsName | |send(payload)| mLHS |---------------| / | mClsName | +-------------+ | toString() | / | mSlots | △ ^ ^ △ +---------------+ / +-------------------+ | | | | | / | | | | | | +---------------+ | | +----------------+ | | | | | | | | | | | | ▽ | +------------------+ | | +--------------------------+ +----------+ ◁ --+ +-----------------+ | RuleDataChannel | | | | DeviceDataChannel | | Payload | | ClassPayload | mCloudMgr|------------------| | | | ------------------------ | |----------| ◁ -------------|-----------------| +----◆ | mCloudMgr | | | | mDeviceMgr | | type() | | classname | | | mHandler | | | | mHandler | +----------+ | superclass | | +------------------+ | | |--------------------------| | mSlots | version | | △ | | | onStateChanged() | | +---◇ | mSlots | | | | | | onPropertyChanged() |-------------+ 1:n | |-----------------| | | | | | send() | | | toString() | | +------------------------+ | | +--------------------------+◆ ---------------------+ | +-----------------+ | | ElinkRuleDataChannel | | | △ ◆ mHandler | | | |------------------------| | | | | | | | | | | | | +----------+ | | | | onRuleSync() | | | +-------------------------+ | | | +---------------+ | | send() | | | | ElinkDeviceDataChannel | | | | | Slot | | +------------------------+ | | |-------------------------| | | +---&gt; |---------------| | | | | onProfileSync() | | | | mType | | | | +-------------------------+ | | | mName | | | | | | | mMin/mMax | | +-------------------------+ | | mDeviceMgr | | | mAllowList | | | CloudManager | | | v | |---------------| | |-------------------------| | | +----------------------------------------+ | | toString() | +---&gt;| | | | | DeviceManger | | +---------------+ | registRuleSyncCallback | | | | -------------------------------------- | | | | | | | | | +-------------------------+ | | | registDeviceStateChangedCallback | | | | | registDevicePropertyChangedCallback | | | | | registDeviceProfileSyncCallback | | +-----------------------------------+ | | setProperty | | | +-----------------------------------+ +----------------------------------------+ | | | | | | +----------------------------+ +----------------+ | | | +----▷ | MessageHandler::Callback | &lt;----◇ | MessageHandler | ◁ ---------+ | | | | +----------------------------+ |----------------| | | | | | | mCallback | | | | | | +----------------+ | | | | +----------------------+ | | | | | RuleEngineService | | v | | |----------------------| mUrgentHandler +--------------------+ | | | mUrgentHandler |◇ --------------------------------------------------&gt;| RuleEventHandler | | | | | mCore +----------------------+ ------&gt;|--------------------| | | | mCore/mCoreUrgent | ◆ -------------&gt; | RuleEngineCore | / | handleMessage | | | | mServerRoot | |----------------------| / +--------------------+ | +--| mDeviceChannel | mEnv | mHandler | /mHandler ^ | +----| mRuleChannel | +-------◆ | mEnv |◆ | | | mOfflineInsesCalled | | |----------------------| ------+ | |----------------------| | | driver() | / | | callInstancePush | | | | / +------------------+ | callMessagePush | | | handleTimer | / | RuleEventThread | | setDeviceChannel | | | handleClassSync | | |------------------| | setRuleChannel | | | handleRuleSync | | | mMessageQueue | | handleMessage | | | handleInstanceAdd | | +------------------+ +----------------------+ | | handleInstanceDel | | △ ◇ v | handleInstancePut | | | mStore | +---------------+ +----------------------+ | | | | Environment | | | | | |--\\ | +---------------------+ | +---------------+ \\ CLP | | RuleUrgentThread | | Clipscpp ------&gt; clips6.30 | |---------------------| \\ | | mService | \\ | +---------------------+ \\ +----------------------+ | \\ | RuleEngineStore | | ---------&gt; |----------------------| | /--------------◆ | mDB | | / mDB | mHandler |◆ -----------------------+ / | mDefTable | mHandler | |----------------------|\\ | | open/close | \\ +---------------------+ v | updateClassTable | \\ mTables | DefTable | +--------------+ | updateRuleTable | --------&gt; |---------------------| |SQLiteDatabase| | queryClassFilePaths | | mDB | | | | queryRuleFilePaths | | mUpdateHistoryList | | | | | |---------------------| +--------------+ +----------------------+ | updateOrInsert | | getFilePaths | | getDefInfos | | _Update | +---------------------+ △ △ / \\ / \\ | | | | +------------------+ +-----------------+ | DefClassTable | | DefRuleTable | | | | | +------------------+ +-----------------+ 核心驱动: RuleEngineService RuleEngineCore RuleEngineStore 数据通道: RuleDataChannel DeviceDataChannel 载体转换: ClassPayload InstancePayload RulePayload 辅助工具: MessageHandler SQLiteDatabase Log 2.4 Clp Script Design (auto) (manual) device property profile rule online offline changed scene TestCase ---------------------------------------------------------------------------------------------------&gt; | | | | ║ | | | | | | mainHandler | | mainHander() | | | | ║ | | v v v v v ▼ v v MainThread -------------------------------------------------------------------------------------------------------------&gt; \\ profile rule \\ \\ ║ \\ \\ \\ json json \\ \\ ruleHandler \\ \\ \\ \\ \\ | | ║ | | \\ \\ \\ | | ▼ | | \\ \\ \\ v T v T T v T v T T T T RuleThread --------------+----------+---------+---------+---+-----+---------+---------+---------+---------+-----&gt; ^ T add | del | | \\ | / | | | | ruleHander() | | | | \\ | / | | | | | | | | | | | | | | | +--\\ +--\\ +--\\ +--\\ v v v /--+ /--+ /--+ /--+ \\ \\ \\ \\+---------+/ / / / T: timer (default 1s) \\ \\ \\ | refresh | / / / -----------------------------&gt;| |&lt;---------------------------- | run | +---------+ | +--------+ (LHS) | ----▷ | USER | +--------------------------------------------------------------+ / +--------+ salience | / △ | +-------------------+ / | v | RuleContext | / | +--------+ |-------------------| / / +---| Rule-1 | | rule-id | / / | +--------+ | timeout-ms | +---------+ +-----------+ +----------------+ | | retry-count |---------▷ | Context | | DEVICE | | SmogAlarm | +-&gt; +--------+ | current-try | | | |-----------| |----------------| +---| Rule-2 | | start-time | +---------+ | ID |◁ ------| OnlineState | | +--------+ | act-error | | UUID | | PowerOnOff | | | unanswer-list | | Class | | Battery | +-&gt; +--------+ | response-rules | +-----------+ +----------------+ +---| Rule-3 | |-------------------| | +--------+ | try-again | | | unanswer-count | +-&gt; +--------+ | act-control | | Rule-4 | | act-notify | +--------+ | act-scene | | +-------------------+ | +-------------------------+----------------------+------------+ | | | | | | Action | | | v +------------------------- &gt; act-control ------------&gt; act-notify -----------&gt; act-scene | send-message (RHS) | ^ | ^ / | | act-step-control | | true | | true / | | success | | | | v | or | +------&gt; make-rule | +------&gt; make-rule | fail | | false (response) | | false (response) | v | v | v RuleEngineService ----------------------------------------------------------------------------------------------&gt; ins-push txt-push msg-push 规则分为联动(Auto)和手动(Manual)两种, 联动: 设备属性变化触发相关规则 手动: 触发场景,比如回家模式 RuleThread是专门的规则线程, 作用: 延时Timer以及RefreshAgenda/Run(触发Rule,执行Action), 这样设计相对简单, 避免Rule多线程问题 脚本Actions中的方法act-control/act-notify会调用RuleEngineService中的ins-push/txt-push(返回false:异步, 返回true:同步) 如果ins-push/txt-push是异步(return:false)方式, 则act-xxx会自动创建等待结果的规则, 当父规则Context销毁, 该auto规则删除 如果联动规则触发了场景规则被调用, act-scene也会自动创建等待(子规则)结果规则, 且它触发的规则也会创建Context. act-xxx方法是RHS中Action, 每个action的执行可以是同步异步(3,4). 如果异步则会自动创建规则(autorule)用以等待结果, 并将之存入 response-rules中, 除此之外, 把自身funcall注入unanswer-list中,如果autorule检查到action执行成功, 会将funcall从unanswer-list移除, Rule是判断unanswer-list的size决定自身是否执行成功的(size=0: success). RuleEngineService根据T(default:1是)定时给脚本喂时间, 这 样Rule就可以实现超时机制, (单次)超时后, 首先检查current-try次数, 如果小于retry-count, 则从unanswer-list中取出没有完成的 funcall,并且执行. 如果规则被触发, 但是RHS中的Action控制的设备Poweroff, RuleEngineService会得知该事件, 并在设备上线后刷新与之相关的Rules 2.5 Act Auto Gen Rule act-control(ins-04FA8309822A, CleaningMode, 2): +---&gt; &#39;_&#39; represent inner auto generate | | +---&gt; parent rule name that call act-control in RHS | | | | +--&gt; sign this rule is for reponse |------------------------ | (defrule _rul-1529578016.389.86822-response-ins-04FA8309822A |---&gt; action id (here is instance name) (declare (salience 1000)) -----------------+ (object (is-a SweepingRobot) (ID ?id &amp;:(eq ?id ins-04FA8309822A)) (CleaningMode ?v &amp;:(eq ?v 2))) =&gt; (send [rul-1529578016.389.86822] action-success &quot;act-control ins-04FA8309822A CleaningMode 2&quot;) ) -------------------------- -------------- --------------------------------------------- | | | +--&gt; parent rule context +--&gt; rule context method | modify unanswer-list v arguments of action-success 将设置instance(设备)的属性值作为条件,被控制的设备属性值如果上报值符合条件,证明控制成功 act-notify(n-350490027, \"tellYou\" \"Girlfriend Birthday\"): notify id (assert (rule-response notifyid success)) ----------- | (defrule _rul-1529583875.818.80441-response-n-350490027 | (declare (salience 1000)) | (rule-response n-350490027 success) &lt;--------------------+ =&gt; (send [rul-1529583875.818.80441] action-success &quot;act-notify n-350490027 \\&quot;tellYou\\&quot; \\&quot;Girlfriend Birthday\\&quot;&quot;) ) 通过响应Fact(rule-response notifyid success)判断消息通知是否执行成功. act-scene(rul-1529578676.958.69587): (assert (rule-response ruleid success)) rule name: nest call | ------------------------ | (defrule _rul-1529578775.206.24324-response-rul-1529578676.958.69587 | (declare (salience 1000)) | (rule-response rul-1529578676.958.69587 success) &lt;----------------+ =&gt; (send [rul-1529578775.206.24324] action-success &quot;act-scene rul-1529578676.958.69587&quot;) ) 通过响应Fact(rule-response ruleid success)判断消息通知是否执行成功. 3 Others 3.1 Local Build make 除了clips代码(编译后在Makefile中指定), 其他依赖模块会依次编译: @cd $(MISC_DIR); make; @cd $(MESSAGE_DIR);make; @cd $(LOG_DIR);make; @cd $(CLIPSCPP_DIR);make; @cd $(PAYLOAD_DIR);make; @cd $(DRIVER_DIR);make; make clean 依赖模块会依次清除: @cd $(MISC_DIR); make clean; @cd $(MESSAGE_DIR);make clean; @cd $(LOG_DIR);make clean; @cd $(CLIPSCPP_DIR);make clean; @cd $(PAYLOAD_DIR);make clean; @cd $(DRIVER_DIR);make clean; 3.2 Sync Elink Script 自动同步云端的profile和rules: cd test; ./sync_from_cloud.py 脚本通过请求获取信息, 其中Token可能改变, 需要定时修改 class ElinkRequest(object): &quot;&quot;&quot;Docstring for RequestHeader. &quot;&quot;&quot; def __init__(self, uri): self._ip = &quot;10.185.30.96&quot; self._host = &quot;smarthome.lecloud.com&quot; self._token = &quot;238XXXvKm3oZNGEm1Sm2T6Udm2Wnr4nikdxi6fm1kfU4Pj17RxSDAv5B2n3m5RMitfRw0b6VGLjoVsJejE4z3B9Z0Bt1cm3ewDuBBuOwLkRrUxinrb3zGkwUm4&quot; self._uri = uri 脚本只供开发调试使用 3.3 Rule Categories classified into three major categories: global rules which cannot be disable, such as: retract the fact of datetime which asserted per second (defrule retract-datetime (declare (salience ?*SALIENCE-LOWEST*)) ?f &lt;- (datetime $?) =&gt; (retract ?f) ) 一个fact被声明, 将不会消失, 但可以通过modify修改, 也可以retract将其收回. custom rules configured through UI which can enable or disable. the naming conventions of the rule is: ; \"rul-\" is the prefix of the custom rule name (defrule rul-1529578775.206.24324 \"autotest3\" (object (is-a AirClean1) (ID ?id &amp;:(eq ?id ins-0007A895C8A7)) (WorkMode ?WorkMode &amp;:(= ?WorkMode 5)) ) =&gt; (bind ?c (create-rule-context rul-1529578775.206.24324)) (if (eq ?c FALSE) then (return)) (send ?c act-scene rul-1529578676.958.69587) ) 用户有权开启/关闭自己配置的规则, 设计上一个custom rule对应一个clp文件, 方便删除更新. auto-gen rules which have short life cycle, disappeared when got the response of the action or rule context destroied. ; &quot;_rul-&quot; is the prefix of the auto-gen rule name (defrule _rul-1529578775.206.24324-response-rul-1529578676.958.69587 (declare (salience 1000)) (rule-response rul-1529578676.958.69587 success) =&gt; (send [rul-1529578775.206.24324] action-success &quot;act-scene rul-1529578676.958.69587&quot;) ) 用户不可见, Action方法中内部生成, 当Action有response(或者Rule超时/失败)则自动删除 4 TODO 不使用模板的MultiSlot的Fact作为条件, Slot是有顺序的, 判断Fact时, 可以省略后面的, 不可以从中间省略, 例如: 正确: ?fct_t1 &lt;- (time ?year ?month ?day ?hour ?minute ?second $?others) ?fct_t2 &lt;- (time ?year ?month ?day ?hour ?minute $?others) ?fct_t3 &lt;- (time ?year ?month ?day ?hour $?others) 错误(语法正确, 意义错误, second其实是hour): ?fct_t4 &lt;- (time ?year ?month ?day ?second $?others) 使用带模板的Fact作为条件, 模板Slot没有顺序限制, 但需要谨记在使用完之后retract掉, 否则不会消失, 例如: (defrule test ?fct_t1 &lt;- (datetime (year ?y &amp;:(= ?y 2018) (second ?s)) =&gt; (retract fct_t1) ) 触发rule:test (assert (datetime (year 2018) (second 10))) 不触发rule, 所以这个fact没有被retract, 该fact一直存在, 浪费MEM, 可以使用Object(Instance)取代 (assert (datetime (year 2019) (second 10))) 云端下发的规则ID及为某个设备创建实例ID时, 为了避免规则ID和实例ID可能是纯数字, 比如设备实例其实就是DeviceID, 使用下面API转: 加ins-前缀 std::string innerOfInsname(std::string name); std::string outerOfInsname(std::string name); 加rul-前缀 std::string innerOfRulename(std::string name); std::string outerOfRulename(std::string name); 暂时不支持运行时更新设备类, 比如Light, 原因是如果该类在Rule的条件LHS中引用, 该类将无法直接删除更新. 运行时动态使能的设计(未设计) 对中文的支持(支持) 简单规则测试 (see TempSimulateSuite.cpp) (finished) RULE LHS ACTION PASS ? autotest1 instance act-control Yes autotest3 instance act-scene Yes autotest4 instance act-notify Yes manualtest1 fact act-control Yes manualtest3 fact act-control Yes LHS带有and和or的规则测试 (defrule rul-0000000000.000.00001 &quot;tv-light-rule&quot; (and (object (is-a Light) (ID ?ins-38D269B0EA1801010311 &amp;:(eq ?ins-38D269B0EA1801010311 ins-38D269B0EA1801010311)) (PowerOnOff ?PowerOnOff &amp;:(= ?PowerOnOff 1)) ) (object (is-a Letv) (ID ?ins-00000000000000000002 &amp;:(eq ?ins-00000000000000000002 ins-00000000000000000002)) (PowerOnOff ?PowerOnOff &amp;:(= ?PowerOnOff 1)) ) (object (is-a LightSensor) (ID ?ins-00000000000000000001 &amp;:(eq ?ins-00000000000000000001 ins-00000000000000000001)) (Quantity ?Quantity &amp;:(&gt;= ?Quantity 10 )&amp;:(&lt;= ?Quantity 20)) ) ) =&gt; (bind ?c (create-rule-context rul-0000000000.000.00001)) (if (eq ?c FALSE) then (return)) (send ?c act-control ins-38D269B0EA1801010311 Brightness 2) ) TestCase: TEST_RULE_AND Pass 在and逻辑下, object slot (ID ?id) id变量名必须不能一样(这里使用did), 否则and条件永远不成立 (defrule rul-0000000000.000.00002 &quot;emergency-alarm-rule&quot; (or (object (is-a EmergencyButton) (ID ?ins-38D269B0EA1886D3E200 &amp;:(eq ?ins-38D269B0EA1886D3E200 ins-38D269B0EA1886D3E200)) (PowerOnOff ?PowerOnOff &amp;:(= ?PowerOnOff 1)) ) (object (is-a SmogAlarm) (ID ?ins-00124B00146D743D00 &amp;:(eq ?ins-00124B00146D743D00 ins-00124B00146D743D00)) (PowerOnOff ?PowerOnOff &amp;:(= ?PowerOnOff 1)) ) ) =&gt; (bind ?c (create-rule-context rul-0000000000.000.00002)) (if (eq ?c FALSE) then (return)) (send ?c act-notify n-714636915 &quot;Your house is dangerous!&quot; &quot;Warning&quot;) ) TestCase: TEST_RULE_OR Pass LHS.Condition.SlotPoint带有的&amp;和|\"规则测试 RHS触发的Action中设备如果不在线(poweroff), 那么需要在设备上线后重新刷新相关规则(条件重新判断) TestCase: TEST_RULE_INS_ONLINE_LATER Pass RHS触发的Action中设备的最终状态,需要按一定step,逐步达到该效果. TestCase: TEST_RULE_STEP_CONTROL Pass 用户只是要最终状态, 至于如何达到这个状态(begin, step)用户其实不需要关注, 所以这个功能暂时没有实际意义","tags":[{"name":"IOT","slug":"IOT","permalink":"https://qrsforever.github.io/tags/IOT/"},{"name":"DrawIt","slug":"DrawIt","permalink":"https://qrsforever.github.io/tags/DrawIt/"}]},{"title":"Log-Pool","date":"2018-05-31T05:30:25.000Z","path":"2018/05/31/Design/C++/Log-Pool/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 框架图 0.1 框架图 +-------------------+ +----------------+ | RingBuffer | | MessageHandler | | DataSink | ----&gt;|-----------------------| |-------------------| |----------------| / | mBufHead | | mMessageQueue | | mRingBuffer |-------/ | mBufLength | | mMessageHandler | | m_dataSize | mRingBuffer |-----------------------| |-------------------| |----------------| | get[Write/Read]Head | | handleMessage | | onDataArrive | | submit[Write/Read] | +-------------------+ +----------------+ +-----------------------+ △ △ ^ | | | +-----------+-----------+ +-------------------------------------------------------------------------------+ | +------------+ | | | | | +-----------------+ | | | +-------&gt; | LogPool | v | | | |-----------------| mFilterHead +-----------+ | | | | mFilterHead |◇ --------------------------------&gt;| LogFilter | | | | |-----------------| |-----------| | | | | attachFilter | | m_next |◇ ----+ | | | detachFilter | |-----------| m_next | | | | | pushBlock | | | | onDataArrive | +-----------+ | | | receiveData | △ △ △ | | | | | | | | | | handleMessage | | | | | | +-----------------+ +----------------------+ | +-----------------------+ | | | | | | | | | | | | +-----------+ +-----------------+ +----------------+ +-----------------+ | | | LogThread | | ConsoleFilter | | FileFilter | | NetworkFilter | | | |-----------| |-----------------| |----------------| |-----------------| | | | | | | | | | | | | Create |-----------| | pushBlock | | pushBlock | | pushBlock | | +---------| run | +-----------------+ +----------------+ +-----------------+ | +-----------+ | | | | | | | ▽ | +----------------------+ +---------------+ | | MessageLooper | | Logger | | |----------------------| |---------------| mDataSink | | mMsgQueue | | mDataSink |◇ ------------------------------------------------+ |----------------------| |---------------| | run | | log | +----------------------+ +---------------+","tags":[{"name":"C++","slug":"C","permalink":"https://qrsforever.github.io/tags/C/"}]},{"title":"Message-Handler","date":"2018-05-31T05:30:25.000Z","path":"2018/05/31/Design/C++/Message-Handler/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 框架图 0.1 框架图 +--------------------------------------------------------------------------------------------------+ | | | | | +-----------------+ | | | Message | | | --&gt;|-----------------| | | +----------------+ / | what | | | | MessageQueue | / | arg[1|2|3] | target | | -----&gt;|----------------| / | target |◇ ------+ | / | mMessages |-------/ |-----------------| | / |----------------| mMessage | obtain | | / | enqueueMessage | | recycle | v / | removeMessage | | next | +--------------------+ / | nextMessage | +-----------------+ | MessageHandler | / +----------------+ |--------------------| mMessageQueue / | mMessageQueue |---------------/ | mMessageHandler |◆ -----------------+ |--------------------| mMessageHandler | | dispatchMessage | | +------------+ | sendMessage[Delay] | | +-----▷ | Thread | | handleMessage | | | |------------| +--------------------+ | | | PID | △ | | |------------| | | | | run | | | | +------------+ | v | +-------------------+ +----------------------+ | RuleEngineHandler | | MessageHandlerThread | |-------------------| |----------------------| | handleMessage | | mMessageQueue | +--------------------------------------+ +-------------------+ |----------------------| |while(true) | | run |-----&gt;| msg = mMessageQueue-&gt;nextMessage() | +----------------------+ | msg-&gt;target-&gt;dispatchMessage() | +--------------------------------------+","tags":[{"name":"C++","slug":"C","permalink":"https://qrsforever.github.io/tags/C/"}]},{"title":"(原创)IOT之规则引擎","date":"2018-05-27T13:04:19.000Z","path":"2018/05/27/Note/IOT/Rule-Engine-Design/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Design Framework Class Message Log Rule Engine Driver Develop Module Tasks Module Sample TODO Test Supported 1 Design 1.1 Framework v0.0.1 ╔═════════════════╦════════════════════════════════════════╗ ******* | ║ ║ ║ *** Cloud *** | ║ ║ Log / MQ / Json / DataChannel / Time ║ ******* | Rule ║ ║ ║ | | --------&gt; ║ Rules ╠════════════════════════════════════════╣ | | ║ Assemble ║ ║ +-------&gt; | ║ ║ Rule Engine Driver ║ json rule | ║ ║ ║ | ║ ║ ║ | ╠════════════╦════╩══════╦═╦═══════════════════════════════╣ +-----------+ ║ ║ ║ ║ ║ | | ║ Global ║ Devices ║ ║ Clips C++ Interface ║ | convert | ║ ║ ║ ║ ║ | | ╠═══════════CLP══════════╣ ╠═══════════════════════════════╣ +-----------+ ║ ║ ║ ║ ║ 1.json rule parse ║ Rules ║ Utils ║ ║ Clips Core ║ 2.map profile/alias ║ ║ ║ ║ ║ ╚════════════╩═══════════╩═╩═══════════════════════════════╝ 说明: 云端下发的json规则, 需要转换成Rule对象(这个转换不属于规则引擎模块, 只提供Rule类头文件), 传递给rule translate模块. 云端下发的json规则本地化存储不属于规则引擎模块负责, 但传给rule translate模块翻译后的clip规则文件, 规则引擎模块负责存储该文件. 触发规则引擎的事件(属性变化等)需要胡老师提供注册回调的API 规则引擎触发的动作(改变属性等)需要胡老师提供相关调用的API (同步异步) 1.2 Class 1.2.1 Message v0.0.1 +--------------------------------------------------------------------------------------------------+ | | | | | +-----------------+ | | | Message | | | --&gt;|-----------------| | | +----------------+ / | what | | | | MessageQueue | / | arg[1|2|3] | target | | -----&gt;|----------------| / | target |◇ ------+ | / | mMessages |-------/ |-----------------| | / |----------------| mMessage | obtain | | / | enqueueMessage | | recycle | v / | removeMessage | | next | +--------------------+ / | nextMessage | +-----------------+ | MessageHandler | / +----------------+ |--------------------| mMessageQueue / | mMessageQueue |---------------/ | mMessageHandler |◆ -----------------+ |--------------------| mMessageHandler | | dispatchMessage | | +------------+ | sendMessage[Delay] | | +-----▷ | Thread | | handleMessage | | | |------------| +--------------------+ | | | PID | △ | | |------------| | | | | run | | | | +------------+ | v | +-------------------+ +----------------------+ | RuleEngineHandler | | MessageHandlerThread | |-------------------| |----------------------| | handleMessage | | mMessageQueue | +--------------------------------------+ +-------------------+ |----------------------| |while(true) | | run |-----&gt;| msg = mMessageQueue-&gt;nextMessage() | +----------------------+ | msg-&gt;target-&gt;dispatchMessage() | △ +--------------------------------------+ +-------------------+ | | RuleEngineThread | | |-------------------|-------------------------+ | | |-------------------| | run | +-------------------+ 说明: 支持延时消息, 可以间接实现Timer 所有与RuleEgineDriver交互的事件尽可能使用消息驱动, 比如: PropertyEvent, RuleEvent, TimerEvent, SystemEvent what arg1 arg2 obj comment PropertyEvent REPORT undef undef 属性上报事件 ERROR undef undef 属性错误事件 RuleEvent ADD undef undef 规则添加事件 UPDATE undef undef 规则更新事件 TimerEvent undef undef undef 目前只用来做定时器 SystemEvent undef undef undef 系统消息 RuleEngine需要单独的线程处理事件, 任何Dispatch出去的消息执行过程不得有阻塞 1.2.2 Log v0.0.1 +-----------------------+ +-------------------+ +----------------+ | RingBuffer | | MessageHandler | | DataSink | ----&gt;|-----------------------| |-------------------| |----------------| / | mBufHead | | mMessageQueue | | mRingBuffer |-------/ | mBufLength | | mMessageHandler | | m_dataSize | mRingBuffer |-----------------------| |-------------------| |----------------| | get[Write/Read]Head | | handleMessage | | onDataArrive | | submit[Write/Read] | +-------------------+ +----------------+ +-----------------------+ △ △ ^ | | | +-----------+-----------+ +-------------------------------------------------------------------------------+ | +------------+ | | | | | +-----------------+ | | | +-------&gt; | LogPool | v | | | |-----------------| mFilterHead +-----------+ | | | | mFilterHead |◇ --------------------------------&gt;| LogFilter | | | | |-----------------| |-----------| | | | | attachFilter | | m_next |◇ ----+ | | | detachFilter | |-----------| m_next | | | | | pushBlock | | | | onDataArrive | +-----------+ | | | receiveData | △ △ △ | | | | | | | | | | handleMessage | | | | | | +-----------------+ +----------------------+ | +-----------------------+ | | | | | | | | | | | | +-----------+ +-----------------+ +----------------+ +-----------------+ | | | LogThread | | ConsoleFilter | | FileFilter | | NetworkFilter | | | |-----------| |-----------------| |----------------| |-----------------| | | | | | | | | | | | | Create |-----------| | pushBlock | | pushBlock | | pushBlock | | +---------| run | +-----------------+ +----------------+ +-----------------+ | +-----------+ | | | | | | | ▽ | +----------------------+ +---------------+ | | MessageLooper | | Logger | | |----------------------| |---------------| mDataSink | | mMsgQueue | | mDataSink |◇ ------------------------------------------------+ |----------------------| |---------------| | run | | log | +----------------------+ +---------------+ 说明: 1. 日志采用循环Buffer输入输出, 在独立的日志线程处理buffer中日志 2. 日志可以实现多个后端输出如 Console/File/Network等 1.2.3 Rule Engine Driver v0.0.1 +--------------+ +---------------+ | DeviceShadow | | PropertySlot | |--------------| +----&gt;|---------------| | mClsName | | | mName | | mSlots |◇ ---+ | mType | |--------------| mSlots |---------------| | | | | +--------------+ +---------------+ ^ +----------------------+ | -----&gt;| RuleEngineHandler | | / |----------------------| | / /--◇ | mDriver | | +-----------------------+ / / |----------------------| | | RuleEngineDriver | / / | handleMessage | | 1:n |-----------------------| / / | | +--------◇ | mShadows | mHandler/ / | handleRuleEvent | mShadows | mHandler |◇ ------/ / | handlePropertyEvent | | mClips |&lt;---------/ | handleTimerEvent | |-----------------------| mDriver +----------------------+ | [setup/start]Clips | | | | | | | | doPropertyEvent | -------+ +------\\ | doTimerEvent | / \\ | doRuleEvent | / \\ +-----------------------+ / \\ +---------------------+ +----------------------+ | | | | |DeviceManagerWrapper | | CloudRuleCovert | | | | | +---------------------+ +----------------------+ 说明: 2 Develop 2.1 Module Tasks Common Modules: Message Queue and Message Handle, Log, Timer C++ Clips Interface Rule Engine Manage CLP files: Global, Devices, Utils, Rules Rules Translate 2.2 Module Sample 3 TODO 3.1 Test Supported Items Support Sample math: =,!= yes not impl math: +,-,*,/ yes not impl math: &gt;,&lt; yes not impl logic: and,or yes not impl timer no not impl update trigger yes not impl state trigger no not impl","tags":[{"name":"IOT","slug":"IOT","permalink":"https://qrsforever.github.io/tags/IOT/"},{"name":"DrawIt","slug":"DrawIt","permalink":"https://qrsforever.github.io/tags/DrawIt/"}]},{"title":"(原创)Iotivity之SmartHome","date":"2018-05-16T06:09:38.000Z","path":"2018/05/16/Note/IOT/Iotivity-SmartHome/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Discovery Payload Discovery UML RemoteResource UML 1 Discovery Payload device --- \\ v /oic/res +------------------------------------------+ +--------+ +--------------------+ | OCDiscoveryPayload | +--&gt; |oic.wk.d| --&gt; |oic.d.airconditioner| |------------------------------------------| | +--------+ +--------------------+ |sid : f9f0a646-fd3d-35c7-d4a7-68e3afe9f64e| | |name: null | type: null | iface: null | | | resources |(multiple devices | types |------------------------------------------| not support) | | next | --&gt; null | ifaces +---------------+ +--------+ +------------------------------------------+ | +-----&gt; |oic.if.baseline|---&gt;|oic.if.r| ◇ | | +---------------+ +--------+ | resources | | | | | v ◇ ◇ +---------------------+ +---------------------+ +---------------------+ +---------------------+ | OCResourcePayload | | OCResourcePayload | | OCResourcePayload | | OCResourcePayload | |---------------------| |---------------------| |---------------------| |---------------------| | uri: /oic/sec/doxm | | uri: /oic/sec/pstat | | uri: /oic/d | | uri: /oic/p | | types/ifaces | | types/ifaces | | types/ifaces | | types/ifaces | |---------------------| |---------------------| |---------------------| |---------------------| | next | --&gt; | next | --&gt; | next | --&gt; | next | +---------------------+ +---------------------+ +---------------------+ +---------------------+ | | v +---------------------+ +---------------------+ +---------------------+ | OCResourcePayload | | OCResourcePayload | | OCResourcePayload | |---------------------| |---------------------| |---------------------| | uri:/temperature | | uri: /binaryswitch | |uri:/oic/introspectio| | types/ifaces | | types/ifaces | | types/ifaces | |---------------------| |---------------------| |---------------------| | next | &lt;-- | next | &lt;-- | next | +---------------------+ +---------------------+ +---------------------+ ◇ ◇ ◇ ◇ | | | | +--------------------+ | | | | +--------------------+ | oic.r.temperature | &lt;----+ | | +----&gt; |oic.r.switch.binary | +--------------------+ | | +--------------------+ | | +----------------+ | | +----------------+ |oic.if.baseline | &lt;----+ +---&gt; |oic.if.baseline | +----------------+ +----------------+ 1. foreach(uri:device) ---&gt; &quot;/oic/d&quot; ---&gt; airconditioner 2. foreach(uri:device) ---&gt; &quot;/binaryswitch&quot; &amp; &quot;/temperature&quot; --&gt; BinarySwitch &amp; Temperature +----------------+ +-------------------+ +-----------------+ | OCRepPayload | ------------&gt; | PayloadConverter | ------------&gt; | PropertyBundle | | | &lt;------------ | | &lt;------------ | | +----------------+ +-------------------+ +-----------------+ 2 Discovery UML (app) ((6)) +------------------------+ | MyDiscoveryDelegate | +------------------------+ | | (abtract) ▽ +-------------------------+ +---------------------+ | DeviceDiscoveryDelegate |&lt;--+ | OCDiscoveryPayload | +---------------+ +-----------------------+ |-------------------------| | |---------------------| | ns:SH_Impl | | DiscoveryQuery | | onFindRemoteDevice | | | base | |---------------| |-----------------------| +-------------------------+ | | | | g_config | | m_deviceType | △ | | sid/name/type/iface | |---------------| | m_hostAddress |\\ | | | resources | | start() | |-----------------------| \\ | | |---------------------| | stop() | | [get/set]DeviceType | \\ | m_delegate | | next | | process() | +-----------------------+ \\ +-------------------+ | +---------------------+ +---------------+ \\ | DeviceDiscovery | | ◇ -----+ |-------------------| | | resources static queryParam | | m_delegate | | | +---------------------- | |-------------------| | v |ClientCallbackWrapper: OCDoRequest(&quot;/oic/res&quot;) v | setDelegate | | +------------------------+ | \\ /----------------------------- findRemoteDevices |((1)) | | OCResourcePayload | |---\\ DeviceDiscoveryCallback: / +-------------------+ | |------------------------| | | v single instance | | uri/types/Interfaces | | | findRemoteDevices[withQuery] &lt;----+ | | anchor/port/secure/rel | | | ((2)) \\ | +----------------+ | |------------------------| | \\ \\ | | OCCallbackData | OCStack | | next | |---\\ RemoteResourceCallback ------------+ | |----------------| | +------------------------+ | | | | | context | | | | on[Get/Set/Observe] &lt;-------+-----+------- cb | | | | [[6]] \\ | | cd | | | \\ \\ | +----------------+ |callback from ocstack: |---\\ +--------------------------+ | | ◇ | | | CallbackHelper | | | | context | 1. discovery for all resoures | |--------------------------| | | | | 2. resources for get/set/post | |[set/destroy]RemoteDevice | | | v | | +--------------------------+ | | +-----------------------+ | | | | | ClientCallbackContext | | \\ | | |-----------------------| delegate | delegate \\ | | | delegate ----------------------+--------------+ | | | query | real callback | | | |-----------------------|after doing some work | | | | getDelegate | | | | | getQuery | | | | +-----------------------+ v | | talk with ocstack using callback +------------------------------+ onGet &lt;--- context.delegate | | | SHBaseRemoteResourceDelegate | | | |------------------------------| onSet &lt;--- context.delegate | l| ((3)) [[7]] | on[Get/Set/Observe] | | o| SHBaseRemoteDeviceBuilder +------------------------------+ onObserve &lt;--- context.delegate | o| | | p| | | ||--&gt; createSHBaseRemoteDevice | || uri : &quot;/oic/d&quot; | || type: &quot;oic.d.airconditioner&quot; || || CallbackHelper || | || | ||--&gt; setRemoteDevice || | ((4)) || | SHBaseRemoteResourceBuilder || | | || | | || |--&gt; createSHBaseRemoteResource || | uri : &quot;/binaryswitch&quot; | uri : &quot;/temperature&quot; || | type: &quot;oic.r.switch.binary&quot; | type: &quot;oic.r.temperature&quot; || | || || ((5)) ||--&gt; delegate-&gt;onFindRemoteDevice(remoteDevice) || 3 RemoteResource UML (base: only for on[Get/Set/Observe) +------------------------------+ +--------&gt; | SHBaseRemoteResourceDelegate | [[5]] | |------------------------------| ◁ ----------------------------------------------+ +-&gt; get | | on[Get/Set/Observe] | | doRequest | | +------------------------------+ | +---------| | [[7]] △ | | OCStack | | | | | +-&gt; post | m_delegate | | | | (ocstack cb proxy) | +---------------------------+ | | ◇ | | SHBaseRemoteResource | | | +-------------------------------+ m_Impl | |---------------------------| | | | SHBaseRemoteResource_Impl | &lt;---------------+-------------◇ | m_Impl | | | |-------------------------------| | |---------------------------| | | | uri/types/ifaces/devAdrr | | | setDelegate | | | | m_observeHandle/m_endpoints | | | [set/get]PropertyBundle | [[4]] | | | m_delegate | | | [start/stop]Observe | | | |-------------------------------| ---------+-------------&gt; | getter* setter* | | | | hasResourceType | / | +---------------------------+ | | | startObserve | / | △ △ | | | setDelegate | / | | | | +------[set/get]PropertyBundle | / | +---------------+ +-------------+ | | getter* | / | | | | +-------------------------------+ / | | | | / +---------------------------------------+ +--------------------------------------+ m_resources 0:n / | RemoteBinarySwitchResource | | RemoteTemperatureResource | +-------------------/ |---------------------------------------| |--------------------------------------| | | m_delegate (app api proxy) | | m_delegate | ◇ |---------------------------------------| |--------------------------------------| +------------------------------+ | setRemoteBinarySwitchResourceDelegate | [[2]] | setRemoteTemperatureResourceDelegate | | SHBaseRemoteDevice_Impl | | on/off [[3]] | | [set/get]Temperature | |------------------------------| | getState | | setTemperatureWithUnits | | m_resources | | [[8]] on[Get/Set/Observe] | | on[Get/Set/Observe] | | m_deviceTypes | +---------------------------------------+ +--------------------------------------+ | m_deviceId | ◇ ^ ^ ◇ |------------------------------| | m_delegate | | m_delegate | | [set/get][DeviceId/Types] | | | | | | hasDeviceType | | +------+ +-----+ | | getResourceWithResourceType | (abstract) v | | v (abstract) | getResourceWithResourceUri | +------------------------------------+ | | +-----------------------------------+ | getAllResources | | RemoteBinarySwitchResourceDelegate | | | | RemoteTemperatureResourceDelegate | | addResource (check type) | |------------------------------------| | | |-----------------------------------| +------------------------------+ | [[9]] onTurn[On/Off] | | | | on[Get/Set]Temperature | ^ | onGetState | | | +-----------------------------------+ | +------------------------------------+ | | △ | △ | | | | m_Impl | | | | ◇ | | | | +------------------------------+ (app) | [[10]] | | | (app) | SHBaseRemoteDevice | +---------------------------------------+ | | +-----------------------------------+ |------------------------------| | | | | | | | m_Impl | | MyRemoteBinarySwitchResourceDelegate | | | |MyRemoteTemperatureResourceDelegate| |------------------------------| | | | | | | | getDevice[Id/Types] | +---------------------------------------+ | | +-----------------------------------+ | getResourceWithResourceType | | | | getResourceWithResourceUri | | | +------------------------------+ | | △ | | | | | | | | on()--&gt;getPropertyBundle--&gt; DoRequest [[1]] | | | +------------------------------+ | |off()--&gt;setPropertyBundle--&gt; DoRequest | RemoteAirConditionerDevice | | | |------------------------------| m_remoteBinarySwitch | | | m_remoteBinarySwitch |◇ ------------------------------------------------+ | | m_remoteTemperature |◇ -----------------------------------------------------+ +------------------------------+ m_remoteTemperature","tags":[{"name":"IOT","slug":"IOT","permalink":"https://qrsforever.github.io/tags/IOT/"},{"name":"DrawIt","slug":"DrawIt","permalink":"https://qrsforever.github.io/tags/DrawIt/"}]},{"title":"(原创)Iotivity之Payload","date":"2018-05-10T04:41:16.000Z","path":"2018/05/10/Note/IOT/Iotivity-Payload/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Payload类图 1 Payload类图 +-----------------+ +-------------------+ |OCSecurityPayload|----------------------+ / | OCPresencePayload | |-----------------| | / |-------------------| | base | ▽ / | base | | | +-------------+ / | | | secureData/size | | OCPayload | ◁ ----------- | sequenceNumber | +-----------------+ |-------------| | maxAge/trigger | | type | | resourceType | +-------------+ +-------------------+ △ △ | | /--------+ | (inner) / | (outter) +---------------------+ / | +----------------------+ | OCDiscoveryPayload |/ +---------- | OCRepPayload | sid |---------------------| |----------------------| | | base | | base | deviceid | | | | | sid/name/type/iface | | uri/types/interfaces | +----◇ | resources | | values |◇ -----+ | |---------------------| |----------------------| | | | next | | next | | | +---------------------+ +----------------------+ | | | v OCRepPayloadCreate | +------------------------+ OCRepPayloadAppend v | OCResourcePayload | OCRepPayloadSetPropXXX +--------+ +-------------------+ |------------------------| | NULL | | OCRepPayloadValue | | uri/types/Interfaces | | INT | |-------------------| | anchor/port/secure/rel | | DOUBLE | | name | |------------------------| OCDiscoveryPayloadCreate | BOOL |&lt;---| propType | | next | OCDiscoveryPayloadAddNewResource | STRING | | value?(union) | +----------|-------------+ OCDiscoveryPayloadAddResource | OJBECT | |-------------------| | | ARRAY | | next | | +--------+ +-------|-----------+ link all filter ok source | | for collection using.","tags":[{"name":"IOT","slug":"IOT","permalink":"https://qrsforever.github.io/tags/IOT/"},{"name":"DrawIt","slug":"DrawIt","permalink":"https://qrsforever.github.io/tags/DrawIt/"}]},{"title":"(原创)Iotivity之Resource-Encapsulation","date":"2018-05-08T04:58:38.000Z","path":"2018/05/08/Note/IOT/Iotivity-RE/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Server端类图 Client端类图 Sample实例流程图 1 Server端类图 +----------------------+ | RCSRepresentation | |----------------------| | uri/types/ifaces | +-------------------------◇ | m_attributes | | | m_children | | |----------------------| | | | | | fromOCRepresentation | ------------------------\\ | | toOCRepresentation | \\ | | Getter/Setter | \\ | +----------------------+ \\ | \\ | \\ | \\ | \\ | \\ | +---------------------------+ +--------------------------+ \\ v | ResourceAttributesBuilder | | OCRepresentationBuilder | \\ +----------------------+ |---------------------------| |--------------------------| +--------------------+ | RCSResourceAttributes|&lt;----| m_target | | m_target |----&gt;|OC::OCRepresentation| +----------------------+ |---------------------------| |--------------------------| +--------------------+ | m_values | | extract() | | extract() | ^ +----------------------+ +---------------------------+ +--------------------------+ | | visit() | \\ / | +----------------------+ \\ / |m_ocRep ^ \\ / ◇ | +-------------------------------+ +--------------------+ | | ResourceAttributesConverter | | RequestHandle | | |-------------------------------| |--------------------| | | fromOCRepresentation | | m_errorCode | false | | toOCRepresentation | --&gt; | m_customRep |----+ | +-------------------------------+ / | m_ocRep | | | / |--------------------| | | +-----------------+ / | getRepresentation | | | | RCSGetResponse | / +--------------------+ | | |-----------------| m_handler | △ | | | m_handler |◇ -----------------------------+ | | | |-----------------| | | | | defaultAction |----+ +-----------------+ +-----------------------+ | | +------- | create | | | RCSSetResponse | | SetRequestHandler | | | | +-----------------+ | |-----------------| |-----------------------| | | | | | m_handler |◇ ------&gt;| | | | v | |-----------------| | applyAcceptanceMethod | | | create(attrs) ---&gt; m_customRep = true | | defaultAction |-----+ +-----------------------+ | | | | create | | | | | +-----------------+ | | +---------------\\ | | | \\ +-----------------------------+------------------------------+ \\ +------------------+ | \\ | RCSRequest | | +------------------------+ \\ +----------------------------+ |------------------| | | Builder | \\ | RCSResourceObject | &lt;------◇ | m_resourceObject | | |------------------------| \\ |----------------------------| | m_ocRequest | | | m_uri | \\ | | +------------------+ | | m_types | \\ | m_resourceHandle | ◇ | | m_interfaces | ----◇ | m_resourceAttributes | | m_ocRequest | | m_defaultInterface | OC_SECURE | m_interfaceHandlers | v | | m_properties |--&gt; OC_OBSERVABLE | m_getRequestHandler | +---------------------------+ | | m_resourceAttributes | OC_DISCOVERABLE | m_setRequestHandler | | OC::OCResourceRequest | | |------------------------| |----------------------------| |---------------------------| | | build() | | set[Get/Set]RequestHandler | | messageID,representation | | +------------------------+ | [get/set]Attribute | | devAddr, query, options | | | server | notify | | payload | | +-&gt; server = RCSResourceObject()-----------&gt; | sendResponse | | resourceHandle | | | | entityHandler (*) -------+ | requestHandle | | +-&gt; registerResource() | handleRequest | | |---------------------------| | | | handleObserve | +--------getRequestHandlerFlag-------+ | +-&gt; bindInterfaceToResource() +----------------------------+ | getRequestHandle | | | | +---------------------------+ | | +-&gt; bindTypeToResource() | | | +--------------------------------+-----+ | +-&gt; server-&gt;init() | RequestFlag ObserverFlag | | | | | v v | 1:n +--------------------------+ handleRequest handleObserve | g_defaultHandlers -------&gt;| InterfaceHandler | | | | |--------------------------| &quot;get&quot; | &quot;post&quot; | | | m_getBuilder | -----------+------------- | | | m_setBuilder | | | | | |--------------------------| v v | | | getGetResponseBuilder | handleRequestGet handleRequestSet | | defaultAction | getSetResponseBuilder | | | | | +--------------------------+ v v | | m_customRep=false m_getRequestHandler m_setRequestHandler | +---------+----------------------------------------------------\\ | | | | &quot;oic.if.baseline&quot; &quot;oic.if.a&quot; &quot;oic.if.s&quot; &quot;oic.if.b&quot; \\ v v | | | | | | \\ RCSGetResponse RCSSetResponse | | v | v | \\ | | | |buildGetBaselineResponse | buildGetRequestResponse | \\ +----------+------------+ | |buildSetBaselineResponse | NullPtr | \\ | | | v v \\ v | | (attrs) buildGetRequestResponse buildGetBatchResponse \\ sendResponse | | buildSetRequestResponse buildSetBaselineResponse \\ | +------------------------------------------------------------------------------------------------------------------------------+ 2 Client端类图 &quot;Caching data [attributes] of remote resource&quot; single instance +-----------------------+ +------------------------------&gt; | ResourceCacheManager | | 1:n |-----------------------| | +-----◇ | s_cacheDataList | 1:n &quot;Monitor the state of remote resource&quot; | | | m_observeCacheList |◇ ------+ +----------------------+ | +-----◇ | cacheIDmap | | | ResourceBroker |--------------+ | | | observeCacheIDmap |◇ ------+ |----------------------| | | | |-----------------------| | | s_presenceList |◇ --+ | | (cache attrs) | | requestResourceCache | | | s_brokerIDMap | | | | RCSResourceAttributes | | updateResourceCache | | |----------------------| |1:n | | ^ | | getCachedData | | | hostResource [[2]] | | | | | | | findDataCache | | | findResourcePresence | | | (cb-2) | | | +-----------------------+ | +----------------------+ | | +--------+ | attributes | | | | | |brokerId| | ◇ v v +----------+ | |brokerCB| | +--------------------------+ +--------------------+ | | +--------+ | | DataCache | | ObserveCache | +------------v---------------+ | ^ | |--------------------------| |--------------------| | ResourcePresence | | | | | sResource |◇ ---+ +---◇ | m_wpResource | |----------------------------| | |1:n | | attributes | | | | m_attributes | | requesterList |◇ --------+ | | subscriberList | | | | m_reportCB | | primitiveResource |◇ ----------------------\\ |--------------------------| | | |--------------------| | expiryTimer (5s) | | | \\ | [add/delete]Subscriber | | | | [start/stop]Cache | |----------------------------| | | | | getCachedData | | | | getCachedData | +----| registerDevicePresence | | | | | on[Observe/Get/Timeout] | | | | onObserve | | |[add/remove]BrokerRequester | | | | | notifyObservers | | | +--------------------+ | | [get/timeOut/polling]CB | | | | +--------------------------+ | | only observe | | executeAllBrokerCB (cb-2) | | | | | | | +----------------------------+ | | | | | | | | | | | | | | +-----------------------------------+ +-----------------------------------+---+---+ | | | RCSRemoteResourceObject | | | | | | |-----------------------------------| | | | | | | m_primitiveResource |◇ --------------------------------+ | | | | | | m_cacheId | | | | | | | | m_brokerId | | | | | | | |-----------------------------------| | | | | | | | [from/to]OCResource |-----------+ v v v v | | [[1]] | start[Monitoring/Caching] | | +--------------------------------+ | | | [get/set]RemoteAttributes | | | PrimitiveResource | | | | get[Address/Uri/Types/Interfaces]| | |--------------------------------| | | +-----------------------------------+ | | create |---+ \\ | ^ | [[3]]| request[Get/Set/Put][With] | | \\ |1:n ? one to one ? |cb-1 from|remote | get[Uri/Host/Types/Interfaces] | | \\ |resourcePresenceList | +----------------------+ | requestObserve | | \\ ◇ | | OC::OCResource | +--------------------------------+ | +------------------------------+ | |----------------------| △ | | DevicePresence | | | m_clientWrapper | | | |------------------------------| | |----------------------| | | | resourcePresenceList | | | uri/types/Interfaces | +-----------------------+ | | address | | |devAddr/useHostString | | PrimitiveResourceImpl | &lt;----+ | presenceSubscriber |◇ ---------- | | |-----------------------| +--------------------------------+ | presenceTimer (15s) | | \\ | serverHeaderOptions | &lt;-------◇ | m_baseResource | -------------------------------+ | PrimitiveResource | |------------------------------| | \\ | observeHandle | +-----------------------+ PrimitiveResource | |--------------------------------| | addPresenceResource | | \\ | children/endpoints | -------------------------------| | create |---+ | [subscribe/timeOut]CB | | \\ | headerOptions | create |---+ | request[Get/Set/Put][With] | | | [add/remove]PresenceResource | | \\ | | request[Get/Set/Put][With] | | | get[Uri/Host/Types/Interfaces] | | +------------------------------+ | \\ |----------------------| get[Uri/Host/Types/Interfaces] | | | requestObserve | | | &quot;/oic/ad&quot; | | get/put/post/observe | requestObserve | | +--------------------------------+ | | | | subscribe/publish | -------------------------------+ | △ | | | +----------------------+ △ | | | | v | | | | | +------------------------+ +-----------------------+ | | | PresenceSubscriber | +-----------------------+ | | PrimitiveResourceImpl | &lt;----+ | |------------------------| | PrimitiveResourceImpl | &lt;----+ |-----------------------| | | m_handle | |-----------------------| ------◇ | m_baseResource | | |------------------------| -◇ | m_baseResource | +-----------------------+ | | [un]subscribePresence | +-----------------------+ | +------------------------+ +-------------+ | | +------------------+ | +---------------------------+ +--------------+ --&gt; | RCSAddressDetail | | | RCSDiscoveryManager | | RCSAddress | / |------------------| | | ------------------------- | |--------------| / | m_addr | | | | | m_detail |◇ ---------/ |------------------| | | discoverResource ((1)) | |--------------| | getAddress | | | discoverResourceByType | | multicast | +------------------+ | | discoverResourceByTypes | | unicast | | +---------------------------+ +--------------+ | | ^ +-------------------------+ | | | | DiscoveryRequestInfo | | | | m_address |-------------------------| | +--------------------------------+ +------------------◇ | m_address | | | RCSDiscoveryManagerImpl | | m_relativeUri | | |--------------------------------| 1:n | m_resourceTypes | | | m_discoveryMap |◇ ------------------------------&gt;| m_discoverCb ((4)) | &lt;---+ | | m_timer | m_discoveryMap | m_knownResourceIds | | | |--------------------------------| | |-------------------------| | | | startDiscovery ((2)) |&lt;---+ | +---| discover | | ((4)) +---| onResourceFound (call cb-1) | |loop | | | addKnownResource | | | | onPolling(60s) |----+ | | +-------------------------+ | | | onPresence | | (erase) | | | | cancel |-------------+ v ((3)) | | | subscribePresenceWithMulticast | (id) OC::OCPlatform::findResource | | +--------------------------------+ | | OC::OCResource | +------------------------------------------------------------------------------------------------------+ std::function DiscoverCallback 3 Sample实例流程图 SampleResourceServer RCSRemoteResourceObject SampleResourceClient | | ((1)) | |--&gt; startPresence |(param:rro) discoverResource &lt;--| 1 | | | |--&gt; initServer | discoverResourceByType | | (server use) cb-1 v | | | g_resource (RCSResourceObject) onResourceDiscovered | | | | ((4)) | ((2)) | | | |--&gt; setAutoNotifyPolicy | startDiscovery &lt;--| | | |--&gt; setSetRequestHandlerPolicy | | | | | | | m_discoveryMap.insert | | | | |--&gt; setAttribute(&quot;Brightness&quot;) | | | | |--&gt; setGetRequestHandler ---------+ | discovery &lt;--| | | |--&gt; setSetRequestHandler ---------+ | ((3)) | | | | | | | findResource &lt;--| | | | | |&quot;/oic/res?rt=oic.r.light&quot; | loop |--&gt; updateAttribute | | | | | |--&gt; rro-&gt;getUri | | g_resource (RCSResourceObject) | | | | | | |--&gt; rro-&gt;getAddress | | |--&gt; getAttributes | | | | | | |--&gt; g_discoveredResources.push_back(rro) | | |--&gt; getAttributeValue | | | | | | (client use) | | g_selectedResource (RCSRemoteResourceObject) | +----------------------------------------+------------+ | | | | | | [[1]] | v v cb-2 startMonitoring &lt;--| 2 requestHandlerForGet requestHandlerForSet onResourceStateChanged | | | | [[4]] | [[2]] | | | | | hostResource &lt;--| | | RCSGetResponse RCSSetResponse | | | | | | | | | initializeResourcePresence | | | | defaultAction | | addBrokerRequester &lt;--| | | +--------------------------------+ | | | | | | | [[3]] | | | | | | requestGet &lt;--| | | +-------------------------------\\ | | | \\ | (polling) | | \\ |--&gt; do nothing | | \\ | | | \\ | | \\ | | v cb-3 [get/set]RemoteAttributes &lt;--| 3 | onRemoteAttributesReceived | | | / | | | | (param) / | request[Get/Set] &lt;--| | | / | | | | / | request[Get/Set]With | | RCSResourceAttributes | | | ^ | | | | | | | ◇ | | RCSRepresentation | | \\ | | (param) \\ [get/set]WithInterface &lt;--| 4 | \\ cb-4 | | | \\ onRemote[Get/Set]Received | | if |--&gt; &quot;interface == test.custom&quot; | &quot;?if=test.custom&quot; | | | | | | | | |--&gt; attr[&quot;blob&quot;] = bin (new attr) | request[Get/Set]With &lt;--| | | | | | | | |--&gt; RCSGetResponse::create(attr) interfaces is empty | | | | | resourceTypes is empty | | | | m_customRep = true -----------------------------&gt; | | | | key : blob | | | | | else|--&gt; &quot;interface != test.custom&quot; | | | | | | | | | | | |--&gt; RCSGetResponse::defaultAction() | | | | g_defaultHandlers | | | | m_customRep = false -----------------------------&gt; | | | | | | &quot;oic.if.baseline&quot; &quot;oic.if.a&quot; &quot;oic.if.s&quot; &quot;oic.if.b&quot; | | | | | | startCachingWithCallback &lt;--|5 (observes) cb-5 | | subscriberList.findSubscriber(reportID) onCacheUpdated | | \\ ^ | | | \\ | | requestResourceCache &lt;--| | +-----------------+ | | | | | | +-------------+ | | | OBSERVE_WITH_POLLING | | | | | Report_Info | | +-&gt; NONE | | UPTODATE (10s) | | | |-------------| | | | | | | | | rf |---+-&gt; UPTODATE | | DataCache.init &lt;--| | | | reportID | | | | | | | | | | repeatTime | | +-&gt; PERIODICTY | | | | | | | timerID | | | | ObserveResource | | | | +-------------+ | | | | | | | | | | onGet onTimeOut | | | | +-------------+ | | | | | | | | | | fun |-------------------+ | | | (15s) | | | | +-------------+ | | | onObserve | | | | (main thread) +-----------------+ | | | | | | | runResourceControl | +---+ | | | | | | | addSubscriber &lt;--| | | | call v v | | |--&gt; updateAttribute |&lt;-- notifyObservers | | | { | (client) | | | RCSResourceObject::LockGuard | foreach: | | \\ notifyAllObservers | subscriberList | | } \\ (server) | | | autoNotify -----------------&gt; | | | DoResponse | | | | | getCachedAttributes &lt;--|6 | | | | | | getCachedData &lt;--| |","tags":[{"name":"IOT","slug":"IOT","permalink":"https://qrsforever.github.io/tags/IOT/"},{"name":"DrawIt","slug":"DrawIt","permalink":"https://qrsforever.github.io/tags/DrawIt/"}]},{"title":"(原创)Iotivity之Colloction流程","date":"2018-04-27T07:02:43.000Z","path":"2018/04/27/Note/IOT/Iotivity-Batch-LinkedList/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 资源Collection类图 Sample流程图 1 资源Collection类图 ((1)) +---------------+ OCBindResourceInterfaceToResource | room | |---------------| /a/room &lt;--| uri | (must first) core.room &lt;--| type | +-----------------------+ | interface |---&gt; |oic.if.baseline| next | | | +-------------------|---+ ((2)) +---------| childresHead | | OCBindResource | | entityHandler |----+ v | |---------------| | +----------------+ | | next | | |oic.if.b | next | | +---------------+ | +------------|---+ | | | v | v +---------------+ | +-----------------+ | fan | | |oic.if.ll | null | |---------------| v +-----------------+ /a/fan &lt;--| uri | roomCB core.fan &lt;--| type | oic.if.baseline &lt;--| interface | | | | childresHead | | entityHandler |---&gt; fanCB |---------------| +---------------+ | next -------------------------&gt; | light | +---------------+ |---------------| /a/light &lt;--| uri | core.light &lt;--| type | oic.if.baseline &lt;--| interface | | | | childresHead | | entityHandler |---&gt; lightCB |---------------| | next | +---------------+ 2 Sample流程图 HandleVirtualResource | ((3)) | OCDoRequest | | uri = &quot;/ioc/res&quot; | &quot;discover&quot; | ----------------------------------------&gt; | ((4)) | all resoures | | &lt;---------------------------------------- | | (if childresHead is not null) | ((5)) ((6)) | cb = discoveryReqCB HandleResourceWithEntityHandler | | | | | | ((6)) (default) OCDoRequest | HandleCollectionResourceDefaultEntityHandler | | | | &quot;/a/room?if=oic.if.b&quot; roomCB != 0 | | &quot;get&quot; | --------------------------------------------&gt; | roomCB == 0 | | &quot;/a/room?if=oic.if.ll&quot; (default) | ---------------------&gt; | | &quot;/a/room?if=oic.if.baseline&quot; ((7)) | | | roomCB &lt;-- | (get) | (get/put/post) | | | ---+----------------------+--- | (room,fan,light) | | | | OCRepPayloadSetPropInt &lt;--- | v v | OCRepPayloadAppend | oic.if.ll oic.if.b | | | oic.if.baseline | | &lt;----- OCDoResponse --- | | | | | ((7)) v ((7)) v | HandleLinkedListInterface HandleBatchInterface | (fan, light) | | | OCLinksPayloadArrayCreate &lt;---- | | | OCRepPayloadSetPropObjectArray | | | | | | | | foreach (child) +-- | &lt;------------------- OCDoResponse -------- | | | | lightCB &lt;-------- | &quot;light&quot; ((8)) | | | | cb = getReqCB | | &lt;------------------- OCDoResponse -----------------------------------| | | | | | | | | fanCB &lt;----------------- | &quot;fan&quot; | | | | | | +-- | &lt;------------------- OCDoResponse ---------------------------| | | | | OCDoRequest HandleResourceWithEntityHandler | | | (see above) | &quot;put&quot; | -------------------------------------------------------&gt; | | | | |","tags":[{"name":"IOT","slug":"IOT","permalink":"https://qrsforever.github.io/tags/IOT/"},{"name":"DrawIt","slug":"DrawIt","permalink":"https://qrsforever.github.io/tags/DrawIt/"}]},{"title":"(原创)Iotivity之Presence&Observe流程图","date":"2018-04-26T03:00:21.000Z","path":"2018/04/26/Note/IOT/Iotivity-Presence-Observe/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Presence流程图 Observe流程图 1 Presence流程图 ========Server===============================SDK===========================================Client============ SERVER ((1)) Platform::start OCInit2 ((2)) &quot;/oic/ad&quot; +------------------+ OCCreateResource --------&gt; | OCResource | ----&gt; |------------------| +-----------------+ / | uri,type,if,uuid | (no active) |PresenceResource | / | attrs,propers |----&gt; OC_OBSERVABLE |-----------------| handle / | actionsetHead | ^ | handle | ----------/ | childresHead | | | presenceTTL | /----- | observerHead | | +-----------------+ / | entityHandler | | / |------------------| | ((3)) observerHead / | next | | startPresence /------------------------------- +------------------+ | / ((4)) | / OCStartPresence | v OC_ACTIVE | +-------------------+ ChangeResouceProperty ---------------------+ (active) | ResourceObserver | TTL=0 |-------------------| &lt;------------ AddObserver | observeId | OCPresenceTrigger | resUri | SendPresenceNotification | see ? &lt;---+-TTL | | +--------+--------+ ocobserve.h | acceptFormat | | | | | | query,token | | v v v | devAddr | | CREATE CHANGE DELETE | lowQosCount (NON)| | | | | | forceHighQos (CON)| | OCCreateResource | OCDeleteResource |-------------------| | +-----------------------------------+ | next | | | OCBindResource (collection) | +-------------------+ Trigger: CREATE | | OCBindResourceTypeToResource | +------------------------------------------------------+ | OCBindResourceInterfaceToResource | | +------------+ +-----------------------------------+ | | OCPresence | | |------------| CLIENT | | TTL | | | timeout[l] | g_cbList [[1]] | | level | | thread2 Platform::start | +------------+ v OCInit2 listeningFunc | ^ +-------------------+ | | | | ClientCB | &quot;/oic/ad&quot; | [[2]] | | |-------------------|\\ /-----------------------+----- subscribePresence | | | requestUri | \\ [[3]] / SubscribeCallback | | | | sequenceNumber | \\ OCDoResource | | | +---| presence, TTL | \\ / +-----------+--------\\ thread2 | | payload, method | \\ / | ---&gt; presenceHandler | | callback (cb-1) | AddClientCB | cb-1 | +-------------------+ ( Don&#39;t Call OCSendRequest ) | | | | loop: | | ((5)) | thread2 | | createResource | --&gt; OCProcess | | ((6)) | | | | OCCreateResource | | | | | | | +----------------------------+ | | | v | | +--------&gt; SendPresenceNotification | | | SendAllObserverNotification | | | | | | | | v | &quot;/oic/ad&quot; ((7)) &quot;/oic/ad&quot; | | | AddServerRequest +-----------------&gt; OCSendResponse -------------------------------&gt; | | | \\ | | | \\ | | | \\ [[4]] ((8)) | | | g_svrRequestTree \\ OCHandleResponse &lt;------------------------------ | | | | +-------------------+ | | | | +----&gt; | OCServerRequest | | HandlePresenceResponse | | | |-------------------| | | | | | resourceUrl,reqID | | client = GetClientCBUsingUri(&quot;/oic/ad&quot;) | | | | reqToken, query | | | | | | payload, method | | ResetPresenceTTL | | | | ehResponseHandler | | | | | +-------------------+ | client-&gt;callback | | | | -------------------------------------------|-------&gt; | [[5]] | | | | thread2 | | | processFunc [[6]] | | | | OCProcessPresence | | | loop: | | | | | check ttl | | | --&gt; OCProcess ( only unicast make sense ) | | | | | | | | | | &quot;/oic/ad&quot; [[7.1]] check timeout[l] | | | | | &lt;---------------- OCSendRequest &lt;---------------------------- | (Unicast) | | | | timeout &quot;/oic/ad&quot; | | | | | ((9)) [[8]] | check level | | | | ----------------&gt; OCHandleRequests | -----------&gt; | | | / | no ticks | [[7.2]] | &quot;/oic/ad&quot; / | STACK_PRESENCE_TIMEOUT | HandleVirtualResource | | Trigger: CHANGE | DeleteClientCB &lt;--------------------- | +-----------------------------------+ STACK_DELETE_TRANSACTION / KEEP 2 Observe流程图 |OC_REST_OBSERVE| &lt;--------- observeResource &lt;--- OC::OCRecource::observe | &lt;------------ | Observers.insert | | onObserve | | cb | | | | | | | loop +----- | | | | | | | | | | | OCDoResponse | | | notifyListOfObservers | ------------------|-------------&gt; | wrapper switch | | | | | ------------------------------&gt; | | | | | +----&gt; | |","tags":[{"name":"IOT","slug":"IOT","permalink":"https://qrsforever.github.io/tags/IOT/"},{"name":"DrawIt","slug":"DrawIt","permalink":"https://qrsforever.github.io/tags/DrawIt/"}]},{"title":"(原创)Iotivity之Client&Server回调流程图","date":"2018-04-25T10:32:50.000Z","path":"2018/04/25/Note/IOT/Iotivity-Client-Server/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} C++层类图 C-S流程图 1 C++层类图 Client ---&gt; OC::OCResource ---&gt; InProcClientWrapper ---&gt; CSDK | | OC::OCRepresentation | | Server ---&gt; OC::OCResourceRequest ---&gt; OC::OCResourceResponse ---&gt; InProcServerWrapper ---&gt; CSDK +-------------------+ +---&gt;|OCResourceResponse | | |-------------------| +-------------------+ | | newResourceUri | | | | | interface | v | | | headerOptions | representation +--------------------+ | | | representation |◇ --------------&gt; | OCRepresentation | | | | requestHandle | (report) |--------------------| | | | resourceHandle | | host/uri/types/ifs | 1:n | | |-------------------| | m_children |◇ -----+ | | getX/setX | |--------------------| | +-------------------+ | [get/set]Value (*)| | | | | | setter/getter | | +--------------------+ | | | | | | get/put/post | +---------------------------------------+ +--------------------+ | | representation | | | (update) | | ◇ | | +---------------------------+ +----------------------+ | | OC::OCResourceRequest | | OC::OCResource | | |---------------------------| +----------------------+ |----------------------| +----------------------+ | | messageID,representation | | InProcServerWrapper | | m_clientWrapper |◇ ---&gt;| InProcClientWrapper | | | devAddr, query, options | |----------------------| |----------------------| |----------------------+ | | payload | | start/stop | | uri/types/Interfaces | | start/stop | | | resourceHandle | | registerResource | |devAddr/useHostString | | ListenForResource | | | requestHandle | | | | | | | | |---------------------------| | bindxxxToResource | | serverHeaderOptions | | xxxRepresentation | | | getX/setX | | [type/interface] | | observeHandle | | [Get/Put/Post] | | +---------------------------+ | | | children/endpoints | | | | ◇ | startPresence | | headerOptions | | ObserveResource | | | requestHandle | sendResponse | | | | SubscribePresence | | | |----------------------| |----------------------| |----------------------| | v | processFunc | | get/put/post/observe | | listeningFunc | | +---------------------+ +----------------------+ | subscribe/publish | +----------------------+ | | OCServerRequest | +----------------------+ | |---------------------| | | ehResponseHandler | | +--------+------------+ | | | v | HandleSingleResponse | | | | +------------+ 2 C-S流程图 SERVER CLIENT OC::OCResource entityHandler stack FoundResource cb uri-1 | cb call-1 simpleserver | | | simpleclient | | | Platform::registerResource | | | Platform::findResource | | | | | | &quot;/a/light&quot; |OCCreateResource | | | +-----------------+------------------------&gt; | OCDoResource | &quot;/oic/res&quot; | | OCResourceRequest | &lt;-------------------------+----------------+ | &lt;----------------------- | | | OCDoResponse | | curResource Platform::sendResponse | -----------------------&gt; | OCResource | || | | ------------------------&gt; | &quot;/a/light&quot; | | OCDoResource | | OCResourceRequest | &lt;------------------------ | GetResourceRepresentation doGet | &lt;----------------------- | onGet | | | cb | Platform::sendResponse | -----------------------&gt; | OCResource | | | -------------------&gt; | | | OCDoResource | | | &lt;--------------------| PutResourceRepresentation doPut | &lt;----------------------- | onPut | | | cb | Platform::sendResponse | -----------------------&gt; | | | | -------------&gt; | | | | | | &lt;------------- | PostResourceRepresentation doPost | &lt;----------------------- | onPost | / | | cb | / | | | / | | | FoundResource / | entityHandler | | cb call-2 / | cb uri-2 | | | Platform::registerResource | | | | | Platform::findResource | | | | | | | | &quot;/a/light1&quot; | | | | | | +-----------------+----------|-------------&gt; | | | | | | | &lt;---------|---------------+----------------+ | &lt;--------|-------------- | | | | | | | | curResource Platform::sendResponse | ---------|-------------&gt; | | | || | | | ----------|-------------&gt; | &quot;/a/light1&quot; | | | | | Platform::sendResponse | ---------|-------------&gt; | --------&gt; | | | | | | | | | | &quot;/a/light1&quot; |OC_REST_OBSERVE| &lt;-------- | observeResource &lt;--- OC::OCRecource::observe | &lt;------------ | Observers.insert | | onObserve | | cb | | | | | | | loop +----- | | | | | | | | | | | OCDoResponse | | | notifyListOfObservers | ------------------|-------------&gt; | wrapper switch | | | | | ------------------------------&gt; | | | | | +----&gt; | | | | | | | ChangeLightRepresentation presence/representation thread3","tags":[{"name":"IOT","slug":"IOT","permalink":"https://qrsforever.github.io/tags/IOT/"},{"name":"DrawIt","slug":"DrawIt","permalink":"https://qrsforever.github.io/tags/DrawIt/"}]},{"title":"(原创)Iotivity之请求响应流程图","date":"2018-04-24T08:40:06.000Z","path":"2018/04/24/Note/IOT/Iotivity-Request-Response/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} CA连接抽象层 Handle层 1 CA连接抽象层 (thread3/4/5) CAQueueingThreadBaseRoutine | CAQueueingThread | +-----------------------------+ queue_get_element &lt;--| | | | | | threadTask | dataQueue *|---------------------- | | | | \\ | +-----------------------------+ \\ (sendThread/receiveThread) \\ v +----------------+ | next | +--------------------------------------------------------+ | +----------+ | | thread5 +-------------+ | | | msg,size | | | \\ | | | | +----------+ | ((7))v \\ v | |((6) +----------------+ sendDataToAll ---- sendData CASendUnicastData CASendMultica | ^ ^ ^ ^ | | g_adapterHandler | | | v +---------+---------+ +-----------+----------+ +----------------+ | | | next | | | | +----------+ | get put post delete | +---------------------------------|-------------+ | | msg,size | | | | | | | | (x) | | | +----------+ | ---------------- | | CAReceiveThreadProcess | CASendThreadProcess | +----------------+ ^ | | | thread3 | | | +-----------------------------------------------+ CA_REQUEST_DATA &lt;--| | ^ | | code | thread4 r-3 | | CA_SIGNALING_DATA &lt;--|------+--- CAReceivedPacketCallback ------+-------\\ | | | | get code/token from PDU | \\ queue_add_element &lt;--| CA_RESPONSE_DATA &lt;--| | | | \\ | | | g_receiveThread g_sendThread \\ | | | ^ ^ \\ r-4 ((5)) | [[3]] | +-----+ | CAQueueingThread | ----------------&gt; CAQueueingThreadAddData | set | +---------+---------+ ^ | | | | +-------------------------------+-----------+-------------+---------------------------------------------------+--------------+ | DIR: connectivity | | | | | | | | | | | interfacecontroller | | retransmission | | | | | | | | | | | | | | | connectivitymanager | | messagehandler | queueingthread | | | | | | | | | +--------+----------------------+-----------+-------------+--------------------------+------------------------+--------------+ | | | | | | h-1 | | | h-2 | | h-4 | CAInitialize | | CAInitializeMessageHandler | CAQueueingThreadInitialize | | / | CAQueueingThreadStart | | /CAReceivedPacketCallback | (thread create) h-3 | r-1 v / | CASetPacketReceivedCallback | CASetErrorHandleCallback | h-5 | g_adapterHandler --------------\\ CARetransmissionInitialize \\ CARetransmissionStart \\ 1...n CAInitializeRA CAInitializeNFC ------------------------\\ \\ / \\ +--------------------------+ \\ / -----------&gt; | CAConnectivityHandler | h-6\\ transtype / r-2 |--------------------------| CAInitializeAdapters +--&gt; CAReceivedPacketCallback &lt;--------startAdapter (thread4/5) | / | \\ | | stopAdapter | / | \\ +--&gt; CAAdapterChangedCallback | startListenServer | / | \\ params | | stopListenServer | CAInitializeTCP CAInitializeEDR CAInitializeIP ---+--&gt; CAConnectionChangedCallback | startDiscoveryServer | | | sendData (unicast) | non +--&gt; CAAdapterErrorHandleCallback | sendDataToAll (muticast) | h-7 | | getNetInfo ((8)) | CASelectNetwork +--&gt; CARegisterCallback -----------&gt; | readData | handler | terminate | | transportType | h-8 h-9 +--------------------------+ CARegisterHandler CASetInterfaceCallbacks / | \\ / | \\ / | \\ / | \\ / | \\ call / | \\ Request Response Error &lt;--- g_requestHandler g_responseHandler g_errorHandler cb-a cb-b cb-c cb-a cb-b cb-c 2 Handle层 | |--&gt; g_receiveThread h-11 | r-6 +--------------------------------------------&gt; CAHandleRequestResponseCallbacks (queue_get_element) | thread2 | +---------------------------------+ g_serverRequestTree | | HandleVirtualResource | call cb-1 | | | HandleResourceWithEntityHandler | -----&gt; resource-&gt;entityHandler() |GetServerRequestUsingToken | | HandleDefaultDeviceEntityHandler| | | +---------------------------------+ /----&gt; resouce = FindResourceByUri(request-&gt;resourceUrl) v | ^ / +---------------------------------------------------------------+ | h-12 | / +--&gt;| OCServerRequest |&lt;-----------------+ | ProcessRequest +-------------/ | |---------------------------------------------------------------| | | ^ | | | method, resourceUrl, acceptFormat, payloadFormat, devAddr | | | | (by uri) | | | numResponses, qos, options, observeResult, delayedResNeeded | | |DetermineResourceHandling | | ehResponseHandler, requestId, requestToken, coapID, query | | | ^ | +---------------------------------------------------------------+ | | | AddServerRequest----+ | ehResponseHandler | | | +3 +2 ^ [[2]] v cb-3 | | | | HandleSingleResponse | | HandleStackRequests | | | ^ | +1 v | | | | OCSendResponse ---&gt; CASendResponse ---&gt; CAQueueingThreadAddData | | | | | | | +--&gt; GetServerRequestUsingToken +----&gt; GetClientCBUsingToken &lt;-----------+ | | | | | | | | | | | | | | OCHandleRequests OCHandleResponse | cb-2 | | | ^ ^ client-&gt;callback() | | | cb-a | thread2 cb-b | cb-c | | | HandleCARequests [get|put|post|delete] HandleCAResponses HandleCAErrorResponse | | ^ ^ ^ | | | r-7 | r-7 | r-7 | | +------------------------------------------.------------------------------------------+ | | receive | handle | | | | 启动架构 ======== CSDK | +-----------------------------+ | | | | | OCInitializeInternal | | server sample | ^ | client sample | +-----------------------+ | | | +----------------------+ | | | | | | | | | |Platform::start() ----------------+--------&gt; OCInit2 &lt;----------+----------------- Platform::start()| | | | | | | | | | | | | | | | | | | +--------------+ | | v | | +--------------+ | | | | start | | | init core resources | | | start | | | | | | | | | | | | | | | | | |thread2 | r-5 | thread2| | | | | | | processFunc ---------------+-------&gt; OCProcess &lt;---------+----------------- listeningFunc| | | | | | | | | | | | | | | | +--------------+ | | | | | +--------------+ | | | wrapper | +-------------+---------------+ | wrapper | | | | | | | | +-----------------------+ | +----------------------+ | main thread /--------+ main thread | / | /------------------/ | / | h-10 v | +-- CAHandleRequestResponse | | CS交互API框图 ============= | | | | RPC &lt;--------- | ---------&gt; RPC | | | a | 1 | OCDoResponse | OCDoRequest | \\ / | +------------\\--------------------/------------+ | | \\ b 2 / | | SERVER | CASendResponse CASendRequest | CLIENT | | \\ / | | ^ | \\ c 3 / | ^ | | | CADetachSendMessage | | | | | ^ | | | --------- | | | --------- | | | d v 4 | | | | | CAHandleRequestResponse | | | v | / \\ | v | | e / \\ 5 | | CLIENT | HandleCAResponses HandleCARequests | SERVER | | / \\ | | +------------/--------------------\\------------+ | f / \\ 6 | OCHandleResponse OCHandleRequests | Sample流程 ========== | =================server==================================sdk======================================================== | | 1 | Platform::registerResource | | cb-1 | |(uri,type,interface,attr,eHandler) 2 | +----------------------------------&gt; OCCreateResource | thread2 insertResource headResource | | | +----------------+ | | | OCResource | &lt;---------+ (resourceHandler) &lt;-------------------+ | OCResourceType |----------------| | | +-------------+ | uri | OCResourceInterface | | | next | name | &lt;----| resType | +-------------+ | | +-------------+ | resInterface |-----&gt; | name | next | | | OCResourceProperty | resAttributes |-----+ +-------------+ | | +------+--------+-----+---------| resProperties | | uri | | | | | | | actionsetHead | | OCAttribute OCF only for platform | | | v | v +-----| childresHead |---+ | +---------------------+ and device info | | | discoverable | active | +---| observerHead | | +-&gt; | name | value | next | | | | | | | | entityHandler | | +---------------------+ | | v v | | | uuid (cb-1) | | | | slow observable / | |----------------| | OCChildResource | | / | | next | | +-----------------+ | | +------ | +----------------+ +---&gt; | resource | next | | | OCActionSet v | +-----------------+ | | +-------------------------+ | | | | name | timesteps | type | v ResourceObserver | | |-------------------------| +-------------------------------------------------+ | | | head | next | | id | uri | query | token | devAddr | qos | next | | | +-------------------------+ +-------------------------------------------------+ | | | | =========================================================sdk======================================client============ | | | | ((1)) | | Platform::findResource | | | | | ((2)) | | | gen: resHandle &amp; token OCDoResource &lt;----------------------------------+ | | /---------------------------- OCDoRequest (host, uri, conntype, callback) | | / | cb-2 | | ((3)) / | | | AddClientCB [Find|Get|Put|Post]Callback | | +--------------------+ | | g_cbList ----------------------------&gt; | ClientCB | | | |--------------------| +--&gt; con | | text &lt;---+ | callback(cb-2) | | | | GetClientCBUsingUri | | handle (random) | +--&gt; non | | GetClientCBUsingToken xml &lt;---+ | type |------| | | GetClientCBUsingHandle | | token (random) | +--&gt; ack | | json &lt;---+ | options | | | | | | payload | +--&gt; reset discover | | cbor &lt;---+---------| payloadFormat | ^ | | ip &lt;---+ | context | | | | | +---------------+ | method +---+-----+-----+-----+-----+---+ | | bluetooth &lt;---+ | OCDevAddr | | sequenceNumber | | | | | | | | | |---------------| | requestUri | v v v v v | | nfc &lt;---+---| adapter |&lt;---------| devAddr | get put post delete observe | | | | flags | |--------------------| | | nfc &lt;---+ | port | | next | | | | | addr | +--------------------+ | | xmpp &lt;---+ |---------------| | | | routeData | | | | remoteId | ((4)) | | +---------------+ OCSendRequest ---&gt; CASendRequest ---&gt; CAQueueingThreadAddData | | | | | | =================server==================================sdk======================================================== | | | | entityHandler (request) | | [[0]] | | | | | | | | [[1]] | | (param) Request ----&gt; Response | | Platform::sendResponse (response) &lt;--| | | | | | | | | | (response) | [[2]] | | +----------------------------+---&gt; OCDoResponse ----------- call | | Wrapper: | | | ------+ | csdk -----&gt; requestHandle-&gt;ehResponseHandler | | c++ +---------------------------+ | | +------------------------+ cb-3 | | | OCResourceRequest |&lt;------------+ | OCEntityHandlerRequest | | | |---------------------------| | |------------------------| resource (resourceHandle) | | | messageID,representation | | | method, resource |--------------------------------------+ | | devAddr, query, options | | form | devAddr, query | | | payload |&lt;------------------------| options | | | requestHandle | | | payload | requestHandle | | resourceHandle | | | requestHandle |------------------------------------------+ +---------------------------+ | | messageID | | | | (param) +------------------------+ | handle | get/put/post | csdk | v | +------------------------+ | c++ +-------------------+ | |OCEntityHandlerResponse | | |OCResourceResponse | &lt;------+ |------------------------| requestHandle | |-------------------| form | requestHandle |------------------------------------------+ | newResourceUri |-----------------------&gt;| ehResult | | interface | | resourceUri | | headerOptions | | resourceHandle(x) | | representation | | payload | | requestHandle | +------------------------+ | resourceHandle | +-------------------+ ```","tags":[{"name":"IOT","slug":"IOT","permalink":"https://qrsforever.github.io/tags/IOT/"},{"name":"DrawIt","slug":"DrawIt","permalink":"https://qrsforever.github.io/tags/DrawIt/"}]},{"title":"(原创)MediaBinder-草稿","date":"2018-03-08T08:47:05.000Z","path":"2018/03/08/Note/Android/MediaBinder/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 源码 MediaBinder 1 总结 音视频媒体播放机制主要在binder. BpBinder是个代理, 主要传输工作交给了ICPThreadState类. Interface用来制订业务, Binder用来实现通讯, 分工明确. 通讯属于C-S模式, Bnxxx是本地对象, Bpxxx是代理对象, 一端是本地服务, 另一端是远程代理. 本地&lt;-&gt;代理 类型的转换是在kernel中binder.c文件的binder_transaction函数中实现的. binder_transaction函数会为代理生成handle, 在用户空间通过ProcessState::getStrongProxyForHandle创建BpBinder代理. Parcel类readStrongBinder和writeStrongBinder记录或还原obj的type, binder, cookie. Binder驱动层面的结构体未在图中体现. 需要单独分析.","tags":[{"name":"Android","slug":"Android","permalink":"https://qrsforever.github.io/tags/Android/"}]},{"title":"(原创)万物互联之腾讯Shadow","date":"2018-02-06T02:01:00.000Z","path":"2018/02/06/Note/IOT/QCloud_Shadow/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Shadow学习 1.框架API接口 2.静态类图 3.时序图 4.设备影子接口 5.Sample回调函数 6.调试运行Sample 1 Shadow学习 1.1 1.框架API接口 ---------------------------------------------------------------------------------------------------------------- Sample on_request_handler on_message_callback on_prop_xxx_callback event_handler register_subscribe_topics register_config_property do_report_prop_xxx() ---------------------------------------------------------------------------------------------------------------- Shadow ^ | IOT_Shadow_Register_Property | | | IOT_Shadow_Update IOT_Shadow_Get IOT_Shadow_Subscribe IOT_Shadow_Yield | | ----------------------------------------------------------------------------------------------------------- SDK MQTT | IOT_MQTT_Publish IOT_MQTT_Subscribe IOT_MQTT_Yield | | send_mqtt_packet read_mqtt_packet | v ---------------------------------------------------------------------------------------------------------------- 1.2 2.静态类图 +------------------+ +-----------------+ +------------------+ | Request | +------------------+ | SubTopicHandle | | RequestParams | +------------------+ | PropertyHandler | +-----------------+ +------------------+ | client_token | +------------------+ | qos | | method | copy | method | | property | | topic_filter | | timeout_sec |-----------&gt;| timer | +------------------+ | message_data | | user_context | | user_context | | callback | +-----------------+ +------------------+ +------------------+ +------------------+ | message_handler | | request_callback | | callback | | +-----------------+ +------------------+ +------------------+ | ^ | | | | | | | +------------------+ | | | | ShadowInnerData | | | | +------------------+ | | | | token_num | | | | | version | | | +----------| request_list | | | List | property_list |--------+ | | result_topic | List | +------------------+ | ^ | \\ | \\ +-------------------+ | \\ | Qcloud_IoT_Shadow | | \\ +-------------------+ mqtt | \\ | mqtt |◆ ----+ | +----------------------+ +----------------------+ -------◇ | inner_data | | | | ShadowInitParams | | MQTTInitParams | +-------------------+ | | |--------------------- | |------------------ | | event_handle | | | | product_id | copy | product_id | +-------------------+ | | | device_name |----------&gt;| device_name | ◆ | | | cert_file | | cert_file | | event_hander | | | cert_key | | cert_key | | | | | auto_connect_enable| | auto_connect_enable| | | | +----------------------+ +----------------------| | | | | event_handle | | event_handle | v | | +----------------------+ +----------------------+ +-------------------+ | | ◆ ◆ | MQTTEventHandler | | | | | event_handle +-------------------+ | | | event_handle +------------------------------------&gt; | context | | | +-----------------------------------------------------------------------&gt; +-------------------+ | | | h_fp | | | +--------------------+ +-------------------+ | | | Qcloud_IoT_Client | ^ | | +--------------------+ | | | +--------------------◇ | network_stack | | | | | ◇ | options | | | | | / | list_pub_wait_ack | | | | v / | list_sub_wait_ack | | | | +----------------+ / +--------------------+ | | | | Network | / | event_handle |◆ -----------+ | | +----------------+ | | sub_handles | | | | sockfd | | +--------------------+ | | +--------------◇ |ssl_conn_params | | ◇ ^ | | | +----------------+ | | \\ | | | | connect | | | \\--------------------------------+ | | | read | | | | v | write | | +------------------------------------------------+ +-----------------+ +----------------+ | |SSLConnectParams | | +-----------------+ v | host | +----------------------+ | port | | MQTTConnectParams | | cert_file | +----------------------+ | key_file | | client_id | +-----------------+ | conn_id | | auto_connect_enable | | keep_alive_interval | +----------------------+ 1.3 3.时序图 Shadow MQTT ******* Aircond *** *** Qcloud Shadow Door | * host:port * | | | *** *** | | init_shadow_params ******* | | | | | | | +------&gt; Shadow_Construct &quot;$shadow/operation/result/P/D&quot; | | | | (cb1) | | |\\ +--------&gt; MQTT_Construct | | | \\ | |&lt;---------+ | | \\ | sub | | | | \\ MQTT_Subscribe ----------------------&gt; | | | | +------&gt; Shadow_Get[_Sync] | | | | | pub | | | | +--------&gt; MQTT_Publish -------------------------&gt; | | | register_config_property | | | | | | | | | +------&gt; Shadow_Register_Property | | | | | | | register_subscribe_topics | | | | | &quot;P/D/control&quot; &quot;P/D/xxx&quot; | | &quot;P/D/event&quot; | | +------&gt; Shadow_Subscribe (cb2) (cb3) | | pub | | | sub | | &lt;-------------------------| | +--------&gt; send_mqtt_packet -----------------------&gt; | | { | | | | &quot;action&quot;: &quot;come_home&quot;, | +---&gt; loooooop | | &quot;targetDevice&quot;: &quot;airCon&quot; | | | | | } | | +---------&gt; Shadow_Yield | | | | | | | | | +--------&gt; MQTT_Yield | | | | | | | | | | | | | | read_mqtt_packet &lt;------------------------- |-repub &lt;--| | | packet type: | | | | | --------------------------------------------- | | | | | | | | | | | | | v v v v v | | | | CONNACK PUBACK SUBACK PUBLISH PINGRESP | | | | \\ \\ | / / | | | | \\ v v v / | | | | --------&gt; handle_xxx_packet &lt;-------- | | | | | | | | | | | | | | on_operation_result_handler &lt;----+----&gt; on_message_callback cb3 | | | | (cb1) (cb2) | | | | | | | | | | | | | | | | +---------+----------+ | | | | | delta | | client_token | | | | | v v | | | | | on_prop_xxx_callback on_request_handler | | | | | v | | | | --------------------------------------------------------------------- | | | | / | | | | / | | | | / | | | | deal_with_desired | | | | | | | | | | | | | | do_report_prop_xxx | | | | | | | | | +--------&gt; Shaow_Update[_Sync] | | | | | pub | | | | +--------&gt; MQTT_Publish --------------------------&gt; |----------+ | | &quot;$shadow/operation/P/D&quot; | | +----- eeeeend | | | | | | | +---------&gt; Shadow_Destroy | | | | | END | | 1.4 4.设备影子接口 1. IOT_Shadow_Construct 原型: void* IOT_Shadow_Construct(ShadowInitParams *pParams); 功能: 构造ShadowClient 参数: pParams: 连接接入与连接维持阶段所需要的参数 返回: 0: 失败 2. IOT_Shadow_Destroy 原型: int IOT_Shadow_Destroy(void *handle); 功能: 销毁ShadowClient, 关闭连接 参数: handle: ShadowClient实例 返回: 0: 成功 3. IOT_Shadow_Get 原型: int IOT_Shadow_Get(void *handle, OnRequestCallback callback, void *userContext, uint32_t timeout_ms); 功能: 获取设备影子文档 参数: handle : ShadowClient结构体 callback : 请求响应处理回调函数 userContext: 用户数据, 请求响应返回时通过回调函数返回 timeout_ms : 请求超时时间, 单位:s 返回: 0: 成功 4. IOT_Shadow_Update 原型: int IOT_Shadow_Update(void *handle, char *jsonDoc, size_t sizeOfBuffer, OnRequestCallback callback, void *userContext, uint32_t timeout_ms); 功能: 异步方式更新设备影子文档 参数: handle : ShadowClient结构体 jsonDoc : 更新到云端的设备文档 sizeOfBuffer : 文档长度 callback : 请求响应处理回调函数 userContext : 用户数据, 请求响应返回时通过回调函数返回 timeout_ms : 请求超时时间, 单位:ms 返回: 0: 成功 5. IOT_Shadow_Yield 原型: int IOT_Shadow_Yield(void *handle, uint32_t timeout_ms); 功能: 消息接收, 心跳包管理, 超时请求处理 参数: handle : ShadowClient实例 timeout_ms : 超时时间, 单位:ms 返回: 0: 成功 6. IOT_Shadow_Publish 原型: int IOT_Shadow_Publish(void *handle, char *topicName, PublishParams *pParams); 功能: 发布消息(目前阶段是MQTT消息) 参数: handle : ShadowClient实例 topicName : 主题名 pParams : 发布参数 返回: &lt; 0: 失败 &gt;=0: 成功 TODO: 后续修改, 需要隐藏MQTT相关结构体 7. IOT_Shadow_Subscribe 原型: int IOT_Shadow_Subscribe(void *handle, char *topicFilter, SubscribeParams *pParams); 功能: 订阅消息 参数: handle : ShadowClient实例 topicName : 主题名 pParams : 订阅参数 返回: &lt; 0: 失败 &gt;=0: 成功 TODO: 后续修改, 需要隐藏MQTT相关结构体 8. IOT_Shadow_Register_Property 原型: int IOT_Shadow_Register_Property(void *handle, DeviceProperty *pProperty, OnPropResigtCallback callback); 功能: 注册当前设备的设备属性 参数: handle : ShadowClient实例 pProperty : 设备属性 callback : 设备属性更新回调处理函数 返回: 0: 成功 9. IOT_Shadow_UnRegister_Property 原型: int IOT_Shadow_UnRegister_Property(void *handle, DeviceProperty *pProperty); 功能: 删除已经注册过的设备属性 参数: handle : ShadowClient实例 pProperty : 设备属性 返回: 0: 成功 10. IOT_Shadow_JSON_ConstructReport 原型: int IOT_Shadow_JSON_ConstructReport(void *handle, char *jsonBuffer, size_t sizeOfBuffer, uint8_t count, ...); 功能: 在JSON文档中添加reported字段 参数: handle : ShadowClient实例 jsonBuffer : 为存储JSON文档准备的字符串缓冲区 sizeOfBuffer : 缓冲区大小 count : 可变参数的个数, 即需上报的设备属性的个数 返回: 0 : 成功 11. IOT_Shadow_JSON_ConstructReportAndDesireAllNull 原型: int IOT_Shadow_JSON_ConstructReportAndDesireAllNull(void *handle, char *jsonBuffer, size_t sizeOfBuffer, uint8_t count, ...); 功能: 在JSON文档中添加reported字段，同时清空desired字段 参数: handle : ShadowClient实例 jsonBuffer : 为存储JSON文档准备的字符串缓冲区 sizeOfBuffer : 缓冲区大小 count : 可变参数的个数, 即需上报的设备属性的个数 返回: 0 : 成功 12. IOT_Shadow_JSON_ConstructDesireAllNull 原型: int IOT_Shadow_JSON_ConstructDesireAllNull(void *handle, char *jsonBuffer, size_t sizeOfBuffer); 功能: 在JSON文档中添加 &quot;desired&quot;: null 字段 参数: handle : ShadowClient实例 jsonBuffer : 为存储JSON文档准备的字符串缓冲区 sizeOfBuffer : 缓冲区大小 返回: 0 : 成功 1.5 5.Sample回调函数 1. on_request_handler 原型: typedef void (*OnRequestCallback)(void *handle, Method method, RequestAck requestAck, const char *jsonDoc, void *userContext); 功能: 每次对设备影子操作请求响应的回调函数 参数: handle : ShadowClient实例 method : 文档操作方式 requestAck : 请求响应类型 jsonDoc : 云端响应返回的文档 userContext : 用户数据 返回: 0 : 成功 2. on_message_callback 原型: typedef void (*OnMessageHandler)(void *handle, MQTTMessage *message, void *userContext); 功能: PUBLISH消息回调处理函数 参数: handle : ShadowClient实例 message : 发布或接收已订阅消息的结构体数据 userContext : 用户数据 TODO: 后续修改, 需要隐藏MQTT相关结构体 3. on_prop_xxx_callback 原型: void (*OnPropResigtCallback)(void *handle, const char *jsonVal, uint32_t length, DeviceProperty *pProperty); 功能: 设备属性处理回调函数 参数: handle : ShadowClient实例 jsonVal : 设备属性值 length : 设备属性值长度 pProperty : 设备属性结构体 4. event_handler 原型: typedef void (*MQTTEventHandleFun)(void *handle, void *context, MQTTEventMsg *msg); 功能: MQTT相关事件回调函数 参数: handle : MQTTClient 实例 context : MQTTClient 上下文 msg : MQTT事件消息 TODO: 后续修改, 需要隐藏MQTT相关结构体 1.6 6.调试运行Sample 1. 设置Ares的Top目录, eg: export ARES_TOP_DIR=xxx 2. cd $ARES_TOP_DIR; make 3. 打开两个终端启动本地模拟的引擎脚本 cd $ARES_TOP_DIR/doc/shadow console1: ./rule_engine_for_operation.sh console2: ./rule_engine_for_event.sh 备注: rule_engine_for_operation.sh 接收topic:leiot/operation/* rule_engine_for_event.sh 接收topic: productID/deviceName/control 4. 再打开两个终端启动sample程序 cd $ARES_TOP_DIR/output/release/bin console3: ./aircond_shadow_sample_v2 console4: ./door_mqtt_sample come_home aircond_sample","tags":[{"name":"IOT","slug":"IOT","permalink":"https://qrsforever.github.io/tags/IOT/"},{"name":"DrawIt","slug":"DrawIt","permalink":"https://qrsforever.github.io/tags/DrawIt/"}]},{"title":"(原创)Hadoop之Delete实例代理流程","date":"2017-11-13T10:57:00.000Z","path":"2017/11/13/Note/Hadoop/Hadoop-Proxy-Delete/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 框架图 0.1 框架图 ClientNamenodeProtocol | | o---&gt; newReflectiveBlockingService -----&gt; BlockingService | | | | o---&gt; newBlockingStub o--&gt; getDescriptorForType() | | | | |new o--&gt; getRequestPrototype() | | | | +----&gt; BlockingStub o--&gt; getResponsePrototype() | △ | | | o--&gt; callBlockingMethod() | | | | | BlockingInterface | | | | △ | o--&gt; impl.delete() | | | | | | | delete &lt;-- o | | | +---------------------------------------+ | | | ClientProtocol +----------------------------&gt; ClientNamenodeProtocolPB △ | △ | |rpcProxy | | | | | ◆ | ClientNamenodeProtocolTranslatorPB ClientNamenodeProtocolServerSideTranslatorPB (Client Proxy) (Server Impl) | | | 1 5 | o---&gt; delete() delete() &lt;---o | | ^ | | | 2 | | o---&gt; rpcProxy.delete() | | | | | +----------------+ +----+ | | +---------------- | | -----------------+ | | | | | | | | | RpcInvocationHandler | | RPC.Server | | e1 | | e1 | | \\ | | / | | \\ | | / | | \\ | | / | | Invoker | | Server | | | | | | | | | 3 v | 4 | | | o---&gt; invoke() call() &lt;---o | | | | | | | | | | | +---------------------------------------------------------------------------------------------------+ ProtobufRpcEngine","tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://qrsforever.github.io/tags/Hadoop/"}]},{"title":"(原创)Hadoop之Namenode的Delete命令代码流程","date":"2017-11-10T13:01:00.000Z","path":"2017/11/10/Note/Hadoop/Hadoop-Namenode-Delete/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 框架图 0.1 框架图 nn +-------------------------------------------------+ +------------------------------------------------------------+ | | | | v rpcServer | v | NameNode ◇ -------------------------------------&gt; NameNodeRpcServer ---------▷ NamenodeProtocols | ◇ | ◆ | | +-----------------+ | | | 1 | | | |ClientProtocol | | | o--&gt; initialize() serviceRpcServer| o---&gt; start() | |DatanodeProtocol | | | | | | | | +-----▷ |NamenodeProtocol | | | | clientRpcServer| | | 3 |HAServiceProtocol| | | o--&gt; loadNamesystem()----\\ ★ | | |--&gt; clientRpcServer.start() +-----------------+ | | | \\ | | | | | o--&gt; createRpcServer() \\ | | |--&gt; serverRpcServer.start() | | | \\ | | 13 | | o--&gt; startCommonServices() \\ | o---&gt; delete() | | | | \\ | | | | | | 2 \\ | | | 14 | | namesystem |--&gt; rpcServer.start() \\ | o---&gt; namesystem.delete() | | | | | | | | | | | | FSNamesystem.loadFromDisk() &lt;----------------------+ | | | | +----------------------------------------------------------+ | | | | ipc.Server | | △ | | | | |---------------------------------------------------------------------------------------- | | | | Inner class +-- Listener (listens on the socket, create jobs for handler threads) | | | | | | | ◆ | | | | | | | | readers | | | | v | | +-------------------&gt; Reader() | | | | | | | | | | | | | o--&gt; run() | | | | Selector | o--&gt; run():loop | | readSelector.select() | | | | | | | selector.select() | 6 | | | | | | | 5 o---&gt; doRead() +----------------&gt; Connection | | | | NIO | o---&gt; doAccept() | | | | | | | | o---&gt; c.readAndProcess() | | | | | | | | channelRead(ByteBuffer) | | | | | o--&gt; reader.addConnection(c) | | | | | | o--&gt; processOneRpc() | | | | | | | | | | | | | 7 | | | | Thread ◁ -----+-- Responder (sends responses of RPC back to clients) o--&gt; processRpcRequest() | | | | | | | | | | | | o--&gt; run() | | | | | | | Call(rpcRequest) &lt;--o | | | | | | / | | | | NIO | o--&gt; doRunLoop() / | | | | | | / | | | | | / callQueue.put(call) | | | | | / | | | | | / | | | | | / | | | | | / | | | | +-- Handler (handles queued calls) / | | | | | / | | | | | / | | | | o---&gt; run():loop / | | | | | call / | | | | | / | | | | |---&gt; callQueue.take() --------------------/ | | | | | | | | | |---&gt; CurCall.set(call) | | | | | 8 | | | | |---&gt; call() | | | | ^ | | | | | | |---&gt; CurCall.set(null) | | | | | | | | | Inner class | | | |---------------------------------------------------------- | | | | | | | o---&gt; registerProtocolEngine() | | | | | | | o---&gt; getRpcInvoker() | | | | RpcInvoker | | | o---&gt; call() |--&gt; responder.start() △ | | | | 4 | | | | | o---&gt; start() -------+--&gt; listener.start() o---&gt; invoke() | | | | | | | | | |--&gt; handler.start() ★ | | v | (clientRpcServer) | | RPC.Server ◁ ------------------------------------------ ProtobufRpcEngine.Server | | | | | | | |---------------------| | o---&gt; addProtocol() | Inner class | | | | | | | o---&gt; registerProtocolAndImpl() | | | | | | v ProtoBufRpcInvoker | | 8.1 | ^ | | o---&gt; call() | / | | | | +-------------------/ o---&gt; getProtocolImpl() | | | rpcKind = RPC_PROTOCOL_BUFFER | | | | |---&gt; getRpcInvoker() --------------------+ | | 8.3 | | | | o---&gt; call() | | 8.2 | ^ | | |---&gt; call() | | | 9 | | | |--&gt; service.callBlockingMethod() | | Inner class | | | |--------------------- | | +--------------------------+ | ClientNamenodeProtocol.proto | | +--------------------------------------+ | | | | 12 | | | |service ClientNamenodeProtocol { | server.delete()&lt;--o | | | rpc delete(DeleteRequestProto) | | | | | returns(DeleteResponseProto); | | | | |} | o--&gt;DeleteRequestProto | | +--------------------------------------+ | | | auto | gen ClientProtocol | 11 | | | | | o--&gt; delete() | | | | | | | v @ProtocolInfo(Name, Ver) | | | ClientNamenodeProtocol ClientNamenodeProtocolPB ◁ -------- ClientNamenodeProtocolServerSideTranslatorPB | | | | / ◆ | | | | +-------------/ | | | | BlockingInterface ◁ ---------------+ | | server | | | △ | +----------------+ | | v | | | BlockingService(impl) &lt;---------------------------------------------------+ | BlockingStub &lt;----+ ^ | | | | | | | new | o--&gt; getDescriptorForType() | | | | o---&gt; newBlockingStub() ---+ | | | | o--&gt; getRequestPrototype() | | | o---&gt; newReflectiveBlockingService()---------+ | o--&gt; getResponsePrototype() | | o--&gt; callBlockingMethod() | | | | 10 | o--&gt; impl.delete() Delete操作从Namenode类出发经过NameNodeRpcServer启动各种服务, 最终回到NameNodeRpcServer中的delete方法. ipc.Server: 负责网络收发 (基类) RPC.Server: 负责PB协议维护 ProtobufRpcEngine.Server: 负责执行call","tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://qrsforever.github.io/tags/Hadoop/"}]},{"title":"(原创)Hadoop之FsShell的Delete命令代码流程","date":"2017-10-24T12:08:00.000Z","path":"2017/10/24/Note/Hadoop/Hadoop-FsShell-Delete/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 框架图 0.1 框架图 Tool +-----------------------------------------▷ Configured △ | | 1 | o--&gt; run() | | | FsShell ------------+ Command | △ | 0 | 2 o---&gt; registerCommands() o---&gt; run() | | | | | | | |---&gt; processOptions() o---&gt; main() | | | | | | |---&gt; processRawArguments() | | | | | | |---&gt; processArguments() +------------+ FsCommand | | | Delete | △ | |------------| | expandArguments()&lt;---| | Rm | | | / | | Rmr |-----+ / | Rmdir | | / | | | / +-----|------+ / | / | 3 / o---&gt; processPath() | / / / v fs | PathData ◇ -----------------------------------------+ | ◆ | | 4 |path | o---&gt; createFileSystem() | URI -- hdfs | | | | ^ | | | | / -- local | o---&gt; get(uri) | | / | | | | ◆ v | | +------&gt; Path ---------------------------------- FileSystem | uri = hdfs | △ | | | | o---&gt; getFileSystem() | | fs.initialize() | | | | | | | LocalFileSystem ------+------ DistributedFileSystem | ◇ 5 | | --------- initialize() &lt;--- o | dfs / | | I / | | +-----▷ ClientProtocol &lt;-------------------\\ new / | | | | \\ / delete()&lt;--- o | | | 10 \\ / | | | o---&gt; delete() \\ / | | | | \\ / | | namenode \\ / | | ◇ / | | DFSClient &lt;------------------------------------------+ | NameNodeProxies.createProxy() | | \\ | | \\ o---&gt; delete() | \\ 6 | | init&lt;---o | | +-----------------------------------------------------------------------+ | &lt;T&gt; | ProxyAndInfo &lt;------------- + | o | | | | | | | | o---&gt; getProxy() |T = ClientProtocol | | | | | | | | | | | | | new | NameNodeProxies | |-------&gt; ClientNamenodeProtocolTranslatorPB | | | ◆ | | new | | | | o---&gt; createNonHAProxy() ---+ | | o---&gt; delete() | \\ | | | | | \\ 7.2 | | | | 11 o---&gt; createNNProxyWithClientProtocol() | | |---&gt; rpcProxy.delete() | | | 7.1 | | | rpcProxy (is a proxy of ClientNamenodeProtocolPB) createProxy() &lt;---o |---&gt; RPC.setProtocolEngine() | | | | \\ | +----------------------------------------+ | \\ set | | | +----------------------|------------------------------------------+ | | | v | | | Conf | rpc.engine.ClientNamenodeProtocolPB = ProtobufRpcEngine | | | | | | | | +-------------------------------------------------+---------------+ | | / get | | |---&gt; RPC.getProtocolProxy() / | | | | / | | | 8 / call * 9 | | |---&gt; getProtocolEngine() ----------&gt; getProxy() &lt;---o | | | | | new | | | | | &lt;T&gt; T = ClientNamenodeProtocolPB | | ProtocolProxy &lt;--------------------------------------------------------------------+ | method | | || | +-----&gt; Proxy.newProxyInstance(ClientNamenodeProtocolPB) =--------------------------------+ delete | | | | o---&gt; getProxy()----| proxy | | | | | | | RpcInvocationHandler | o---&gt; fetchServerMethods() ▽ △ | | -- ClientNamenodeProtocol.BlockingInterface | | | / | | | / | Invoker | +---------------/ o---&gt; delete() | | | | | 12 | | o---&gt; invoke()&lt;----+ | | | ClientNamenodeProtocol.proto: | +----------------------------------------------------------------------+ constructRpcRequestHeader &lt;---| | message DeleteRequestProto { | &quot;delete&quot; | | required string src = 1; | | | required bool recursive = 2; | |---&gt; client.call() | } | | | | | | | message DeleteResponseProto { | | | required bool result = 1; | | | } | connections | | | -----◇ Client &lt;----------------+ | service ClientNamenodeProtocol { | / | | rpc delete(DeleteRequestProto) returns(DeleteResponseProto); | / | 13 | } | / o---&gt; call() | | / | | +----------------------------------------------------------------------+ / | | / | |--&gt; createCall():call / | / getConnection()&lt;---| Thread / | |--&gt; conn.sendRpcRequest() △ / | | | / |---&gt; new conn |--&gt; call.getRpcResponse() calls | / | Call &lt;--------------------◇ Connection &lt;------------------- |---&gt; conn.addCall() | | | | | |---&gt; conn.setupIOstreams() o---&gt; setRpcResponse() o---&gt; addCall() | | | sendRpcRequest() &lt;---o | | o---&gt; getRpcResponse() o---&gt; setupIOstreams() | | | | | |---&gt; writeConnectionHeader() | socket | | |---&gt; writeConnectionContext() | | | |---&gt; start() | / | / o---&gt; run() &lt;--- | | | |---&gt; waitForWork() | |---&gt; receiveRpcResponse() | |---&gt; call.setRpcResponse() | 实质: Java动态代理 + ProtocolBuffer","tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://qrsforever.github.io/tags/Hadoop/"}]},{"title":"(原创)Scrapy之Requst URLs处理流程","date":"2017-09-20T12:49:41.000Z","path":"2017/09/20/Note/Python/Note-Scrapy-Request-URLs/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 源码crawl() 源码open_spider() 源码CallLaterOnce() 源码LoopingCall() 源码maybeDeferred() 疑问: ★0 start_requests = yield self.scraper.spidermw.process_start_requests(start_requests, spider) | |generator +----------------------------------------------------------------------------+ | | | | | def _runCallbacks(self): | | | ... | | | while current.callbacks: | | | item = current.callbacks.pop(0) | | | callback, args, kw = item[ | | | isinstance(current.result, failure.Failure)] | | | ... | | current.result | try: | +--------------------+-------------------------------- current.result = callback(current.result, *args, **kw) | | | ... | | | else: | | | if isinstance(current.result, Deferred): | | | ... | | +----------------------------------------------------------------------------+ | ^ | | | | d.callback(input) | | | generator | v scrapy.utils.defer.process_chain() | Crawl51JobSpiderMiddleware.process_start_requests() +------------------------------------------------+ +------------------------------------------------------------+ | ★4 | | ★5 | | def process_chain(callbacks, input, *a, **kw):| | def process_start_requests(self, start_requests, spider): | x | d = defer.Deferred() | | for r in start_requests: | &lt;------------- for x in callbacks: | | yield r | | d.addCallback(x, *a, **kw) | +------------------------------------------------------------+ | d.callback(input) | | return d | +------------------------------------------------+ | | | m ---&gt; _process_chain() | | \\ | | \\ | | +-----------------------------------------------------------------+ MiddlewareManager ---+ | def _process_chain(self, methodname, obj, *args): ★3 | △ | | return process_chain(self.methods[methodname], obj, *args) | | | +-----------------------------------+-----------------------------+ | | | | | | | | | | | v | Crawl51JobSpiderMiddleware.process_start_requests() spidermw | Scraper ◆---------&gt; SpiderMiddlewareManager | | ★1 m---&gt; process_start_requests(start_requests) | / | / | +-------------------------------------------------------------------------------------+ | | def process_start_requests(self, start_requests, spider): ★2 | | | return self._process_chain(&#39;process_start_requests&#39;, start_requests, spider) | | +-------------------------------------------------------------------------------------+ 命令启动crawl scrapy crawl --nolog s51job -o /tmp/file.csv 1 源码crawl() crawler.Crawler.crawl(): @defer.inlineCallbacks def crawl(self, *args, **kwargs): self.crawling = True try: self.spider = self._create_spider(*args, **kwargs) self.engine = self._create_engine() start_requests = iter(self.spider.start_requests()) yield self.engine.open_spider(self.spider, start_requests) yield defer.maybeDeferred(self.engine.start) ... Scrapy中大量使用Twisted中的延迟机制 参考前文 self.spider: 命令行参数指定的spider,如s51job对应的类S51jobSpider self.engine: 调度执行spider, 驱动spider前行 self.start_requests(): 调用基类的的实现, 方法中使用了yield是个生成器方法, 把start_urls封装城Request对象中 +---------------------------------------------------+ S51jobSpider ------▷ CrawlSpider -----▷ Spider ---| def start_requests(self): | | start_urls / | ... | | / | for url in self.start_urls: | m----&gt; start_requests() | yield Request(url, dont_filter=True) | | +---------------------------------------------------+ | 2 源码open_spider() core.engine.ExecutionEngine.open_spider(): @defer.inlineCallbacks def open_spider(self, spider, start_requests=(), close_if_idle=True): ... nextcall = CallLaterOnce(self._next_request, spider) scheduler = self.scheduler_cls.from_crawler(self.crawler) start_requests = yield self.scraper.spidermw.process_start_requests(start_requests, spider) slot = Slot(start_requests, close_if_idle, nextcall, scheduler) self.slot = slot self.spider = spider yield scheduler.open(spider) yield self.scraper.open_spider(spider) self.crawler.stats.open_spider(spider) yield self.signals.send_catch_log_deferred(signals.spider_opened, spider=spider) slot.nextcall.schedule() slot.heartbeat.start(5) start_requests: 作为参数时是Spider.start_requests()生成器方法, yield返回变为process_start_requests()生成器方法 self.crawler: 初始化时传过来的scrapy.crawler.Crawler, 启动爬虫对象 scheduler: scrapy.core.scheduler.Scheduler, 对优先级, Memory, Disk队列push/pop调度管理 scrape.spidermw: Core.Scraper.SpiderMiddlewareManager slot.nextcall: 实现__call__()方法的CallLaterOnce类, 该类()调用的是_next_request() slot.heartbeat: twisted.internet.task.LoopingCall(nextcall.schedule) start_requests流程图 3 源码CallLaterOnce() class CallLaterOnce(object): def __init__(self, func, *a, **kw): self._func = func self._a = a self._kw = kw self._call = None def schedule(self, delay=0): if self._call is None: self._call = reactor.callLater(delay, self) def cancel(self): if self._call: self._call.cancel() def __call__(self): self._call = None return self._func(*self._a, **self._kw) self._func(): _next_request() callLater(): 将self(可执行的类)封装到DelayedCall()并加入到以delay时间排序的队列中, 等待执行. 了解更多 call: nextcall.schedule() --&gt; reactor.callLater() --&gt; _next_request() 4 源码LoopingCall() class LoopingCall: call = None running = False _deferred = None interval = None _runAtStart = False starttime = None def __init__(self, f, *a, **kw): self.f = f self.a = a self.kw = kw from twisted.internet import reactor self.clock = reactor def start(self, interval, now=True): self.running = True deferred = self._deferred = defer.Deferred() self.starttime = self.clock.seconds() self.interval = interval self._runAtStart = now if now: self() else: self._scheduleFrom(self.starttime) return deferred def stop(self): self.running = False if self.call is not None: self.call.cancel() self.call = None d, self._deferred = self._deferred, None d.callback(self) ... def __call__(self): def cb(result): if self.running: self._scheduleFrom(self.clock.seconds()) else: d, self._deferred = self._deferred, None d.callback(self) def eb(failure): self.running = False d, self._deferred = self._deferred, None d.errback(failure) self.call = None d = defer.maybeDeferred(self.f, *self.a, **self.kw) d.addCallback(cb) d.addErrback(eb) ... def _scheduleFrom(self, when): def howLong(): if self.interval == 0: return 0 runningFor = when - self.starttime untilNextInterval = self.interval - (runningFor % self.interval) if when == when + untilNextInterval: return self.interval return untilNextInterval self.call = self.clock.callLater(howLong(), self) self.f: nextcall.schedule(): seconds(): 返回当前系统时间秒数(根据平台不同, 实现不同) start(): 启动loop任务, 以interval为循环周期, 执行__call__() __call__(): 调用maybeDeferred()执行self.f 即nextcall.schedule()该函数返回值为None. 5 源码maybeDeferred() def succeed(result): d = Deferred() d.callback(result) return d def fail(result=None): d = Deferred() d.errback(result) return d def maybeDeferred(f, *args, **kw): try: result = f(*args, **kw) except: return fail(failure.Failure(captureVars=Deferred.debug)) if isinstance(result, Deferred): return result elif isinstance(result, failure.Failure): return fail(result) else: return succeed(result) f(): == nextcall.shedule(), 返回值为None, 所以maybeDeferred()此处返回succeed(result), callback回调执行LoopingCall__call__.cb() URL调度: | m---&gt; _scheduleFrom() &lt;-----------------------------------------+ | | | | | | | o---&gt; reactor.callLater(interval, self) | loop-2 | | m---&gt; start(interval) | | | | | | | LoopingCall ------+ o---&gt; self()--+ | ^ | | | | | | +-----&gt; self._scheduleFrom(interval)--+ | m---&gt; __call__() &lt;---+ | | | | | | | | +----&gt; errback() | | cb-------+ | | | eb-------------------+ | o ---&gt; defer.maybeDeferred(self.f) heartbeat | | | is ◆ nextcall | Slot ◆-----------&gt; CallLaterOnce | ◆ | | | | ★1 | | m ---&gt; schedule() &lt;-------------+---------------+ | | | | v | | | start_requests | o ---&gt; reactor.callLater(0, self) | | | | | | call | | m ---&gt; __call__() &lt;-----------+ | | | | | | ★2 | o ---&gt; self._func() | | | | | | ★3 | | m ---&gt; _next_request() &lt;--------------------+ is | | | | | call | | ExecutionEngine --+ +---o | | | | | | | | ★4 | | | o---&gt; request = next(slot.start_requests) | | | | | | | | call | download() &lt;--- m | o-------------------------------+ | | | | | | | | | | | | | | | | | | loop-1 | v ★8 | | m ---&gt; _next_request_from_scheduler() | | | | | | | | ★9 | | | o---&gt; slot.scheduler.next_request() | | | | | | | | ★10 | | | o---&gt; self._download() | | | | | | | | | m ---&gt; crawl() &lt;----------------------------+ | | | | | | ★5 | | o---&gt; self.schedule() | | | | | | | | ★6 | | | o---&gt; slot.scheduler.enqueue_request() | | | o---&gt; self.slot.nextcall.schedule() -------------------------+ | ★7 | 6 疑问: 在open_spider函数的最后两行代码: &gt; slot.nextcall.schedule() &gt; slot.heartbeat.start(5) 分析源码之后发现这两行的动作有些重复, nextcall.schedule()自身也能实现loop, 如上图(Loop-1), heartbeat.start(5)(Loop-2)是不是多余的? 这个疑问留到以后解决","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"}]},{"title":"(原创)如何使用Opengrok","date":"2017-09-13T03:05:32.000Z","path":"2017/09/13/Tools/How/How-Install-OpenGrok/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; left: -4em; } pre.numberSource a.sourceLine::before { content: attr(title); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; } /* Alert */ code span.an { color: #008000; } /* Annotation */ code span.at { } /* Attribute */ code span.bu { } /* BuiltIn */ code span.cf { color: #0000ff; } /* ControlFlow */ code span.ch { color: #008080; } /* Char */ code span.cn { } /* Constant */ code span.co { color: #008000; } /* Comment */ code span.cv { color: #008000; } /* CommentVar */ code span.do { color: #008000; } /* Documentation */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.im { } /* Import */ code span.in { color: #008000; } /* Information */ code span.kw { color: #0000ff; } /* Keyword */ code span.op { } /* Operator */ code span.ot { color: #ff4000; } /* Other */ code span.pp { color: #ff4000; } /* Preprocessor */ code span.sc { color: #008080; } /* SpecialChar */ code span.ss { color: #008080; } /* SpecialString */ code span.st { color: #008080; } /* String */ code span.va { } /* Variable */ code span.vs { color: #008080; } /* VerbatimString */ code span.wa { color: #008000; font-weight: bold; } /* Warning */ 环境配置 工程配置 建立或更新 1 环境配置 1. 下载Opengrok和Tomcat 建立软链接 lidong@node0:/$ ls -l /opt/ | egrep &quot;tomcat|opengrok&quot; lrwxrwxrwx 1 lidong lidong 36 Sep 13 09:57 opengrok -&gt; /data/opt/opengrok/opengrok-1.1-rc11 lrwxrwxrwx 1 lidong lidong 37 Sep 13 09:57 tomcat -&gt; /data/opt/tomcat/apache-tomcat-8.5.14 lidong@node0:/$ 2. 配置环境变量 export TOMCAT\\_VERSION=8.5.14 export TOMCAT\\_HOME=/data/opt/tomcat/apache-tomcat-${TOMCAT\\_VERSION} export CATALINA\\_HOME=$TOMCAT\\_HOME export PATH=$TOMCAT\\_HOME/bin:$PATH export OPENGROK\\_TOMCAT\\_BASE=/opt/tomcat export OPENGROK\\_VERSION=1.1-rc11 export OPENGROK\\_HOME=/data/opt/opengrok/opengrok-${OPENGROK\\_VERSION} export OPENGROK\\_INSTANCE\\_BASE=$OPENGROK\\_HOME export PATH=$OPENGROK\\_HOME/bin:$PATH 2 工程配置 1. 建工程目录 # 创建总工程目录 cd /project/opengrok/ #例如创建三个工程avro, hadoop, hbase mkdir avro hadoop hbase # 分别创建各个工程的etc(工程私有配置),src(工程源码子目录) mkdir avro/etc avro/src mkdir hadoop/etc hadoop/src mkdir hbase/etc hbase/src 2. 设置每个项目的配置文件 cat avro/etc/opengrok.conf OPENGROK\\_VERBOSE=yes OPENGROK\\_PROGRESS=yes OPENGROK\\_WEBAPP\\_CFGADDR=localhost:9743 OPENGROK\\_WEBAPP\\_CONTEXT=avro IGNORE\\_PATTERNS=&quot;-i f:.\\* -i d:target -i d:test&quot; &lt;br&gt; cat hadoop/etc/opengrok.conf OPENGROK\\_VERBOSE=yes OPENGROK\\_PROGRESS=yes OPENGROK\\_WEBAPP\\_CFGADDR=localhost:9741 OPENGROK\\_WEBAPP\\_CONTEXT=hadoop IGNORE\\_PATTERNS=&quot;-i f:.\\* -i d:target -i d:test&quot; &lt;br&gt; cat hbase/etc/opengrok.conf OPENGROK\\_VERBOSE=yes OPENGROK\\_PROGRESS=yes OPENGROK\\_WEBAPP\\_CFGADDR=localhost:9742 OPENGROK\\_WEBAPP\\_CONTEXT=hbase IGNORE\\_PATTERNS=&quot;-i f:.\\* -i d:target -i d:test&quot; 3. 创建每个项目源码目录软链接 # tree avro/src/ avro/src/ `-- avro -&gt; /data/opt/avro/avro-src-1.8.2/ &lt;br&gt; # tree hadoop/src/ hadoop/src/ |-- hadoop-common-project -&gt; /data/opt/hadoop/hadoop-2.7.3-src/hadoop-common-project |-- hadoop-hdfs-project -&gt; /data/opt/hadoop/hadoop-2.7.3-src/hadoop-hdfs-project/ `-- hadoop-yarn-project -&gt; /data/opt/hadoop/hadoop-2.7.3-src/hadoop-yarn-project/ &lt;br&gt; # tree hbase/src/ hbase/src/ `-- hbase -&gt; /data/opt/hbase/hbase-1.2.6-src 3 建立或更新 1. opengrok.sh脚本 将opengrok.sh 加入到PATH环境变量中,或者拷贝到/usr/bin cat /usr/bin/opengrok.sh #!/bin/bash opengrok_pro_dir=`pwd` opengrok_bin_dir=`which OpenGrok` opengrok_bin_dir=`dirname $opengrok_bin_dir` opengrok_top_dir=`dirname $opengrok_bin_dir` echo &quot;Info: opengrok_pro_dir: $opengrok_pro_dir&quot; echo &quot;Info: opengrok_bin_dir: $opengrok_bin_dir&quot; echo &quot;Info: opengrok_top_dir: $opengrok_top_dir&quot; if [[ x$opengrok_bin_dir == x ]] then echo -e &quot;\\n Error: Not set path to opengrok/bin!\\n&quot; exit 1 fi if [[ x$TOMCAT_HOME == x ]] then echo -e &quot;\\n Error: Not set env TOMCAT_HOME!\\n&quot; exit 1 fi for pro in ${@} do pro_dir=$opengrok_pro_dir/$pro if [ -d $pro_dir ] then if [ ! -f $pro_dir/etc/opengrok.conf ] then echo -e &quot;\\n Error: $pro_dir/etc/opengrok.conf file Not found!\\n&quot; continue fi $TOMCAT_HOME/bin/shutdown.sh sleep 3 webapp_addr=`cat $pro_dir/etc/opengrok.conf | grep OPENGROK_WEBAPP_CFGADD | cut -d= -f2` if [[ x$webapp_addr == x ]] then webapp_addr=localhost:2424 fi port=`echo $webapp_addr | cut -d\\: -f2` echo -e &quot;\\n####check port($port):\\n&quot; netstat -anp | grep $port rm -rf $pro_dir/log/ rm -rf $pro_dir/etc/configuration.xml if [ ! -d $pro_dir/data ] then mkdir -p $pro_dir/data fi if [ ! -d $pro_dir/log ] then mkdir -p $pro_dir/log fi cp $opengrok_top_dir/lib/source.war ${pro_dir}.war unzip ${pro_dir}.war WEB-INF/web.xml sed -i -e &#39;s:/var/opengrok/etc/configuration.xml:&#39;&quot;$pro_dir/etc/configuration.xml&quot;&#39;:g&#39; &quot;WEB-INF/web.xml&quot; sed -i -e &#39;s/localhost:2424/&#39;&quot;$webapp_addr&quot;&#39;/g&#39; &quot;WEB-INF/web.xml&quot; zip ${pro_dir}.war -u WEB-INF/web.xml rm -rf WEB-INF rm -rf $TOMCAT_HOME/${pro_dir}* $TOMCAT_HOME/bin/startup.sh echo &quot;Info: Wait 5s for tomcat startup&quot; sleep 5 mv ${pro_dir}.war $TOMCAT_HOME/webapps/ OPENGROK_INSTANCE_BASE=$pro_dir OPENGROK_CONFIGURATION=$pro_dir/etc/opengrok.conf OpenGrok index else echo &quot;\\n Error: $pro_dir directory Not found!\\n&quot; fi done 2. 执行脚本 进入工程总目录 &gt; cd /projects/opengrok 多个 &gt; opengrok.sh avro hadoop hbase 单个 &gt; opengrok.sh avro 3. 编写index.html cat /opt/tomcat/webapps/source/index.html &lt;html&gt; &lt;title&gt;Mermaid Opengrok&lt;/title&gt; &lt;style&gt; body{ width: 50%; margin:0 auto; text-align:center } &lt;/style&gt; &lt;body&gt; &lt;h1 align=&quot;center&quot;&gt;Opengrok&lt;/h1&gt; &lt;h2 align=&quot;left&quot;&gt;Data Mining&lt;/h2&gt; &lt;ul&gt; &lt;li align=&quot;left&quot;&gt;&lt;a name=&quot;hadoop_link&quot; href=&quot;../hadoop&quot;&gt;Hadoop &lt;/a&gt;&lt;/li&gt; &lt;li align=&quot;left&quot;&gt;&lt;a name=&quot;hbase_link&quot; href=&quot;../hbase&quot;&gt;Hbase &lt;/a&gt;&lt;/li&gt; &lt;li align=&quot;left&quot;&gt;&lt;a name=&quot;avro_link&quot; href=&quot;../avro&quot;&gt;Avro &lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; &lt;/html&gt; 4. 浏览器访问 &gt; http://localhost:8080/source Opengrok-首页 Opengrok-Hadoop","tags":[{"name":"How","slug":"How","permalink":"https://qrsforever.github.io/tags/How/"}]},{"title":"(原创)Twisted InlineCallback 机制","date":"2017-09-11T07:06:16.000Z","path":"2017/09/11/Note/Python/Note-Twisted-InlineCallback/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Deferred的callback和addCallbacks方法 addCallbacks() callback() runCallbacks() InlineCallbacks 实例 实例源码 三个Deffered对象 getRemoteData()生成器 InlineCallbacks 源码分析 源码 [@defer.inlineCallbacks 展开](#deferinlinecallbacks-展开) 揭开谜底 d0.addCallback() +----------------------------------------------------------------------------------------------------------------------+ | | | (g) v | main inlineCallbacks getRemoteData loadRemoteData loadRemoteData2 getResult | | | \\ | | | | | | | \\inner | | | | | | | \\ | | | | | |-------------&gt;| \\ | | | | | | | gotResult | | | | | | |d0 | | | | | | | | | g.send(None) | | | | | | |---------------------------&gt;| | | | | | | | | | | | | | | | |d1 | | | +-- d0|&lt;-------------| | | | | | | | |return is deffer|---callInThread | | | | ----d1|&lt;---------------------------| | | | | | / -| | | | | | | / | / | | | | | | | addBoth() | / | | Thread |--------------&gt;| | | | | | / | | | | | | | +-------------- | r = 1 | | callback(1) | | | | |&lt;----------------------------------------| | | | | r = 1 | | = | | | |&lt;----------| | | | | | | | | | | | | g.send(1) | | | | |---------------------------&gt;|r1 = 1 | | | | | | | | | | | |d2 | | | | | | | | | | |return is deffer|--callInThread | | | ----d2|&lt;---------------------------| | | | | / | | | | | | | / | | | | | | | addBoth() | | | Thread |-------------------------------------&gt;| | | | | | | | | | | +------| | r = 2 | |callback(2) | | | |&lt;---------------------------------------------------------------| | | | r = 2 | | = | | |&lt;----------| | | | | | | | | | g.send(2) | | | |---------------------------&gt;|r2 = 2 | | | | | | | |--returnValue(r1+r2) | | | = | | | | try.catch | | | |&lt;------------------------------------|raise e(3) | | | | | | | | | d0.callback(3) | | |------------------------------------------------------------------------------------------------&gt;| | = | | | | 3 &lt;----|output | = = 此图对应源码 1 Deferred的callback和addCallbacks方法 1.1 addCallbacks() def addCallbacks(self, callback, errback=None, callbackArgs=None, callbackKeywords=None, errbackArgs=None, errbackKeywords=None): cbs = ((callback, callbackArgs, callbackKeywords), (errback or (passthru), errbackArgs, errbackKeywords)) self.callbacks.append(cbs) if self.called: self._runCallbacks() return self 1.2 callback() def callback(self, result): self._startRunCallbacks(result) def _startRunCallbacks(self, result): self.called = True self.result = result self._runCallbacks() 由 self.called 变量控制执行_runCallbacks(), 默认为False, 只有调用callback之后才赋值True, 所以在没有调用callback之前调用 addCallBacks只是把cbs存放到self.callbacks变量中. 一般在调用callback之前会处理好需要的数据(eg: Request), 调用时把结果result作为 参数传给之前加进来的callbacks. 1.3 runCallbacks() while current.callbacks: item = current.callbacks.pop(0) callback, args, kw = item[ isinstance(current.result, failure.Failure)] args = args or () kw = kw or {} ... try: current._runningCallbacks = True try: current.result = callback(current.result, *args, **kw) if current.result is current: ... finally: current._runningCallbacks = False except: current.result = failure.Failure(captureVars=self.debug) else: if isinstance(current.result, Deferred): resultResult = getattr(current.result, &#39;result&#39;, _NO_RESULT) if resultResult is _NO_RESULT or isinstance(resultResult, Deferred) or current.result.paused: ... break else: # Yep, it did. Steal it. current.result.result = None # Make sure _debugInfo&#39;s failure state is updated. if current.result._debugInfo is not None: current.result._debugInfo.failResult = None current.result = resultResult pop(0)始终弹出最早放进去的item(cb,eb), 也就是按addCallbacks的先入先出的顺序, 这个很关键, 以为前一个callback回调的返回是下一个 回调函数的输入. &gt; current.result = callback(current.result, *args, **kw) 2 InlineCallbacks 实例 2.1 实例源码 #!/usr/bin/python3 # -*- coding: utf-8 -*- from twisted.internet import defer, reactor def loadRemoteData(callback): print(&quot;---&gt; loadRemoteData callback: &quot;, callback) import time time.sleep(1) callback(1) # 将1传给getResult, 只有callback之后才能触发callbacks结果 def loadRemoteData2(callback): print(&quot;---&gt; loadRemoteData2 callback: &quot;, callback) import time time.sleep(1) callback(2) @defer.inlineCallbacks def getRemoteData(): d1 = defer.Deferred() # d1.callback 遍历回调所有callbacks reactor.callInThread(loadRemoteData, d1.callback) print(&quot;yiled d1: &quot;, d1) r1 = yield d1 d2 = defer.Deferred() reactor.callInThread(loadRemoteData2, d2.callback) print(&quot;yiled d2: &quot;, d2) r2 = yield d2 # 主动抛出_DefGen_Return异常, 异常的内容就是r1+r2 defer.returnValue(r1+r2) # 函数中调用raise # 或者return导致抛StopIteration # return r1 + r2 def getResult(v): print (&quot;result = &quot;, v) if __name__ == &#39;__main__&#39;: d0 = getRemoteData() print(&quot;main d0 : &quot;, d0) d0.addCallback(getResult) # import time # time.sleep(4) # 以下两行可以使用sleep替换, 不影响功能测试 reactor.callLater(4, reactor.stop); reactor.run() 执行: twisted$ ./inlineCallback.py yiled d1: &lt;Deferred at 0x7f6b2a57fdd8&gt; main d0 : &lt;Deferred at 0x7f6b2a57fe10&gt; ---&gt; loadRemoteData callback: &lt;bound method Deferred.callback of &lt;Deferred at 0x7f6b2a57fdd8&gt;&gt; yiled d2: &lt;Deferred at 0x7f6b25f75668&gt; ---&gt; loadRemoteData2 callback: &lt;bound method Deferred.callback of &lt;Deferred at 0x7f6b25f75668&gt;&gt; result = 3 twisted$ 代码流程图 2.2 三个Deffered对象 对象名 对象地址 备注 d0 0x7f6b2a57fe10 由@defer.inlineCallbacks内部创建, 且getResult回调持有者 d1 0x7f6b2a57fdd8 由getRemoteData函数创建, 被@defer.inlineCallbacks包装 d2 0x7f6b25f75668 同上 2.3 getRemoteData()生成器 该函数中有yield调用, 则getRemoteData转变为生成器, 函数不会阻塞马上会返回, 而且被@defer.inlineCallbacks封装起来, 只有生成器函数 调用next()/send()方法才触发getRemoteData代码继续执行, 上面的实例并没有任何地方调用send/next, 程序是如何运行的? 还有通过d0的打印 来看d0的类型是Deffered对象而不是生成器函数? 带着这些疑问继续往下看. 3 InlineCallbacks 源码分析 3.1 源码 def inlineCallbacks(f): @wraps(f) def unwindGenerator(*args, **kwargs): try: gen = f(*args, **kwargs) except _DefGen_Return: raise TypeError() if not isinstance(gen, types.GeneratorType): raise TypeError() return _inlineCallbacks(None, gen, Deferred()) return unwindGenerator def _inlineCallbacks(result, g, deferred): waiting = [True, # waiting for result? None] # result while 1: try: isFailure = isinstance(result, failure.Failure) if isFailure: result = result.throwExceptionIntoGenerator(g) else: result = g.send(result) except StopIteration as e: deferred.callback(getattr(e, &quot;value&quot;, None)) return deferred except _DefGen_Return as e: ... deferred.callback(e.value) return deferred except: deferred.errback() return deferred if isinstance(result, Deferred): def gotResult(r): if waiting[0]: waiting[0] = False waiting[1] = r else: _inlineCallbacks(r, g, deferred) result.addBoth(gotResult) if waiting[0]: waiting[0] = False return deferred result = waiting[1] waiting[0] = True waiting[1] = None return deferred class _DefGen_Return(BaseException): def __init__(self, value): self.value = value def returnValue(val): raise _DefGen_Return(val) g.send()返回如果是个Defferred, 需要对改Defferred注册cb,eb方法, 等待Defferred执行callbacks时会触发回调,并将结果传下来,再次调用 _inlineCallbacks(), 如果g.send()返回是非Defferred对象, 则直接将该返回值作为g.send()的参数, 继续... 3.2 @defer.inlineCallbacks 展开 def getRemoteData(): d1 = defer.Deferred() # d1.callback 遍历回调所有callbacks reactor.callInThread(loadRemoteData, d1.callback) print(&quot;yiled d1: &quot;, d1) r1 = yield d1 d2 = defer.Deferred() reactor.callInThread(loadRemoteData2, d2.callback) print(&quot;yiled d2: &quot;, d2) r2 = yield d2 # 主动抛出_DefGen_Return异常, 异常的内容就是r1+r2 defer.returnValue(r1+r2) # 函数中调用raise # 或者return导致抛StopIteration # return r1 + r2 def inlineCallbacks.unwindGenerator(*args, **kwargs): try: gen = getRemoteData(*args, **kwargs) except _DefGen_Return: raise TypeError() if not isinstance(gen, types.GeneratorType): raise TypeError() return _inlineCallbacks(None, gen, Deferred()) d0 = inlineCallbacks.unwindGenerator() 前面说过getRemoteData是个生成器, gen = getRemoteData(*args, **kwargs)这个调用会立即返回, 并作为参数传给_inlineCallbacks, 猜测 生成器gen的next/send的调用应该发生再_inlineCallbacks中. 3.3 揭开谜底 查看源码会发现_inlineCallbacks()函数所有的return都是deferred变量, 这个变量是在InlineCallBacks的闭包函数里传入的Deffered(),实 际上这个值就是上层函数中的d0对象, d0对象在哪创建的疑问解决了; _inlineCallbacks()里虽然有while 1循环, 但是调用它并不会使其阻塞 ,原因就是return直接返回. 调用路线: result = g.send(result) --&gt; if isinstance(result, Deferred) --&gt; result.addBoth(gotResult) --&gt; return deferred; 根据生成器规则(r = yield x), send的参数会传给r(第一次特殊None), 生成器函数返回x(=g.send()). 第一次send: result = g.send(result), 此时参数result是None, 返回result是d1 result.addBoth(gotResult) == d1.addBoth(gotResult) 当某线程调用d1.callback()时, 会触发gotResult()函数调用, 并且d1.callback传入的参数1会传给gotResult(1), 又会触发_inlineCallbacks(). 第二次send: result = g.send(result), 此时参数result就是1, 返回result是d2 result.addBoth(gotResult) == d2.addBoth(gotResult) 当某线程调用d2.callback()时, 会触发gotResult()函数调用, 并且d2.callback传入的参数2会传给gotResult(2), 又会触发_inlineCallbacks(). 第三次send: result = g.send(result), 此时参数result就是2, getRemoteData()结束调用defer.returnValue(1+2), 触发异常_DefGen_Return(). 捕捉异常, 获取异常值3 deferred.callback(e.value) return deferred","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"}]},{"title":"(原创)Dalvik与Art虚拟机-笔记片段","date":"2017-09-05T02:07:00.000Z","path":"2017/09/05/Note/Android/Dalvik-Art-Snippet/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} What are Dalvik and ART? What's actually different between ART and Dalvik? Just-in-time compilation (JIT) Ahead-of-time compilation (AOT) 虚拟机启动 | Java VM | +-----------------------------+ | | | | | JNI_GetDefaultJavaVMInitArgs| | | JNI_CreateJavaVM | | | JNI_GetCreatedJavaVMs | | | | | +-----------------------------+ | | | | | dlopen | dlsym | | | +---------------------------------------------------------+ | | | | libdvm.so | | libart.so | v v | +-----------------------------+ +-----------------------------+ | | | | | | | JNI_GetDefaultJavaVMInitArgs| | JNI_GetDefaultJavaVMInitArgs| | | JNI_CreateJavaVM | | JNI_CreateJavaVM | | | JNI_GetCreatedJavaVMs | | JNI_GetCreatedJavaVMs | | | | | | | +-----------------------------+ +-----------------------------+ | Dalvik VM Art VM | ---------------------------------------------------------------------------------------------------------------+ ^ app_main.cpp | | | impl: 实现无缝替换 | | +--&gt; main() JniInvocation | ********* ^ +--&gt; AppRuntime::start() **** **** | | | * mJavaVM * +-------+ pid == 0 | | **** **** / +---------------------------------------------------+ v ********* / | | AndroidRuntime / | | | / | pid &gt; 0 | | / +-------------------------------------+ | |---&gt; onStarted() / | | | | / | | | | |---&gt; onVmCreated() / | | | | | / | | | | |---&gt; start() / | | v | | | / | | |---&gt; handleParentProc() | | | / | | | | startReg() &lt;---| +---&gt; JniInvocation.init() Zygote.forkAndSpecialize() &lt;---+ | | | | | |---&gt; handleChildProc() | | +---&gt; startVm() | | ^ | | | start the virtual machine | | | | | | runOnce() &lt;---+ | | | +---&gt; onVmCreated() | +-------------+ | subclass impl | | | +---&gt; startReg() ZygoteConnection | register android functions ^ | | | | +---&gt; env-&gt;CallStaticVoidMethod(&quot;main&quot;) | | | | | | | . v | Shutdown VM ZygoteInit /| | socket / | | --------/ | +---&gt; main() / | | | / zygote | | | / | +---&gt; registerZygoteSocket()---- | | | | | +---&gt; preload() | | load classes, resources, libs | | | +---&gt; gc() | | | | peer.runOnce() | +---&gt; runSelectLoop() ------------------------+ | | +---&gt; closeServerSocket() 1 What are Dalvik and ART? Dalvik is a virtual machine designed to run applications and code written in Java. It's hard to explain this without getting very technical but suffice to say it's how apps are able to work on your Android operating system. Any application written in Java code needs a Java Virtual Machine to run. Dalvik is a mobile version of a Java Virtual Machine. When Android released the KitKat operating system in 2013, it introduced a replacement for Dalvik called ART. ART stands for Android runtime. Two years went into developing ART and its capabilities are vastly different to Dalvik The idea is that Android devices using ART will perform better than those using Dalvik. ART's existence and it’s improved performance is made possible by the fact that modern smartphones are significantly more advanced than the first generation of Android devices. 2 What's actually different between ART and Dalvik? 2.1 Just-in-time compilation (JIT) Before apps can be run on Android, the code behind them must be compiled into machine code (which is basically what ART and Dalvik are there for). Dalvik uses JIT, or just-in-time compilation. What that means is whenever you use an app; the code it needs to run is compiled, but only that piece. If you use another part of the app, more code will be compiled. The compiled code is then cached so that it can be reused while you are still running the app. Code is compiled as it is needed. This just-in-time method means that Dalvik uses relatively little memory to perform its tasks, which was ideal for earlier Android devices that had less memory. Memory space is less of a problem for today's devices, which is what lead to the development of ART. 2.2 Ahead-of-time compilation (AOT) ART collects the code into a system-dependent binary by pre-storing all of it during installation. This means it only ever has to be compiled once. Because of this, apps will run faster on Android devices using ART because there's no need for the code to be compiled each time they are required to run. The other upside of ART is that it uses native execution, which means that it runs app machine code directly. The beneficial result of native execution is that it places less strain on the CPU than Dalvik's JIT compiling. The lower CPU usage should translate into longer battery life. There are a couple of trade-offs for this improved performance. One is that the compiled code takes up more space in your device's memory. The second is that because the code is compiled during installation, it takes longer to install apps. 3 虚拟机启动","tags":[{"name":"Android","slug":"Android","permalink":"https://qrsforever.github.io/tags/Android/"}]},{"title":"(原创)笔记-Twisted的Deffered机制","date":"2017-09-01T08:41:00.000Z","path":"2017/09/01/Note/Python/Note-Twisted-Deffered-Machanism/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} Twisted介绍 Deffereds Callback Timeouts 源码实例 代码-1 (单回调) 代码-2 (多回调) 代码-3 (线程) 源码剖析 Deffered类 reactor方法 1. reactor.callLater() 2. reactor.run() 3. reactor.callInThread() reactor --&gt; Linux | | v class EPollReactor(posixbase.PosixReactorBase, posixbase._PollLikeMixin): △ | +------------------------+ _newTimedCalls | / ^ class PosixReactorBase(_SignalReactorMixin, _DisconnectSelectableMixin, ReactorBase): / | ^ △ / | | | / | 存放 +-----------------+ +-----------------+ / | | | /--------------- | class _SignalReactorMixin(object): class ReactorBase(object): / | | | pack a callable obj | | |--&gt; callLater() -----------------&gt; class DelayedCall: | | / | 1 +--&gt; run() | / | | |--&gt; fireSystemEvent(&quot;startup&quot;) / | | | start threadpool / | 2 +--&gt; startRunning() ---&gt; startRunning() &lt;--+ / +--&gt; getTime() | | --------/ | | | / +--&gt; active*() 3 +--&gt; mainLoop() | / | | | +--- runUntilCurrent() &lt;--+ run times call ------/ +--&gt; delay() | | | | | | | mix call | | +--&gt; __le__(), __lt__() | +---------&gt;|----------- timeout() &lt;--+ determine the sleep time | (when push order by time) | | | | | +--- doIteration() &lt;--+ | | | impl v EPollReactor.doPoll() poll(timeout, fds) mainLoop()是由几层while嵌套实现以poll机制驱动整个程序运作. 1 Twisted介绍 1.1 Deffereds Twisted uses the Deferred object to manage the callback sequence. The client application attaches a series of functions to the deferred to be called in order when the results of the asynchronous request are available (this series of functions is known as a series of callbacks, or a callback chain), together with a series of functions to be called if there is an error in the asynchronous request (known as a series of errbacks or an errback chain). The asynchronous library code calls the first callback when the result is available, or the first errback when an error occurs, and the Deferred object then hands the results of each callback or errback function to the next function in the chain. 引用 1.2 Callback A twisted.internet.defer.Deferred is a promise that a function will at some point have a result. We can attach callback functions to a Deferred, and once it gets a result these callbacks will be called. In addition Deferreds allow the developer to register a callback for an error, with the default behavior of logging the error. The deferred mechanism standardizes the application programmer’s interface with all sorts of blocking or delayed operations. 1.3 Timeouts Timeouts are a special case of Cancellation. Let’s say we have a Deferred representing a task that may take a long time. We want to put an upper bound on that task, so we want the Deferred to time out X seconds in the future. A convenient API to do so is Deferred.addTimeout. By default, it will fail with a TimeoutError if the Deferred hasn’t fired (with either an errback or a callback) within timeout seconds. 2 源码实例 2.1 代码-1 (单回调) #!/usr/bin/python3 # -*- coding: utf-8 -*- from twisted.internet import reactor, defer def getDummyData(inputData): print(&#39;getDummyData called&#39;) deferred = defer.Deferred() reactor.callLater(2, deferred.callback, inputData * 3) return deferred def cbPrintData(result): print(&#39;Result received: {}&#39;.format(result)) deferred = getDummyData(3) deferred.addCallback(cbPrintData) # manually set up the end of the process by asking the reactor to # stop itself in 4 seconds time reactor.callLater(4, reactor.stop) # start up the Twisted reactor (event loop handler) manually print(&#39;Starting the reactor&#39;) reactor.run() 如果reactor.callLater(2, deferred.callback, inputData * 3)参数deferred.callback换成普通函数, 那么deferred.addCallback添加的 callback将不会执行, 要理解DelayCall对象和Deffered中callbacks之间的联系. Deffered类 如果有多个deferred.addCallback, 前一个回调的返回作为后一个callback的参数. 2.2 代码-2 (多回调) #!/usr/bin/python3 # -*- coding: utf-8 -*- from twisted.internet import reactor, defer class Getter: def gotResults(self, x): if self.d is None: print(&quot;Nowhere to put results&quot;) return d = self.d self.d = None if x % 2 == 0: d.callback(x*3) else: d.errback(ValueError(&quot;You used an odd number!&quot;)) def _toHTML(self, r): return &quot;Result: %s&quot; % r def getDummyData(self, x): self.d = defer.Deferred() reactor.callLater(2, self.gotResults, x) self.d.addCallback(self._toHTML) return self.d def cbPrintData(result): print(result) def ebPrintError(failure): import sys sys.stderr.write(str(failure)) # this series of callbacks and errbacks will print an error message g = Getter() d = g.getDummyData(3) d.addCallback(cbPrintData) d.addErrback(ebPrintError) # this series of callbacks and errbacks will print &quot;Result: 12&quot; g = Getter() d = g.getDummyData(4) d.addCallback(cbPrintData) d.addErrback(ebPrintError) reactor.callLater(4, reactor.stop) reactor.run() 2.3 代码-3 (线程) #!/usr/bin/python3 # -*- coding: utf-8 -*- from twisted.internet.defer import Deferred from twisted.internet import reactor import threading def loadRemoteData(callback, errback, url): print(&quot;thread[%s] url = %s&quot; % (threading.current_thread().name, url)) # callback 和 errback 只能调用其中一个, 否则:AlreadyCalledError callback(&#39;callback data&#39;) # errback(ValueError(&quot;errback dat&quot;)) def getResult(v): print(&quot;thread[%s] result = %s&quot; % (threading.current_thread().name, v)) def getError(e): print(&quot;thread[%s] error = %s&quot; % (threading.current_thread().name, str(e))) if __name__ == &#39;__main__&#39;: d = Deferred() d.addCallback(getResult) d.addErrback(getError) print(&quot;main():thread[%s]&quot; % threading.current_thread().name) reactor.callInThread(loadRemoteData, d.callback, d.errback, &quot;http://www.baidu.com&quot;) reactor.callLater(4, reactor.stop); reactor.run() 3 源码剖析 主要文件: 1. defer.py 2. base.py 3.1 Deffered类 class Deferred | callbacks: 存callback, _chainedTo: 将多个Deffered串成链 reactor.callLater | | +---&gt; addCallbacks() &lt;---+----+----+ | | | | | | +---&gt; addCallback() -----+ | | call v | | | DelayedCall +---&gt; addErrback() -----------+ | | | | | +---&gt; addBoth() -----------+-------+ | | | v +---&gt; addTimeout() --------+ reactor.run | | +---&gt; pause()/cancel() | | | | Understand the relation between callback and DelayCall v +---&gt; callback() --------- &lt;----------------------------------------------------+ timeout | call / | | +---&gt; errback()----- / | | | / / | | | / / | v | v v DelayedCall.fun()--&gt;Deferred.callback() +---&gt; _runCallbacks | | | | | o----&gt; item = callbacks.pop(0) | | | | | | Normal: | | o----&gt; item.callbak() &lt;------------------------------------------------------+ | | | | Exception: | o----&gt; failure.Failure() | | 3.2 reactor方法 3.2.1 1. reactor.callLater() // reactor.callLater(2, deferred.callback, inputData * 3) @implementer(IReactorCore, IReactorTime, IReactorPluggableResolver, IReactorPluggableNameResolver) class ReactorBase(object): ... def callLater(self, _seconds, _f, *args, **kw): tple = DelayedCall(self.seconds() + _seconds, _f, args, kw, self._cancelCallLater, self._moveCallLaterSooner, seconds=self.seconds) self._newTimedCalls.append(tple) return tple 将参数封装到DelayedCall对象中并存储在_newTimeCalls变量中, 需要注意的是callLater处理及回调函数还是在主线程中调用的. 3.2.2 2. reactor.run() // reactor.run() class _SignalReactorMixin(object): ... def run(self, installSignalHandlers=True): self.startRunning(installSignalHandlers=installSignalHandlers) self.mainLoop() def startRunning(self, installSignalHandlers=True): self._installSignalHandlers = installSignalHandlers ReactorBase.startRunning(self) def mainLoop(self): while self._started: try: while self._started: self.runUntilCurrent() t2 = self.timeout() t = self.running and t2 self.doIteration(t) except: log.msg(&quot;Unexpected error in main loop.&quot;) log.err() else: log.msg(&#39;Main loop terminated.&#39;) _SignalReactorMixi 混合类, 调用了与它自身没有任何血缘关ReactorBase的方法runUntilCurrent, timeout, doIteration及startRunning. class ReactorBase(object): | | +---&gt; startRunning() | | | | | | +------o---&gt; fireSystemEvent() | | &quot;startup&quot; | | | o---&gt; _eventTriggers.get() | | | | | o---&gt; event.fireEvent() | | | running = True | | | o---&gt; DeferredList.addCallback() +---&gt; mainLoop() | | | | | | | o---&gt; Deferred._runCallbacks() | o---&gt; runUntilCurrent() | | | | _pendingTimedCalls | 队列中以时间排序 | reactor在install初始化时完成了两个重要操作: 1. self._initThreads() 线程池 2. self.installWaker() 唤醒线程, impl: PosixReactorBase.installWaker class ReactorBase(object): ... def runUntilCurrent(self): &quot;&quot;&quot; Run all pending timed calls. &quot;&quot;&quot; if self.threadCallQueue: count = 0 total = len(self.threadCallQueue) for (f, a, kw) in self.threadCallQueue: try: f(*a, **kw) except: log.err() count += 1 if count == total: break del self.threadCallQueue[:count] if self.threadCallQueue: self.wakeUp() # insert new delayed calls now self._insertNewDelayedCalls() now = self.seconds() while self._pendingTimedCalls and (self._pendingTimedCalls[0].time &lt;= now): call = heappop(self._pendingTimedCalls) if call.cancelled: self._cancellations-=1 continue if call.delayed_time &gt; 0: call.activate_delay() heappush(self._pendingTimedCalls, call) continue try: call.called = 1 call.func(*call.args, **call.kw) except: ... if (self._cancellations &gt; 50 and self._cancellations &gt; len(self._pendingTimedCalls) &gt;&gt; 1): self._cancellations = 0 self._pendingTimedCalls = [x for x in self._pendingTimedCalls if not x.cancelled] heapify(self._pendingTimedCalls) if self._justStopped: self._justStopped = False self.fireSystemEvent(&quot;shutdown&quot;) 3.2.3 3. reactor.callInThread() 涉及文件: 文件 路径 base.py /usr/local/lib/python3.4/dist-packages/twisted/internet defer.py /usr/local/lib/python3.4/dist-packages/twisted/internet threadpool.py /usr/local/lib/python3.4/dist-packages/twisted/python context.py /usr/local/lib/python3.4/dist-packages/twisted/python _pool.py /usr/local/lib/python3.4/dist-packages/twisted/_threads _team.py /usr/local/lib/python3.4/dist-packages/twisted/_threads _threadworker.py /usr/local/lib/python3.4/dist-packages/twisted/_threads context.py模块中call/get方法代理: def installContextTracker(ctr): global theContextTracker global call global get theContextTracker = ctr call = theContextTracker.callWithContext get = theContextTracker.getContext installContextTracker(ThreadedContextTracker()) func函数线程调用图: ReactorBase Deferred ThreadPool ContextTracker Team LockWorker ThreadWorker LocalStorage | | | | | | | | callInThread | | | | | | +----------------------------&gt;|callInThread | | | | | | func | | | | | | | | | | inContext| | | | | callInThreadWithCallback---------------&gt;|do | | | | | | | | | | | | | | | | | | | | +------------&gt;|do | | | | | work | | | | | | | | append | | | | |----------------------------------&gt;|working | | | | | | | | | | pop | | | |&lt;------------------------------------------------| +----------------------+ | | _coordinateThisTask | | _coordinateThisTask | | | | _pool.py | | | | | | | | | +--------------+ | | | worker |-------------------------&gt;| __init__ | | doWork | | | | | limitedWorkerCreator | | | | +----------+ | | | | | | | | | | | inContext| | | | | | | | | | | | +----+ | | | | | | startThread &lt;------------| | | | |func| | | | | | | | | | | | | +----+ | | | | | | | | | | | +----------+ | | | | | Thread.start()------------&gt;| work() | +--------------+ | | | | | | +----------------------+ | | | | while | get task | | @worker.do| | |&lt;------&lt; | | |-------------------------&gt;|do | | | | | | | | | | | | put task | | | | | |--------&gt; | | | | | | | | | | | | | | | doWork |&lt;------------------------------ task()-------^ | | | | | | | | | | inContext&lt;--------task() &lt;---+ | &lt;===&gt; thread end! | | | | theWork() | | _recycleWorker |----------&gt;| context.call | | | | callWithContext | | func() &lt;-----------------------------------+ 过程: 初始化线程池ThreadPool --&gt; 线程协调LockWorker --&gt; 创建工作线程ThreadWorker --&gt; 传递任务(team.do) --&gt; 线程中处理任务 --&gt; 回收 线程 原理: ThreadWorker维护Queue将传递过来的task加入队列, ThreadWorker在初始化时调用startThread()启动Thread.start, 到此一个新的 线程被创建, 该新线程会执行ThreadWorker中work方法, work方法从Queue队列中取新的task去执行.","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"}]},{"title":"(原创)Scrapy之命令行启动流程","date":"2017-08-31T08:01:00.000Z","path":"2017/08/31/Note/Python/Note-Scrapy-Start-Flow/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; left: -4em; } pre.numberSource a.sourceLine::before { content: attr(title); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; } /* Alert */ code span.an { color: #008000; } /* Annotation */ code span.at { } /* Attribute */ code span.bu { } /* BuiltIn */ code span.cf { color: #0000ff; } /* ControlFlow */ code span.ch { color: #008080; } /* Char */ code span.cn { } /* Constant */ code span.co { color: #008000; } /* Comment */ code span.cv { color: #008000; } /* CommentVar */ code span.do { color: #008000; } /* Documentation */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.im { } /* Import */ code span.in { color: #008000; } /* Information */ code span.kw { color: #0000ff; } /* Keyword */ code span.op { } /* Operator */ code span.ot { color: #ff4000; } /* Other */ code span.pp { color: #ff4000; } /* Preprocessor */ code span.sc { color: #008080; } /* SpecialChar */ code span.ss { color: #008080; } /* SpecialString */ code span.st { color: #008080; } /* String */ code span.va { } /* Variable */ code span.vs { color: #008080; } /* VerbatimString */ code span.wa { color: #008000; font-weight: bold; } /* Warning */ Scrapy 命令启动 scrapy crawl 执行流程 Crawler, Spider和Engine +------------------------------&gt; Settings &lt;-------------------------------------------------+ | | settings.py | ◆ | extend +-------------------+ | ScrapyCommand ▽ | SPIDER_MIDDLEWARES| | △ | BaseSettings | ITEM_PIPELINES | | | | | | SPIDER_MODULES | | | o---&gt; add_options() | +-------------------+ | | | o---&gt; setmodule() | | | | | | | | Command o---&gt; process_options() | |------------+ | | | o---&gt; set &lt;--| | | | | = | | o---&gt; virtual run() | | | | crawl o---&gt; run() | | | | command: | | | | ★ 1 +-------------------------------------------------+ | | = +---&gt; crawler_process.crawl() | | | | | | scrapy crawl --nolog s51job -o /tmp/result.csv | | | | 5 | | | | +---&gt; crawler_process.start() +-------------------------------------------------+ | | | | | | | extend crawlers 1:n | o----&gt; CrawlerProcess -----------------------▷ CrawlerRunner ◆-----------------------&gt; Crawler ◇-----+ | | | s51job / | | | | 2 / | ★ o---&gt; start() o---&gt; create_crawler() / o---&gt; crawl() &lt;--------+ | | | | / | | | | | | / | | | +---&gt; reactor.getThreadPool() | +----------------/ o---&gt; _create_spider | | | | | | | | | | | | | | +---&gt; reactor.run() | +------+ o---&gt; _create_engine() | | | o---&gt; stop() | | | | = | | = | | | | | o---&gt; _stop_reactor o---&gt; join() SpiderLoader | | | | | = | 4 | | o---&gt; crawl() o---&gt; _load_all_spiders() | | | | | Spider ◁----- CrawlSpider ◁----- S51jobSpider | | | 3 | | | \\ = +---&gt; crawler.crawl() o---&gt; load(name) | | | \\ | | | | start_urls &lt;---o o---&gt; rules \\ | = | | | \\ is | | | | ------- _create_spider() &lt;---+ spider | parse() &lt;---o o---&gt; parse_start_url() | &lt;----+ | | 6 | | = _create_engine() &lt;---+ engine | / | o---&gt; start_requests() is / | | yield ☜ / = = ExecutionEngine ----- ◆ | | | ★ 7 | o---&gt; open_spider() +------------------+ | | | | Slot &lt;--------------------------------+ | | | | o---&gt; start() | Twisted Deffer | | | | | o---&gt; nextcall() | | | | o---&gt; stop/pause/close() +------------------+ | | o---&gt; scheduler() | | o---&gt; download/schedule/crawl() | 8 | o---&gt; heartbeat()-----------+ | | | | o---&gt; _next_request() = | task.LoopingCall() | | +--------------------+ = 0.1 Scrapy 命令启动 0.1.1 scrapy crawl 执行流程 bin/scrapy: 7 from scrapy.cmdline import execute 8 9 if __name__ == &#39;__main__&#39;: 10 sys.argv[0] = re.sub(r&#39;(-script\\.pyw|\\.exe)?$&#39;, &#39;&#39;, sys.argv[0]) 11 sys.exit(execute()) scrapy/cmdline.py: 97 def execute(argv=None, settings=None): 98 if argv is None: 99 argv = sys.argv 100 101 # --- backwards compatibility for scrapy.conf.settings singleton --- 102 if settings is None and &#39;scrapy.conf&#39; in sys.modules: 103 from scrapy import conf 104 if hasattr(conf, &#39;settings&#39;): 105 settings = conf.settings 106 # ------------------------------------------------------------------ 107 108 if settings is None: 109 settings = get_project_settings() 110 # set EDITOR from environment if available 111 try: 112 editor = os.environ[&#39;EDITOR&#39;] 113 except KeyError: pass 114 else: 115 settings[&#39;EDITOR&#39;] = editor 116 check_deprecated_settings(settings) 117 118 # --- backwards compatibility for scrapy.conf.settings singleton --- 119 import warnings 120 from scrapy.exceptions import ScrapyDeprecationWarning 121 with warnings.catch_warnings(): 122 warnings.simplefilter(&quot;ignore&quot;, ScrapyDeprecationWarning) 123 from scrapy import conf 124 conf.settings = settings 125 # ------------------------------------------------------------------ 126 127 inproject = inside_project() 128 cmds = _get_commands_dict(settings, inproject) 129 cmdname = _pop_command_name(argv) 130 parser = optparse.OptionParser(formatter=optparse.TitledHelpFormatter(), \\ 131 conflict_handler=&#39;resolve&#39;) 132 if not cmdname: 133 _print_commands(settings, inproject) 134 sys.exit(0) 135 elif cmdname not in cmds: 136 _print_unknown_command(settings, cmdname, inproject) 137 sys.exit(2) 138 139 cmd = cmds[cmdname] 140 parser.usage = &quot;scrapy %s %s&quot; % (cmdname, cmd.syntax()) 141 parser.description = cmd.long_desc() 142 settings.setdict(cmd.default_settings, priority=&#39;command&#39;) 143 cmd.settings = settings 144 cmd.add_options(parser) 145 opts, args = parser.parse_args(args=argv[1:]) 146 _run_print_help(parser, cmd.process_options, args, opts) 147 148 cmd.crawler_process = CrawlerProcess(settings) 149 _run_print_help(parser, _run_command, cmd, args, opts) 150 sys.exit(cmd.exitcode) 151 152 def _run_command(cmd, args, opts): 153 if opts.profile: 154 _run_command_profiled(cmd, args, opts) 155 else: 156 cmd.run(args, opts) 前大部分对参数和工程Setting解析处理, 最后_run_print_help --&gt;_run_command --&gt; cmd.run, 这里的cmd实际上就是crawl commands/crawl.py: 50 def run(self, args, opts): 51 if len(args) &lt; 1: 52 raise UsageError() 53 elif len(args) &gt; 1: 54 raise UsageError(&quot;running &#39;scrapy crawl&#39; with more than one spider is no longer supported&quot;) 55 spname = args[0] 56 57 self.crawler_process.crawl(spname, **opts.spargs) 58 self.crawler_process.start() 继续调用crawler_process对象中crawl,start方法, 即CrawlerProcess, 其父类CrawlerRunner实现crawl方法 crawler.py: 110 class CrawlerRunner(object): 144 def crawl(self, crawler_or_spidercls, *args, **kwargs): 166 crawler = self.create_crawler(crawler_or_spidercls) 167 return self._crawl(crawler, *args, **kwargs) 181 def create_crawler(self, crawler_or_spidercls): 192 if isinstance(crawler_or_spidercls, Crawler): 193 return crawler_or_spidercls 194 return self._create_crawler(crawler_or_spidercls) 195 196 def _create_crawler(self, spidercls): 197 if isinstance(spidercls, six.string_types): 198 spidercls = self.spider_loader.load(spidercls) 199 return Crawler(spidercls, self.settings) crawler_or_spidercls spider名字, 经过spider_loader.load()转换为对应的spider对象(父类CrawlSpider), 这一步很关键, 自己实现的spider 继承CrawlSpider. self.spider_loader: scrapy.spiderloader.SpiderLoader spiderloader.py: 15 class SpiderLoader(object): 16 &quot;&quot;&quot; 17 SpiderLoader is a class which locates and loads spiders 18 in a Scrapy project. 19 &quot;&quot;&quot; 20 def __init__(self, settings): 21 self.spider_modules = settings.getlist(&#39;SPIDER_MODULES&#39;) 22 self.warn_only = settings.getbool(&#39;SPIDER_LOADER_WARN_ONLY&#39;) 23 self._spiders = {} 24 self._found = defaultdict(list) 25 self._load_all_spiders() ... 44 def _load_all_spiders(self): 45 for name in self.spider_modules: 47 for module in walk_modules(name): 48 self._load_spiders(module) SPIDER_MODULES: 当前工程settings.py变量 _load_all_spiders: 加载所有自定义的spider crawler.py: 27 class Crawler(object): 28 70 def crawl(self, *args, **kwargs): 71 assert not self.crawling, &quot;Crawling already taking place&quot; 72 self.crawling = True 73 74 try: 75 self.spider = self._create_spider(*args, **kwargs) 76 self.engine = self._create_engine() 77 start_requests = iter(self.spider.start_requests()) 78 yield self.engine.open_spider(self.spider, start_requests) 79 yield defer.maybeDeferred(self.engine.start) 80 except Exception: 89 self.crawling = False 90 if self.engine is not None: 91 yield self.engine.close() 92 93 if six.PY2: 94 six.reraise(*exc_info) 95 raise 97 def _create_spider(self, *args, **kwargs): 98 return self.spidercls.from_crawler(self, *args, **kwargs) self.spidercls.from_crawler调入到CrawlSpider spiders/crawl.py: 34 class CrawlSpider(Spider): 35 98 @classmethod 99 def from_crawler(cls, crawler, *args, **kwargs): 100 spider = super(CrawlSpider, cls).from_crawler(crawler, *args, **kwargs) 101 spider._follow_links = crawler.settings.getbool( 102 &#39;CRAWLSPIDER_FOLLOW_LINKS&#39;, True) 103 return spider spiders/init.py: 18 class Spider(object_ref): 49 @classmethod 50 def from_crawler(cls, crawler, *args, **kwargs): 51 spider = cls(*args, **kwargs) 52 spider._set_crawler(crawler) 53 return spider 到此应该知道自己的spider 如何创建的了 0.1.2 Crawler, Spider和Engine scrapy/crawler.py: 27 class Crawler(object): ... 70 def crawl(self, *args, **kwargs): 71 assert not self.crawling, &quot;Crawling already taking place&quot; 72 self.crawling = True 73 74 try: 75 self.spider = self._create_spider(*args, **kwargs) 76 self.engine = self._create_engine() ... 97 def _create_spider(self, *args, **kwargs): 98 return self.spidercls.from_crawler(self, *args, **kwargs) 99 100 def _create_engine(self): 101 return ExecutionEngine(self, lambda _: self.stop()) ExecutionEngine 结构: ▼ ExecutionEngine : class +__init__ : function +start : function +stop : function +close : function +pause : function +unpause : function +_next_request : function +_needs_backout : function +_next_request_from_scheduler : function +_handle_downloader_output : function +spider_is_idle : function +open_spiders : function +has_capacity : function +crawl : function +schedule : function +download : function +_downloaded : function ▼+_download : function +_on_success : function +_on_complete : function +open_spider : function +_spider_idle : function ▼+close_spider : function ▼+log_failure : function +errback : function +_close_all_spiders : function +_finish_stopping_engine : function core/engine.py: 56 class ExecutionEngine(object): 57 58 def __init__(self, crawler, spider_closed_callback): 59 self.crawler = crawler 60 self.settings = crawler.settings 61 self.signals = crawler.signals 62 self.logformatter = crawler.logformatter 63 self.slot = None 64 self.spider = None 65 self.running = False 66 self.paused = False 67 self.scheduler_cls = load_object(self.settings[&#39;SCHEDULER&#39;]) 68 downloader_cls = load_object(self.settings[&#39;DOWNLOADER&#39;]) 69 self.downloader = downloader_cls(crawler) 70 self.scraper = Scraper(crawler) 71 self._spider_closed_callback = spider_closed_callback ... 253 def open_spider(self, spider, start_requests=(), close_if_idle=True): 254 assert self.has_capacity(), &quot;No free spider slot when opening %r&quot; % \\ 255 spider.name 256 logger.info(&quot;Spider opened&quot;, extra={&#39;spider&#39;: spider}) 257 nextcall = CallLaterOnce(self._next_request, spider) 258 scheduler = self.scheduler_cls.from_crawler(self.crawler) 259 start_requests = yield self.scraper.spidermw.process_start_requests(start_requests, spider) 260 slot = Slot(start_requests, close_if_idle, nextcall, scheduler) 261 self.slot = slot 262 self.spider = spider 263 yield scheduler.open(spider) 264 yield self.scraper.open_spider(spider) 265 self.crawler.stats.open_spider(spider) 266 yield self.signals.send_catch_log_deferred(signals.spider_opened, spider=spider) 267 slot.nextcall.schedule() 268 slot.heartbeat.start(5) Setting name value SCHEDULER scrapy.core.scheduler.Scheduler DOWNLOADER scrapy.core.downloader.Downloader DUPEFILTER_CLASS scrapy.dupefilters.RFPDupeFilter SCHEDULER_PRIORITY_QUEUE queuelib.PriorityQueue SCHEDULER_DISK_QUEUE scrapy.squeues.PickleLifoDiskQueue SCHEDULER_MEMORY_QUEUE scrapy.squeues.LifoMemoryQueue SPIDER_LOADER_CLASS scrapy.spiderloader.SpiderLoader","tags":[{"name":"Python","slug":"Python","permalink":"https://qrsforever.github.io/tags/Python/"}]},{"title":"(原创)Tutorial for Markdown","date":"2017-08-30T07:31:00.000Z","path":"2017/08/30/Tutorial/Markdown/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; left: -4em; } pre.numberSource a.sourceLine::before { content: attr(title); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; } /* Alert */ code span.an { color: #008000; } /* Annotation */ code span.at { } /* Attribute */ code span.bu { } /* BuiltIn */ code span.cf { color: #0000ff; } /* ControlFlow */ code span.ch { color: #008080; } /* Char */ code span.cn { } /* Constant */ code span.co { color: #008000; } /* Comment */ code span.cv { color: #008000; } /* CommentVar */ code span.do { color: #008000; } /* Documentation */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.im { } /* Import */ code span.in { color: #008000; } /* Information */ code span.kw { color: #0000ff; } /* Keyword */ code span.op { } /* Operator */ code span.ot { color: #ff4000; } /* Other */ code span.pp { color: #ff4000; } /* Preprocessor */ code span.sc { color: #008080; } /* SpecialChar */ code span.ss { color: #008080; } /* SpecialString */ code span.st { color: #008080; } /* String */ code span.va { } /* Variable */ code span.vs { color: #008080; } /* VerbatimString */ code span.wa { color: #008000; font-weight: bold; } /* Warning */ Markdown 基本语法 块注释 斜体 粗体 无序列表 有序列表 链接 锚点 图片 代码 段落 换行 表格 分割线 反斜杠 0.1 Markdown 基本语法 Pandoc pass attributes via {}. see 锚点 0.1.1 块注释 &gt; 块注释0 &gt; &gt; &gt; 块注释1 &gt; &gt; &gt; &gt; 块注释2 &gt; ## This is a header. &gt; &gt; 1. This is the first list item. &gt; 2. This is the second list item. &gt; &gt; Here&#39;s some example code: &gt; &gt; return shell_exec(&quot;echo $input | $markdown_script&quot;); &gt; This is a block quote. This &gt; paragraph has two lines. &gt; &gt; 1. This is a list inside a block quote. &gt; 2. Second item. &gt; This is a block quote. &gt; &gt; &gt; A block quote within a block quote. 块注释0 块注释1 块注释2 0.1.1 This is a header. This is the first list item. This is the second list item. Here's some example code: return shell_exec(&quot;echo $input | $markdown_script&quot;); This is a block quote. This paragraph has two lines. This is a list inside a block quote. Second item. This is a block quote. A block quote within a block quote. 0.1.2 斜体 *斜体0* _斜体1_ 斜体0 斜体1 0.1.3 粗体 **粗体0** __粗体1__ 粗体0 粗体1 0.1.4 无序列表 * 无序0 - 无序1 + 无序2 无序0 无序1 无序2 0.1.5 有序列表 1. 有序0 2. 有序1 3. 有序2 有序0 有序1 有序2 0.1.6 链接 内联方式 [百度](http://www.baidu.com) 引用方式 [谷歌][1] [百度][2] [1]: http://www.google.com &quot;谷歌&quot; [2]: http://www.baidu.com &quot;百度&quot; 内联方式 百度 引用方式 谷歌 百度 0.1.7 锚点 Pandoc在标题行加`{#myanchor}`, 可以实现锚点. [AnchorText]{#mytext} &lt;span id=&quot;m1&quot;&gt;锚点1：&lt;/span&gt; anchor1 anchor1 anchor1 anchor1 anchor1 anchor1 anchor1 &lt;span id=&quot;m2&quot;&gt;锚点2：&lt;/span&gt; anchor2 anchor2 anchor2 anchor2 anchor2 anchor2 anchor2 [锚点1](#m1 &quot;anchor alt text&quot;) [锚点2][anchor2] [anchor2]:#m2 &quot;anchor alt text&quot; [锚点3](#mytext) AnchorText 锚点1： anchor1 anchor1 anchor1 anchor1 anchor1 anchor1 anchor1 锚点2： anchor2 anchor2 anchor2 anchor2 anchor2 anchor2 anchor2 锚点1 锚点2 锚点3 0.1.8 图片 &lt;div align=&#39;center&#39;&gt; 内联方式：![alt text](/img/avatar.jpg &quot;Title&quot;) 引用方式：![alt text][id] &lt;/div&gt; [id]: /img/avatar.jpg &quot;Title&quot; pandoc: ![link text](/img/avatar.jpg){ width=50% height=40px } 内联方式： 引用方式： pandoc: link text 0.1.9 代码 \\`one line\\` \\`\\`\\`java for (int i = 0; i &lt; 100; ++i) printf(i); \\`\\`\\` \\`\\`\\` for (int i = 0; i &lt; 100; ++i) printf(&quot;longggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg line&quot;); \\`\\`\\` for (int i = 0; i &lt; 100; ++i) printf(i); for (int i = 0; i &lt; 100; ++i) printf(i); for (int i = 0; i &lt; 100; ++i) printf(i); one line for (int i = 0; i &lt; 100; ++i) printf(i); for (int i = 0; i &lt; 100; ++i) printf(&quot;longggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg line&quot;); for (int i = 0; i &lt; 100; ++i) printf(i); for (int i = 0; i &lt; 100; ++i) printf(i); for (int i = 0; i &lt; 100; ++i) printf(i); 0.1.10 段落 &gt; Hello World 111111111111 &gt;&gt; Hello World 222222222222 &gt;&gt;&gt; Hello World \\`\\`\\`java for (int i = 0; i &lt; 100; ++i) printf(i); \\`\\`\\` Normal Hello World 111111111111 &gt; Hello World 222222222222 &gt;&gt; Hello World for (int i = 0; i &lt; 100; ++i) printf(i); Normal 0.1.11 换行 longggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg newlongggggggggggggggggggggg gggggggggggggggggggggggggggg(我后面有两个空格) gggggggggggggggggggggggggggg aaa&lt;br/&gt;&lt;br/&gt;bbb&lt;br/&gt;&lt;br/&gt; longggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggggg newlongggggggggggggggggggggg gggggggggggggggggggggggggggg(我后面有两个空格) gggggggggggggggggggggggggggg aaabbb 0.1.12 表格 Name | Lunch order | Spicy | Owes ------- | :----------------: | :---------- | ---------: Joan | saag paneer | medium | $11 Sally | vindaloo | mild | $14 Erin | lamb madras | HOT | $5 冒号**:**表示对齐方式, 没有默认居右 Name Lunch order Spicy Owes Joan saag paneer medium $11 Sally vindaloo mild $14 Erin lamb madras HOT $5 冒号:表示对齐方式, 没有默认居右 0.1.13 分割线 ______ 0.1.14 反斜杠 符号|名称 :---:|:--- \\\\ | 反斜线 \\` | 反引号 \\* | 星号 \\_ | 底线 \\{ |花括号 \\[ |方括号 \\( |括弧 \\# | 井字号 \\+ | 加号 \\- | 减号 \\. | 英文句点 \\! | 惊叹号 符号 名称 \\ 反斜线 ` 反引号 * 星号 _ 底线 { 花括号 [ 方括号 ( 括弧 # 井字号 + 加号 - 减号 . 英文句点 ! 惊叹号","tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://qrsforever.github.io/tags/Markdown/"}]},{"title":"(原创)匿名共享内存之文件描述符传递","date":"2016-06-24T07:52:36.000Z","path":"2016/06/24/Note/Android/Ashmem/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} a.sourceLine { display: inline-block; line-height: 1.25; } a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; } a.sourceLine:empty { height: 1.2em; } .sourceCode { overflow: visible; } code.sourceCode { white-space: pre; position: relative; } div.sourceCode { margin: 1em 0; } pre.sourceCode { margin: 0; } @media screen { div.sourceCode { overflow: auto; } } @media print { code.sourceCode { white-space: pre-wrap; } a.sourceLine { text-indent: -1em; padding-left: 1em; } } pre.numberSource a.sourceLine { position: relative; left: -4em; } pre.numberSource a.sourceLine::before { content: attr(title); position: relative; left: -1em; text-align: right; vertical-align: baseline; border: none; pointer-events: all; display: inline-block; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; padding: 0 4px; width: 4em; color: #aaaaaa; } pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa; padding-left: 4px; } div.sourceCode { } @media screen { a.sourceLine::before { text-decoration: underline; } } code span.al { color: #ff0000; } /* Alert */ code span.an { color: #008000; } /* Annotation */ code span.at { } /* Attribute */ code span.bu { } /* BuiltIn */ code span.cf { color: #0000ff; } /* ControlFlow */ code span.ch { color: #008080; } /* Char */ code span.cn { } /* Constant */ code span.co { color: #008000; } /* Comment */ code span.cv { color: #008000; } /* CommentVar */ code span.do { color: #008000; } /* Documentation */ code span.er { color: #ff0000; font-weight: bold; } /* Error */ code span.ex { } /* Extension */ code span.im { } /* Import */ code span.in { color: #008000; } /* Information */ code span.kw { color: #0000ff; } /* Keyword */ code span.op { } /* Operator */ code span.ot { color: #ff4000; } /* Other */ code span.pp { color: #ff4000; } /* Preprocessor */ code span.sc { color: #008080; } /* SpecialChar */ code span.ss { color: #008080; } /* SpecialString */ code span.st { color: #008080; } /* String */ code span.va { } /* Variable */ code span.vs { color: #008080; } /* VerbatimString */ code span.wa { color: #008000; font-weight: bold; } /* Warning */ 目录树 源码 2.1 Common.h 2.2 AshmemServer.cpp 2.3 AshmemClient.cpp 2.4 Android.mk 3. 输出结果 3.1 /data/AshmemServer 3.2 /data/AshmemClient 4. 总结 源码下载 0.1 目录树 Ashmem/ `-- jni |-- Android.mk |-- AshmemClient.cpp |-- AshmemServer.cpp `-- Common.h 0.2 源码 0.2.1 2.1 Common.h #ifndef __Common__H_ #define __Common__H_ #define ASHMEM_SIZE 1024 #define ASHEME_DEV &quot;/dev/ashmem&quot; #define OPEN_FILE &quot;/var/_cmsg_file&quot; #define CLIENT_SOCK_PATH &quot;/var/_client_sock&quot; #define SERVER_SOCK_PATH &quot;/var/_server_sock&quot; #define TEST_STRING &quot;HelloWorld&quot; #endif 0.2.2 2.2 AshmemServer.cpp #include &lt;stdio.h&gt; #include &lt;stddef.h&gt; #include &lt;fcntl.h&gt; #include &lt;unistd.h&gt; #include &lt;sys/socket.h&gt; #include &lt;sys/stat.h&gt; #include &lt;sys/types.h&gt; #include &lt;sys/un.h&gt; #include &lt;sys/mman.h&gt; #include &lt;errno.h&gt; #include &lt;sys/uio.h&gt; #include &lt;linux/ashmem.h&gt; #include &quot;Common.h&quot; int main(int argc, char const* argv[]) { int sockfd = -1, clientfd = -1, memfd = -1, testfd = -1; int len = 0, ret = 0, err = -1, readn = 0; char buf1[5]; char buf2[4]; char* mapaddr = 0; struct sockaddr_un un; struct cmsghdr* cmptr = 0; struct cmsghdr* pcmsg = 0; struct iovec iov[2]; struct msghdr msg; sockfd = socket(PF_UNIX, SOCK_STREAM, 0); if (sockfd &lt; 0) return err; unlink(SERVER_SOCK_PATH); memset(&amp;un, 0, sizeof(un)); un.sun_family = AF_UNIX; strcpy(un.sun_path, SERVER_SOCK_PATH); len = offsetof(struct sockaddr_un, sun_path) + strlen(SERVER_SOCK_PATH); ret = bind(sockfd, (struct sockaddr*)&amp;un, len); if (ret &lt; 0) { err = -2; goto Err; } ret = listen(sockfd, 1); if (ret &lt; 0) { err = -3; goto Err; } len = sizeof(un); memset(&amp;un, 0, len); clientfd = accept(sockfd, (struct sockaddr*)&amp;un, &amp;len); if (clientfd &lt; 0) { err = -4; goto Err; } printf(&quot;accept client fd = %d\\n&quot;, clientfd); cmptr = (struct cmsghdr*)malloc(CMSG_SPACE(sizeof(int))); if (!cmptr) { err = -5; goto Err; } iov[0].iov_base = buf1; iov[0].iov_len = sizeof(buf1); iov[1].iov_base = buf2; iov[1].iov_len = sizeof(buf2); msg.msg_iov = iov; msg.msg_iovlen = 2; msg.msg_name = 0; msg.msg_namelen = 0; msg.msg_control = cmptr; msg.msg_controllen = CMSG_SPACE(sizeof(int)); readn = recvmsg(clientfd, &amp;msg, 0); if (readn &lt;= 0) { err = -6; printf(&quot;Errno = %d %s\\n&quot;, errno, strerror(errno)); goto Err; } printf(&quot;buf1 = %s\\nbuf2 = %s\\n&quot;, buf1, buf2); pcmsg = CMSG_FIRSTHDR(&amp;msg); while (pcmsg) { if ((pcmsg-&gt;cmsg_level == SOL_SOCKET) &amp;&amp; (pcmsg-&gt;cmsg_type == SCM_RIGHTS)) { if (pcmsg-&gt;cmsg_len == CMSG_LEN(sizeof(int))) { memfd = *(int*)CMSG_DATA(pcmsg); break; } } pcmsg = CMSG_NXTHDR(&amp;msg, pcmsg); } if (memfd &gt; 0) { mapaddr = (char*)mmap(0, ASHMEM_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, memfd, 0); printf(&quot;get memfd = %d mapaddr = %p\\n&quot;, memfd, mapaddr); } memcpy(mapaddr, TEST_STRING, strlen(TEST_STRING)); sleep(5); free(cmptr); return 0; Err: printf(&quot;error = %d\\n&quot;, err); close(sockfd); return err; } 0.2.3 2.3 AshmemClient.cpp #include &lt;stdio.h&gt; #include &lt;stddef.h&gt; #include &lt;fcntl.h&gt; #include &lt;unistd.h&gt; #include &lt;sys/socket.h&gt; #include &lt;sys/stat.h&gt; #include &lt;sys/mman.h&gt; #include &lt;sys/types.h&gt; #include &lt;sys/un.h&gt; #include &lt;sys/uio.h&gt; #include &lt;linux/ashmem.h&gt; #include &quot;Common.h&quot; int main(int argc, char const* argv[]) { int sockfd = -1, memfd = -1, testfd = -1, err = -1; int len =0, ret = 0, writen = 0; char buf1[5] = {&quot;file&quot;}; char buf2[4] = {&quot;map&quot;}; char* mapaddr = 0; char content[32] = { 0 }; struct sockaddr_un un; struct cmsghdr* cmptr = 0; struct cmsghdr* pcmsg = 0; struct iovec iov[2]; struct msghdr msg; sockfd = socket(PF_UNIX, SOCK_STREAM, 0); if (sockfd &lt; 0) return err; unlink(CLIENT_SOCK_PATH); memset(&amp;un, 0, sizeof(un)); un.sun_family = AF_UNIX; strcpy(un.sun_path, CLIENT_SOCK_PATH); len = offsetof(struct sockaddr_un, sun_path) + strlen(CLIENT_SOCK_PATH); ret = bind(sockfd, (struct sockaddr*)&amp;un, len); if (ret &lt; 0) { err = -2; goto Err; } memset(&amp;un, 0, sizeof(un)); un.sun_family = AF_UNIX; strcpy(un.sun_path, SERVER_SOCK_PATH); len = offsetof(struct sockaddr_un, sun_path) + strlen(SERVER_SOCK_PATH); ret = connect(sockfd, (struct sockaddr*)&amp;un, len); if (ret &lt; 0) { err = -3; goto Err; } testfd = open(OPEN_FILE, O_CREAT|O_RDWR, 0777); memfd = open(ASHEME_DEV, O_RDWR); printf(&quot;open %s fd = %d\\n&quot;, ASHEME_DEV, memfd); if (testfd &lt; 0 || memfd &lt; 0) { err = -4; goto Err; } ret = ioctl(memfd, ASHMEM_SET_SIZE, ASHMEM_SIZE); if (ret &lt; 0) { err = -5; goto Err; } mapaddr = (char*)mmap(0, ASHMEM_SIZE, PROT_READ|PROT_WRITE, MAP_SHARED, memfd, 0); printf(&quot;mmap addr = %p\\n&quot;, mapaddr); printf(&quot;sizeof(short) = %d\\n&quot;, sizeof(short)); printf(&quot;CMSG_ALIGN(sizeof(short)) = %d\\n&quot;, CMSG_ALIGN(sizeof(short))); printf(&quot;CMSG_LEN(sizeof(short)) = %d\\n&quot;, CMSG_LEN(sizeof(short))); printf(&quot;CMSG_SPACE(sizeof(short)) = %d\\n&quot;, CMSG_SPACE(sizeof(short))); cmptr = (struct cmsghdr*)malloc(2*CMSG_SPACE(sizeof(int))); if (!cmptr) { err = -6; goto Err; } printf(&quot;cmptr = %p\\n&quot;, cmptr); iov[0].iov_base = buf1; iov[0].iov_len = sizeof(buf1); iov[1].iov_base = buf2; iov[1].iov_len = sizeof(buf2); msg.msg_iov = iov; msg.msg_iovlen = 2; msg.msg_name = 0; msg.msg_namelen = 0; msg.msg_control = cmptr; msg.msg_controllen = 2*CMSG_SPACE(sizeof(int)); pcmsg = CMSG_FIRSTHDR(&amp;msg); printf(&quot;first pcmsg = %p\\n&quot;, pcmsg); pcmsg-&gt;cmsg_level = SOL_SOCKET; pcmsg-&gt;cmsg_type = SCM_RIGHTS; pcmsg-&gt;cmsg_len = CMSG_LEN(sizeof(int)); *(int*)CMSG_DATA(pcmsg) = memfd; //TODO something is wrong! pcmsg = CMSG_NXTHDR(&amp;msg, pcmsg); printf(&quot;next pcmsg = %p\\n&quot;, pcmsg); pcmsg-&gt;cmsg_level = SOL_SOCKET; pcmsg-&gt;cmsg_type = SCM_RIGHTS; pcmsg-&gt;cmsg_len = CMSG_LEN(sizeof(int)); *(int*)CMSG_DATA(pcmsg) = testfd; writen = sendmsg(sockfd, &amp;msg, 0); printf(&quot;sendmsg write n = %d (sizeof(buf1) + sizeof(buf2) = %d)\\n&quot;, writen, sizeof(buf1) + sizeof(buf2)); sleep(2); memcpy(content, mapaddr, strlen(TEST_STRING)); printf(&quot;content = %s\\n&quot;, content); close(sockfd); free(cmptr); return 0; Err: printf(&quot;error : %d\\n&quot;, err); close(sockfd); return -1; } 0.2.4 2.4 Android.mk LOCAL_PATH := $(call my-dir) JNI_RES_PATH := /opt/android/jni include $(CLEAR_VARS) LOCAL_MODULE_TAGS := eng LOCAL_MODULE := AshmemServer $(info &quot;Build ${LOCAL_MODULE}) LOCAL_SRC_FILES += AshmemServer.cpp LOCAL_C_INCLUDES += ${JNI_RES_PATH}/include ${JNI_RES_PATH}/include/bionic/libc/kernel/common/ LOCAL_C_INCLUDES += ${JNI_RES_PATH}/include/bionic/libc/include/ LOCAL_CPPFLAGS += -DDEBUG -DHAVE_ANDROID_OS -DHAVE_SYS_UIO_H # 编译条件以及第三方库: -lxml2 LOCAL_LDFLAGS += -L${JNI_RES_PATH}/libs -O2 # 系统库 LOCAL_LDLIBS += -lcutils -lutils # 动态库模块, 如果列出的库不存在会去编译 eg. libxxx LOCAL_SHARED_LIBRARIES += # ALL_DEFAULT_INSTALLED_MODULES += $(LOCAL_MODULE) # 目标输出类型 include $(BUILD_EXECUTABLE) include $(CLEAR_VARS) LOCAL_MODULE_TAGS := eng LOCAL_MODULE := AshmemClient $(info &quot;Build ${LOCAL_MODULE}) LOCAL_SRC_FILES += AshmemClient.cpp LOCAL_C_INCLUDES += ${JNI_RES_PATH}/include ${JNI_RES_PATH}/include/bionic/libc/kernel/common/ LOCAL_C_INCLUDES += ${JNI_RES_PATH}/include/bionic/libc/include/ LOCAL_CPPFLAGS += -DDEBUG -DHAVE_ANDROID_OS -DHAVE_SYS_UIO_H # 编译条件以及第三方库: -lxml2 LOCAL_LDFLAGS += -L${JNI_RES_PATH}/libs -O2 # 系统库 LOCAL_LDLIBS += -lcutils -lutils # 动态库模块, 如果列出的库不存在会去编译 eg. libxxx LOCAL_SHARED_LIBRARIES += # ALL_DEFAULT_INSTALLED_MODULES += $(LOCAL_MODULE) include $(BUILD_EXECUTABLE) 0.3 3. 输出结果 0.3.1 3.1 /data/AshmemServer accept client fd = 4 buf1 = file buf2 = map get memfd = 5 mapaddr = 0x76eb6000 0.3.2 3.2 /data/AshmemClient open /dev/ashmem fd = 5 mmap addr = 0x76e7a000 sizeof(short) = 2 CMSG_ALIGN(sizeof(short)) = 4 CMSG_LEN(sizeof(short)) = 14 CMSG_SPACE(sizeof(short)) = 16 cmptr = 0xc9e0a8 first pcmsg = 0xc9e0a8 next pcmsg = 0xc9e0b8 sendmsg write n = 9 (sizeof(buf1) + sizeof(buf2) = 9) content = HelloWorld 0.4 4. 总结 Android匿名共享内存多个进程实现共享, 那么每个进程都要拿到这个/dev/ashmem打开的文件描述符 通过msghdr这个结构体加上sendmsg和recvmsg实现文件描述符的进程间传递 之所以要进程间传递文件描述符,是因为\"匿名\"二字, 如果通讯的每个进程都打开/dev/ashmem文件是实现不了的. sendmsg是怎样把文件描述符传递的, 是不是有点像dup或dup2, 复制现存的文件描述符, 使他们指向同一个file结构体(本进程内)","tags":[{"name":"Android","slug":"Android","permalink":"https://qrsforever.github.io/tags/Android/"}]},{"title":"(原创)Binder简图-草稿","date":"2016-03-24T07:50:13.000Z","path":"2016/03/24/Note/Android/BinderDriver/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 高清图 BinderDriver 1 总结: Java层的Binder是通过在底层创建对应的本地Binder, 然后就和C++层一样了. Java层保存本地的一个引用mObject即 可. 代理服务是通过mRemote(BpBinder)中mHander找到对应的本地服务. mHandler的由来: SMgrProxy.addService(\"Tn\", new Tnatvie()),这个过程就在Binder驱动中创建了Binder实体, 而 且SMgr本地服务需要管理存储这个Tnative服务, 驱动同时就创建了Binder引用对象, 这个过程就产生了handler值(加 1操作), Smgr本地服务也是保存该引用. IPCThreadState是唯一能和Binder驱动对话的类, 所以对上下文数据的转换(为Binder驱动认识的数量类型), 就是在 该类中完成.","tags":[{"name":"Android","slug":"Android","permalink":"https://qrsforever.github.io/tags/Android/"}]},{"title":"(原创)Java层添加服务的Binder流程","date":"2016-03-17T14:06:38.000Z","path":"2016/03/17/Note/Android/Binder-Add-Service/","text":"dummy code{white-space: pre-wrap;} span.smallcaps{font-variant: small-caps;} span.underline{text-decoration: underline;} div.column{display: inline-block; vertical-align: top; width: 50%;} 高清图 服务添加流程","tags":[{"name":"Android","slug":"Android","permalink":"https://qrsforever.github.io/tags/Android/"}]}]